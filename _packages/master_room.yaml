###########################################
#
# Master Room
# Integrations, Helper Logics, Scripts, Automations
#
# - Time-Based Position Blind
# - Heating/Lighting/TV slideshow on based on motion sensors
# - Disable the entering automation if people present in the bedroom
# - Heating Valve Calibration automation
# - Lighting on-off based on motion sensors
# - Lighting/Curtain on-off based on buttons
# - Lighting/TV off based on time
# - Sonos Speakers Grouping/Ungrouping Based On Motion Sensor
# - TV auto turn-off based on motion sensors
#
###########################################

###########################################
#
# Logger for debug
#
###########################################
#logger:
#  default: warning
#  logs:
#    #homeassistant.components.tado: debug
#    blueprints.tado.offset: debug

###########################################
#
# Integration Instantiated in yaml
#
###########################################

# Use smartthings to port MagicHome Pro LEDs
# Added MagicHome LEDs
# This is a third-party custom component on flux_led
# instead of the official one from HA
#light magic_home:
#   - platform: flux_led
#     devices:
#       192.168.1.52:
#         name: Master Room Bed LED Flux LED
#         mode: "rgb"
#       192.168.1.58:
#         name: Master Room TV LED Flux LED
#         mode: "rgb"

###########################################
#
# Custom Entities
#
# These entities cannot have alias instantiations
# e.g. "input_select tv" will not work
#
###########################################

# Valve Setting
input_text:
  master_room_valve_log:
    name: Master Room Valve Log

input_number:
  master_room_default_temperature:
    name: Master Room Default Temperature
    min: 18
    max: 25
    step: 0.5

# Temperature Sensor
template:
  - sensor:
      - name: "Master Room Temperature Sensor"
        unit_of_measurement: "Â°C"
        state: >
          {% set sensor_1 = states('sensor.master_room_temperature_sensor_1') | float | round(1) %}
          {% set sensor_2 = states('sensor.master_room_temperature_sensor_2') | float | round(1) %}
          {% if sensor_1 < '1.0' or sensor_2 < '1.0' or (sensor_1 + sensor_2) < '1.0' %}
            20.0
          {% else %}
            {{ ((sensor_1 + sensor_2) / 2) | round(1) }}
          {% endif %}

group:
  master_room_motion:
    name: Master Room Motion
    entities:
      - binary_sensor.master_room_bed_motion_sensor_motion
      - binary_sensor.master_room_entrance_motion_sensor
      - binary_sensor.master_room_stair_motion_sensor_motion
      - binary_sensor.master_room_dressing_table_motion_sensor_motion
      - binary_sensor.master_room_tv_motion_sensor_motion
      - binary_sensor.master_room_drawer_motion_sensor_motion

  master_room_stair_motion:
    name: Master Room Stair Motion
    entities:
      - binary_sensor.master_room_entrance_motion_sensor
      - binary_sensor.master_room_stair_motion_sensor_motion

  master_room_appliances:
    name: Master Room Appliances
    entities:
      - climate.master_room
      - light.master_room_lamps
      - light.master_room_leds
      - light.master_room_entrance_led_light
      - light.master_room_ceiling_lights
      - switch.master_room_dressing_table_light      
      - cover.master_room_blind
      - cover.master_room_curtain      
      - media_player.master_room_tv
      

# Custom Thermostat
climate:
  - platform: generic_thermostat
    name: Master Room Air Conditioner
    heater: switch.air_conditioner
    ac_mode: true
    target_sensor: sensor.master_room_temperature_sensor
    precision: 0.5
    min_temp: 10
    max_temp: 25
    cold_tolerance: 0.1
    hot_tolerance: 0.1
    initial_hvac_mode: "off"

# Custom Variables
input_boolean:
  # Tuya Curtains Variables
  master_room_left_blind_moving_in_progress:
    name: "Master Room Left Blind Moving In Progress"
    initial: "off"

  master_room_left_blind_is_open:
    name: "Master Room Left Blind Is Open"

  master_room_right_blind_moving_in_progress:
    name: "Master Room Right Blind Moving In Progress"
    initial: "off"

  master_room_right_blind_is_open:
    name: "Master Room Right Blind Is Open"

  master_room_curtain_moving_in_progress:
    name: "Master Room Curtain Moving In Progress"
    initial: "off"

  master_room_curtain_is_open:
    name: "Master Room Curtain Is Open"

  # Custom Thermostat Switch
  #  master_room_valve_switch:
  #    name: "Master Room Valve Switch"

  # First Time Presence in a Room
  master_room_short_presence: # done
    name: "Master Room Short Presence"
    initial: "off"

  master_room_slideshow_enable:
    name: "Master Room Slideshow Enable"

# Fire TV
media_player:
  - platform: androidtv
    name: Master Room Fire TV
    host: 192.168.1.34

# TV picture mode
input_select:
  master_room_tv_picture_mode:
    name: Master Room TV Picture Mode
    options:
      - Dynamic
      - Standard
      - Natural
      - Movie
      - FILMMAKER MODE

# TV power
switch:
  - platform: template
    switches:
      master_room_tv_power:
        value_template: "{{ is_state('media_player.master_room_tv', 'on') }}"
        turn_on:
          - service: script.master_room_tv_turn_on
        turn_off:
          - service: script.master_room_tv_turn_off

###############################################
# Heating helper variables
# Heating script/automation based on motion sensors
# Long presence automation
###############################################
automation heating:
  - alias: HL-MR-M Master Room Heating/Lighting Off If No Person
    id: "1599910386760"
    description: ""
    trigger:
      - platform: state
        from: "on"
        to: "off"
        for: 00:15:00
        entity_id: group.master_room_motion
      - minutes: /5
        platform: time_pattern
    condition:
      - condition: or
        conditions:
          # in daytime, turn off if no person for 15 min
          - condition: and
            conditions:
              - after: "10:00:00"
                before: "22:00:00"
                condition: time
              - condition: state
                entity_id: group.master_room_motion
                for: 00:15:00
                state: "off"
          # in nighttime, turn off and re-eable automation
          #               if no person for 2 hours
          - condition: and
            conditions:
              - after: "22:00:00"
                before: "10:00:00"
                condition: time
              - condition: state
                entity_id: group.master_room_motion
                for: 02:00:00
                state: "off"
    action:
      # Heating scheduler off and turn on entering automation
      - service: automation.turn_off
        entity_id: automation.master_room_heating_scheduler
      - service: climate.set_hvac_mode
        entity_id: climate.master_room
        data:
          hvac_mode: "off"
      # Auto heating/lighting on
      # Turn off lights/curtains/tv
      - service: automation.turn_on
        entity_id:
          - automation.master_room_heating_on_if_people_present
          - automation.master_room_ceiling_lights_on_or_open_curtain_if_entering_room
      - service: script.turn_on
        entity_id:
          - script.master_room_lights_turn_off
          - script.master_room_close_all_curtains
          - script.master_room_tv_turn_off

  - alias: H-MR-M Master Room Turn On Schedule If People Present
    id: "1543510386760"
    description: "automation.master_room_heating_on_if_people_present"
    use_blueprint:
      path: room_delayed_action.yaml
      input:
        binary_sensor_motion_sensors: group.master_room_motion
        input_boolean_short_presence: input_boolean.master_room_short_presence
        automation_this_automation_entity: automation.master_room_heating_on_if_people_present
        automations_to_be_triggered_and_on: automation.master_room_heating_scheduler
        #scripts_to_be_run: script.master_room_tv_slideshow

  # If scheduled normally, set heating temperature
  - alias: H-MR Master Room Heating Scheduler
    id: "1599909948789"
    description: "automation.master_room_heating_scheduler"
    trigger:
      - platform: state
        entity_id: input_number.master_room_default_temperature
    action:
      #- condition: state
      #  entity_id: climate.master_room
      #  state: 'heat'
      #  for: "00:01:00"
      - data:
          temperature: "{{states('input_number.master_room_default_temperature')}}"
          hvac_mode: "heat"
        entity_id: climate.master_room
        service: climate.set_temperature

  - alias: H-MR Master Room Valve Calibrate Temperature
    id: "1543517389461"
    use_blueprint:
      path: calibrate_valve_temperature.yaml
      input:
        tado_valve_entity: climate.master_room
        external_temperature_sensor_entity: sensor.master_room_temperature_sensor
        log_input_text_entity: input_text.master_room_valve_log

  #################################################################
  # Disable the entering automation if people present in the bedroom
  #################################################################
  - alias: HL-MR-T Master Room Disable The Entering Room Automation If People Present
    id: "1599110313838"
    trigger:
      - platform: state
        to: "on"
        entity_id:
          - binary_sensor.master_room_bed_motion_sensor_motion
          - binary_sensor.master_room_stair_motion_sensor_motion
          - binary_sensor.master_room_dressing_table_motion_sensor_motion
          - binary_sensor.master_room_tv_motion_sensor_motion
          - binary_sensor.master_room_drawer_motion_sensor_motion
    condition: []
    action:
      - delay: 00:00:05
      - service: automation.turn_off
        entity_id:
          - automation.master_room_ceiling_lights_on_or_open_curtain_if_entering_room
      - delay: 00:03:00
      # IF sleeping in the daytime caused the issue, i.e. entering automation is on,
      # turn the heating back on and turn off the entering automations
      - choose:
          - conditions:
              - condition: state
                entity_id: automation.master_room_heating_on_if_people_present
                state: "on"
            sequence:
              - service: automation.trigger
                entity_id: automation.master_room_heating_on_if_people_present
              # Turn on heating if it is off
              - service: automation.trigger
                entity_id: automation.master_room_heating_scheduler
      # Turn off all entering automations
      - service: automation.turn_off
        entity_id:
          - automation.master_room_ceiling_lights_on_or_open_curtain_if_entering_room
          - automation.master_room_heating_on_if_people_present

  ###############################################
  # Curtain autmation based on time
  ###############################################
  - alias: LT-MR-T Master Room Open/Close Curtains Around Sun set Based On Balcony Door State
    id: "1599110386763"
    trigger:
      - platform: state
        entity_id: sun.sun
        from: "above_horizon"
        to: "below_horizon"
    action:
      # IF balcony door open for ventilation to cool down the room
      #    in the summer for more than 30min,
      #    open curtain for 2 hours
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.master_room_balcony_door
                state: "on"
                for: "00:30:00"
            sequence:
              - delay: "00:15:00"
              - service: script.master_room_open_all_curtains
              - delay: "02:00:00"
              - service: script.master_room_close_all_curtains
        # ELSE close curtain 1 hours after sunset
        default:
          - delay: "01:00:00"
          # Turn Off lights and curtains
          - service: script.master_room_close_all_curtains
          - delay: "00:00:05"
          - service: script.master_room_close_all_curtains
          - delay: "00:00:05"
          - service: script.master_room_close_all_curtains
          - delay: "00:00:05"
          - service: script.master_room_close_all_curtains

###############################################
#
# Light
# groups
# script - on/off/color
# automation based on motion sensors/time
#
###############################################
# Groups
light group:
  - platform: group
    name: Master Room LEDs
    entities:
      - light.master_room_bed_led
      - light.master_room_tv_led
      - light.master_room_drawer_led

script light:
  master_room_bedside_lights_turn_off:
    alias: Master Room Bedside Lights Turn Off
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_off
        entity_id:
          - light.master_room_lamps

  master_room_bedside_lights_turn_on:
    alias: Master Room Bedside Lights Turn On
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_on
        entity_id:
          - light.master_room_lamps

  master_room_bedside_lights_toggle:
    alias: Master Room Bedside Lights Toggle
    max: 100
    mode: parallel
    sequence:
      - service: light.toggle
        entity_id:
          - light.master_room_lamps

  master_room_ceiling_lights_set_3000k:
    alias: Master Room Ceiling Lights Set 3000k
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_on
        entity_id:
          - light.master_room_ceiling_lights
        data:
          brightness: 255
          kelvin: 4000

  master_room_ceiling_lights_turn_on:
    alias: Master Room Ceiling Lights Turn On
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_on
        entity_id:
          - light.master_room_ceiling_lights

  master_room_ceiling_lights_turn_off:
    alias: Master Room Ceiling Lights Turn Off
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_off
        entity_id:
          - light.master_room_ceiling_lights

  master_room_bed_led_set_dark_yellow:
    alias: Master Room Bed LED Strip Set Dark Yellow
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_on
        entity_id: light.master_room_leds
        data:
          brightness: 27
          rgb_color: [255, 47, 0]

  master_room_bed_led_set_movie_blue:
    alias: Master Room Bed LED Strip Set Movie Blue
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_on
        entity_id: light.master_room_leds
        data:
          brightness: 255
          rgb_color: [102, 102, 255]

  master_room_lamps_set_3000k:
    alias: Master Room Lamps Set To 3000k
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_on
        entity_id:
          - light.master_room_lamps
        data:
          brightness: 255
          kelvin: 4000

  master_room_leds_set_night_scene:
    alias: Master Room LEDs set night scene
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_on
        entity_id:
          - light.master_room_bed_led
          - light.master_room_drawer_led
        data:
          brightness: 255
          rgb_color: [255, 101, 49]
      - service: light.turn_on
        entity_id:
          - light.master_room_tv_led
        data:
          brightness: 255
          rgb_color: [91, 255, 35]

  master_room_lights_turn_off:
    alias: Master Room Lights Turn Off
    max: 100
    mode: parallel
    sequence:
      - service: light.turn_off
        entity_id:
          - light.master_room_leds
          - light.master_room_ceiling_lights
      - service: switch.turn_off
        entity_id:
          - switch.master_room_dressing_table_light
      - service: script.master_room_bedside_lights_turn_off

###############################################
# Lighting/Curtain Automation based on motion sensors/time
###############################################
automation light:
  - alias: L-MR-M Master Room Ceiling Lighting On Or Open Curtains If Entering to Master Room
    id: "1599909943779"
    description: "automation.master_room_ceiling_lights_on_or_open_curtain_if_entering_room"
    trigger:
      - entity_id: binary_sensor.master_room_entrance_motion_sensor
        platform: state
        to: "on"
    action:
      - service: automation.turn_off
        entity_id: automation.master_room_ceiling_lights_on_or_open_curtain_if_entering_room
        data:
          stop_actions: false
      - choose:
          # IF - in daytime
          #    - not the hot afternoons in summer
          #    not (i.e. outdoor temperature above 15 & in the afternoon & in the summer)
          #.   then open curtain
          - conditions:
              # in daytime
              - condition: state
                entity_id: input_select.indoor_brightness
                state: bright
              # not the hot afternoons in summer
              - condition: not
                conditions:
                  - condition: and
                    conditions:
                      # Outdoor temp above 20
                      - condition: numeric_state
                        entity_id: sensor.cambridge_city_airport_temperature
                        above: "19"
                      # In the afternoon
                      - condition: time
                        after: "12:00:00"
                        before: "20:00:00"
                      # Summer
                      - condition: template
                        value_template: "{{ now().month > 4 and now().month < 9 }}"
            sequence:
              - service: script.master_room_open_all_curtains
        # ELSE - in nighttime/hot days in summer afternoon
        #.       turn on master room ceiling/bed lights
        default:
          # only turn on bright lights on common non-sleeping times
          - choose:
              - conditions:
                  - condition: time
                    after: "10:00:00"
                    before: "22:30:00"
                sequence:
                  - service: script.master_room_bedside_lights_turn_on
                  - service: script.master_room_ceiling_lights_turn_on
            default:
              - service: script.master_room_leds_set_night_scene

  - alias: L-MR-M Master Room Entrance/Corridor LED Light On If People Present
    description: ""
    trigger:
      - entity_id: group.master_room_stair_motion
        platform: state
        to: "on"
    action:
      - service: light.turn_on
        entity_id: light.master_room_entrance_led_light
      - choose:
          # IF - in the nighttime, also turn on corridor lights
          - conditions:
              - condition: state
                entity_id: input_select.indoor_brightness
                state: dark
            sequence:
              - service: script.corridor_lights_turn_on

  - alias: L-MR-M Master Room Entrance Lights Off If No Person
    description: ""
    trigger:
      - entity_id: group.master_room_stair_motion
        platform: state
        from: "on"
        to: "off"
        for: 00:02:00
      - minutes: /5
        platform: time_pattern
    condition:
      - entity_id: group.master_room_stair_motion
        condition: state
        state: "off"
        for: 00:02:00
    action:
      - service: light.turn_off
        entity_id: light.master_room_entrance_led_light

  - alias: L-MR-M Master Room Balcony Lights On If Door Open
    id: "1615068441570"
    description: ""
    mode: restart
    trigger:
      - entity_id: binary_sensor.master_room_balcony_door
        platform: state
        to: "on"
    condition:
      - condition: state
        entity_id: input_select.indoor_brightness
        state: dark
    action:
      - service: switch.turn_on
        entity_id: switch.master_room_balcony_wall_light
      - delay: "01:00:00"
      - service: switch.turn_off
        entity_id: switch.master_room_balcony_wall_light

  - alias: L-MR-M Master Room Balcony Lights Off If Door Close
    description: ""
    trigger:
      - entity_id: binary_sensor.master_room_balcony_door
        platform: state
        from: "on"
        to: "off"
        for: 00:10:00
      - minutes: /5
        platform: time_pattern
    condition:
      - entity_id: binary_sensor.master_room_balcony_door
        condition: state
        state: "off"
        for: 00:10:00
    action:
      - service: switch.turn_off
        entity_id: switch.master_room_balcony_wall_light

  - alias: L-MR-M Master Room Dressing Table On If People Present
    id: "1603640027683"
    description: ""
    trigger:
      - entity_id: binary_sensor.master_room_dressing_table_motion_sensor_motion
        platform: state
        to: "on"
    condition: []
    action:
      - entity_id: switch.master_room_dressing_table_light
        service: switch.turn_on

  - alias: L-MR-M Master Room Dressing Table Off If No Person For 2 Min
    id: "1603640027689"
    description: ""
    trigger:
      - entity_id: binary_sensor.master_room_dressing_table_motion_sensor_motion
        platform: state
        from: "on"
        to: "off"
        for: 00:02:00
      - minutes: /5
        platform: time_pattern
    condition:
      - entity_id: binary_sensor.master_room_dressing_table_motion_sensor_motion
        condition: state
        state: "off"
        for: 00:02:00
    action:
      - data: {}
        entity_id: switch.master_room_dressing_table_light
        service: switch.turn_off

  - alias: L-MR-M Master Room Bed LED Strip On For 3 Min If People Are Walking In the Dark
    id: "1603640027693"
    description: ""
    mode: restart
    trigger:
      - entity_id:
          - binary_sensor.master_room_entrance_motion_sensor
          - binary_sensor.master_room_stair_motion_sensor_motion
          - binary_sensor.master_room_dressing_table_motion_sensor_motion
          - binary_sensor.master_room_tv_motion_sensor_motion
          - binary_sensor.master_room_drawer_motion_sensor_motion
        platform: state
        to: "on"
    condition:
      # In the night or curtain shut
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.indoor_brightness
            state: dark
          - entity_id:
              - cover.master_room_blind
              - cover.master_room_curtain
            condition: state
            state: "closed"
      # And all lights off in the master room
      - entity_id: light.master_room_lamps
        condition: state
        state: "off"
      - entity_id: light.master_room_leds
        condition: state
        state: "off"
      - entity_id: light.master_room_ceiling_lights
        condition: state
        state: "off"
      - entity_id: switch.master_room_dressing_table_light
        condition: state
        state: "off"
    action:
      # Turn on bed LED on night mode for 2 min to walk to toilet or back from toilet
      - service: script.master_room_bed_led_set_dark_yellow
      - delay: "00:03:00"
      - service: light.turn_off
        entity_id: light.master_room_leds

  - alias: L-MR-T Master Room Turn Off all Lights/Curtains/TV at 3/4/5am
    description: ""
    trigger:
      - at: "03:00:00"
        platform: time
      - at: "04:00:00"
        platform: time
      - at: "05:00:00"
        platform: time
    action:
      # Turn Off lights and curtains
      - service: script.master_room_close_all_curtains
      - service: script.master_room_lights_turn_off
      # Turn Off TV
      - service: switch.turn_off
        entity_id: switch.master_room_tv
      # Tuya blinds sometimes are not receiving commands - make sure it is properly executed
      - delay: "00:02:00"
      - service: script.master_room_close_all_curtains
      - delay: "00:02:00"
      - service: script.master_room_close_all_curtains
      - delay: "00:02:00"
      - service: script.master_room_close_all_curtains

##########################################
# Blind/Curtain
#
# Timed-based-position blind integration
# Scripts - open/close/status
# Automation - based on motions/buttons
##########################################
# Blinds
cover group:
  - platform: group
    name: Master Room Blind
    entities:
      - cover.master_room_blind_1
      - cover.master_room_blind_2

cover timed_blind:
  - platform: cover_rf_time_based
    devices:
      master_room_blind_1:
        name: Master Room Blind 1
        travelling_time_up: 95
        travelling_time_down: 95
        close_script_entity_id: script.master_room_blind_left_tuya_close
        stop_script_entity_id: script.master_room_blind_left_tuya_stop
        open_script_entity_id: script.master_room_blind_left_tuya_open

  - platform: cover_rf_time_based
    devices:
      master_room_blind_2:
        name: Master Room Blind 2
        travelling_time_up: 95
        travelling_time_down: 95
        close_script_entity_id: script.master_room_blind_right_tuya_close
        stop_script_entity_id: script.master_room_blind_right_tuya_stop
        open_script_entity_id: script.master_room_blind_right_tuya_open

script blind_script:
  master_room_open_blind:
    alias: Master Room Open Blind
    sequence:
      - service: cover.open_cover
        entity_id: cover.master_room_blind

  master_room_close_blind:
    alias: Master Room Close Blind
    sequence:
      - service: cover.close_cover
        entity_id: cover.master_room_blind

  master_room_blind_left_tuya_open:
    alias: Master Room Blind Left Open
    sequence:
      - service: cover.open_cover
        entity_id: cover.master_room_blind_left_tuya

  master_room_blind_left_tuya_close:
    alias: Master Room Blind Left Close
    sequence:
      - service: cover.close_cover
        entity_id: cover.master_room_blind_left_tuya

  master_room_blind_left_tuya_stop:
    alias: Master Room Blind Left Stop
    sequence:
      - service: cover.stop_cover
        entity_id: cover.master_room_blind_left_tuya

  master_room_blind_right_tuya_open:
    alias: Master Room Blind Right Open
    sequence:
      - service: cover.open_cover
        entity_id: cover.master_room_blind_right_tuya

  master_room_blind_right_tuya_close:
    alias: Master Room Blind Right Close
    sequence:
      - service: cover.close_cover
        entity_id: cover.master_room_blind_right_tuya

  master_room_blind_right_tuya_stop:
    alias: Master Room Blind Right Stop
    sequence:
      - service: cover.stop_cover
        entity_id: cover.master_room_blind_right_tuya

# Scripts
script curtain:
  master_room_open_curtain:
    alias: Master Room Open Curtain
    sequence:
      - service: cover.open_cover
        entity_id: cover.master_room_curtain

  master_room_close_curtain:
    alias: Master Room Close Curtain
    sequence:
      - service: cover.close_cover
        entity_id: cover.master_room_curtain

  master_room_right_blind_toggle:
    alias: Master Room Right Blind Toggle
    mode: restart
    sequence:
      # Toggle Curtain Open State and Actual Motor
      - service: >
          {% if is_state('input_boolean.master_room_right_blind_is_open', 'on') %}
            cover.close_cover
          {% else %}
            cover.open_cover
          {% endif %}
        entity_id: cover.master_room_blind_2
      - service: input_boolean.toggle
        entity_id: input_boolean.master_room_right_blind_is_open

  master_room_left_blind_toggle:
    alias: Master Room Left Blind Toggle
    mode: restart
    sequence:
      # Toggle Curtain Open State and Actual Motor
      - service: >
          {% if is_state('input_boolean.master_room_left_blind_is_open', 'on') %}
            cover.close_cover
          {% else %}
            cover.open_cover
          {% endif %}
        entity_id: cover.master_room_blind_1
      - service: input_boolean.toggle
        entity_id: input_boolean.master_room_left_blind_is_open

  master_room_curtain_toggle:
    alias: Master Room Curtain Toggle
    mode: restart
    sequence:
      # Toggle Curtain Open State and Actual Motor
      - service: >
          {% if is_state('input_boolean.master_room_curtain_is_open', 'on') %}
            cover.close_cover
          {% else %}
            cover.open_cover
          {% endif %}
        entity_id: cover.master_room_curtain
      - service: input_boolean.toggle
        entity_id: input_boolean.master_room_curtain_is_open

  master_room_close_all_curtains:
    alias: Master Room Close All Curtains
    mode: single
    sequence:
      - service: cover.close_cover
        entity_id:
          - cover.master_room_curtain
          - cover.master_room_blind_2
      - delay: "00:00:02"
      - service: cover.close_cover
        entity_id:
          - cover.master_room_blind_1

  master_room_open_all_curtains:
    alias: Master Room Open All Curtains
    mode: single
    sequence:
      - service: cover.open_cover
        entity_id:
          - cover.master_room_curtain
          - cover.master_room_blind_2
      - delay: "00:00:02"
      - service: cover.open_cover
        entity_id:
          - cover.master_room_blind_1

###############################################
# Lighting/Curatin Automation based on buttons
###############################################
automation button:
  # Master Room
  - alias: L-MR-B Master Room Entrance Switch - Single Press - Toggle Entrace Light
    trigger:
      - platform: state
        entity_id: sensor.master_room_entrance_light_wall_button
        to: single
    action:
      - service: light.toggle
        entity_id: light.master_room_entrance_led_light

  - alias: L-MR-B Master Room Wall Switch - Double Press - Turn Off All Lights and Curtains
    trigger:
      - platform: state
        entity_id: sensor.master_room_entrance_light_wall_button
        to: double
    action:
      - service: light.turn_off
        entity_id: light.master_room_entrance_led_light
      - service: script.master_room_lights_turn_off
      - service: cover.close_cover
        entity_id: cover.master_room_curtain

  - alias: L-MR-B Master Room Bed Button - Single - Toggle Bed Lights/Ceiling Lights
    id: "1603642120891"
    trigger:
      - platform: state
        entity_id:
          - sensor.master_room_bedside_button_right
          - sensor.master_room_bedside_button_left
        to: single
    action:
      # N.B. choose will only choose the first matching condition to execute
      #      and exit the choose function immediately after the cooresponding
      #      sequence completed and will not continue to test other condtions.
      #      So it is a proper IF-ELSE statement.
      - choose:
          # IF ceiling lights on - turn off ceiling lights and turn on bedside lights
          - conditions:
              - condition: state
                entity_id: light.master_room_ceiling_lights
                state: "on"
            sequence:
              - service: script.master_room_ceiling_lights_turn_off
              - service: script.master_room_bedside_lights_turn_on
              - service: light.turn_on
                entity_id: light.master_room_leds
          # ELSE IF bed lamp lights on - turn off bedside lights
          - conditions:
              - condition: state
                entity_id: light.master_room_lamps
                state: "on"
            sequence:
              - service: script.master_room_bedside_lights_turn_off
              - service: light.turn_on
                entity_id: light.master_room_leds
          # ELSE IF bed LDE on - turn off bed LED
          - conditions:
              - condition: state
                entity_id: light.master_room_leds
                state: "on"
            sequence:
              - service: light.turn_off
                entity_id: light.master_room_leds
        # ELSE - (everything was off) turn on ceiling lights
        default:
          - service: script.master_room_ceiling_lights_turn_on

  - alias: L-MR-B Master Room Six Key - Middle Keys Double Press - Toggle Bedside Lights
    id: "1603640020890"
    trigger:
      - platform: state
        entity_id: sensor.master_room_six_key_button
        to: button_4_double
      - platform: state
        entity_id: sensor.master_room_six_key_button
        to: button_3_double
    action:
      - service: script.master_room_bedside_lights_toggle

  #- alias: B-MR Master Room Six Key - Middle Key 3 Single Press - Toggle Bedside Light Door
  #  id: "1603640020891"
  #  trigger:
  #    - platform: state
  #      entity_id: sensor.master_room_six_key_button
  #      to: button_3_single
  #  action:
  #    - entity_id: light.master_room_lamp_1
  #      service: light.toggle
  #
  #- alias: B-MR Master Room Six Key - Middle Key 4 Single Press - Toggle Bedside Light Wall
  #  id: "1603640020892"
  #  trigger:
  #    - platform: state
  #      entity_id: sensor.master_room_six_key_button
  #      to: button_4_single
  #  action:
  #    - entity_id: light.master_room_lamp_2
  #      service: light.toggle

  - alias: L-MR-B Master Room Six Key - Right Keys Long Press - Toggle Blind Right
    id: "1603640020893"
    # This automation needs to restart to interrupt the previous run
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.master_room_six_key_button
        to: button_5_hold
      - platform: state
        entity_id: sensor.master_room_six_key_button
        to: button_6_hold
    action:
      - choose:
          # IF
          - conditions:
              - condition: state
                entity_id: input_boolean.master_room_right_blind_moving_in_progress
                state: "off"
            sequence:
              # Mark the curtain as moving in progress and toggle the curtain
              - service: input_boolean.turn_on
                entity_id: input_boolean.master_room_right_blind_moving_in_progress
              - service: script.master_room_right_blind_toggle
              # Wait for curtain motor to finish and mark it as completed
              - delay: "00:01:30"
              - service: input_boolean.turn_off
                entity_id: input_boolean.master_room_right_blind_moving_in_progress
          # ELSE IF
          - conditions:
              - condition: state
                entity_id: input_boolean.master_room_right_blind_moving_in_progress
                state: "on"
            sequence:
              # Stop the motor and mark it as stopped
              - service: cover.stop_cover
                entity_id: cover.master_room_blind_2
              - service: input_boolean.turn_off
                entity_id: input_boolean.master_room_right_blind_moving_in_progress

  - alias: L-MR-B Master Room Six Key - Left Keys Long Press - Toggle Blind Left
    id: "1603640020897"
    # This automation needs to restart to interrupt the previous run
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.master_room_six_key_button
        to: button_1_hold
      - platform: state
        entity_id: sensor.master_room_six_key_button
        to: button_2_hold
    action:
      - choose:
          # IF
          - conditions:
              - condition: state
                entity_id: input_boolean.master_room_left_blind_moving_in_progress
                state: "off"
            sequence:
              # Mark the curtain as moving in progress and toggle the curtain
              - service: input_boolean.turn_on
                entity_id: input_boolean.master_room_left_blind_moving_in_progress
              - service: script.master_room_left_blind_toggle
              # Wait for curtain motor to finish and mark it as completed
              - delay: "00:01:30"
              - service: input_boolean.turn_off
                entity_id: input_boolean.master_room_left_blind_moving_in_progress
          # ELSE IF
          - conditions:
              - condition: state
                entity_id: input_boolean.master_room_left_blind_moving_in_progress
                state: "on"
            sequence:
              # Stop the motor and mark it as stopped
              - service: cover.stop_cover
                entity_id: cover.master_room_blind_1
              - service: input_boolean.turn_off
                entity_id: input_boolean.master_room_left_blind_moving_in_progress

  - alias: L-MR-B Master Room Six Key - Middle Keys Long Press - Toggle Curtain
    id: "1603640020894"
    # This automation needs to restart to interrupt the previous run
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.master_room_six_key_button
        to: button_3_hold
      - platform: state
        entity_id: sensor.master_room_six_key_button
        to: button_4_hold
    action:
      - choose:
          # IF
          # REVISIT: this variable checking can be replaced by checking the position of the curtain
          - conditions:
              - condition: state
                entity_id: input_boolean.master_room_curtain_moving_in_progress
                state: "off"
            sequence:
              # Mark the curtain as moving in progress and toggle the curtain
              - service: input_boolean.turn_on
                entity_id: input_boolean.master_room_curtain_moving_in_progress
              - service: script.master_room_curtain_toggle
              # Wait for curtain motor to finish and mark it as completed
              - delay: "00:00:10"
              - service: input_boolean.turn_off
                entity_id: input_boolean.master_room_curtain_moving_in_progress
          # ELSE IF
          - conditions:
              - condition: state
                entity_id: input_boolean.master_room_curtain_moving_in_progress
                state: "on"
            sequence:
              # Stop the motor and mark it as stopped
              - service: cover.stop_cover
                entity_id: cover.master_room_curtain
              - service: input_boolean.turn_off
                entity_id: input_boolean.master_room_curtain_moving_in_progress

###############################################
# TV Media Script/Automation
###############################################
# Script
script tv:
  master_room_tv_turn_on:
    alias: Master Room Turn On TV
    fields:
      room:
        example: "master_room, kitchen, living_room"
    sequence:
      # Mute Echo
      - service: media_player.volume_mute
        entity_id: media_player.master_room_echo
        data:
          is_volume_muted: true
      # Turn on TV
      - repeat:
          sequence:
            - service: media_player.turn_on
              target:
                entity_id: media_player.master_room_tv
            - service: media_player.play_media
              target:
                entity_id: media_player.master_room_echo
              data:
                media_content_type: routine
                media_content_id: TurnOnMasterRoomTV
          until:
            - condition: template
              value_template: >
                {{states('media_player.master_room_tv') == 'on'}}
      # Unmute Echo
      - service: media_player.volume_mute
        entity_id: media_player.master_room_echo
        data:
          is_volume_muted: false

  master_room_tv_turn_off:
    alias: Master Room Turn Off TV
    sequence:
      - repeat:
          sequence:
            - service: media_player.turn_off
              target:
                entity_id: media_player.master_room_tv
            - delay: "00:00:03"
          until:
            - condition: template
              value_template: "{{states('media_player.master_room_tv') == 'off'}}"

  master_room_slideshow_update_tv_setting:
    alias: Master Room Slideshow Update TV Setting
    sequence:
      # Mute TV
      - service: media_player.volume_mute
        target:
          entity_id: media_player.master_room_tv
        data:
          is_volume_muted: true
      # Change to FireTV input
      - service: media_player.select_source
        target:
          entity_id: media_player.master_room_tv
        data:
          source: "Amazon Fire TV Cube"
      # Set Picture Mode to a Dim One
      - service: samsungtv_smart.select_picture_mode
        data:
          entity_id: media_player.master_room_tv
          picture_mode: >
            {% if states('input_select.indoor_brightness') != 'dark' %}  
              Standard
            {% else %}
              Movie
            {% endif %}

  master_room_tv_slideshow:
    alias: Master Room TV Slideshow
    sequence:
      # Slideshow is enabled
      - condition: state
        entity_id: input_boolean.master_room_slideshow_enable
        state: "on"
      # Start watchdog for this run
      - service: script.turn_on
        entity_id: script.master_room_tv_slideshow_watchdog
      # TV is off
      - condition: state
        entity_id: media_player.master_room_tv
        state: "off"
      # Mute Echo
      - service: media_player.volume_set
        target:
          entity_id: media_player.master_room_echo
        data:
          volume_level: 0
      # Play slideshow on FireTV
      - service: media_player.play_media
        target:
          entity_id: media_player.master_room_echo
        data:
          media_content_type: routine
          media_content_id: MasterRoomSlideshow
      - delay: "00:00:02"
      # Turn on TV and change settings
      - alias: "Repeat turning on tv until tv is switched its input to fire tv"
        repeat:
          sequence:
            - service: script.turn_on
              entity_id: script.master_room_tv_turn_on
            - delay: "00:00:05"
            - service: script.turn_on
              entity_id: script.master_room_slideshow_update_tv_setting
          until:
            - condition: template
              value_template: "{{state_attr('media_player.master_room_tv', 'source') == 'Amazon Fire TV Cube'}}"
      # Unmute TV and Echo
      - service: media_player.volume_mute
        target:
          entity_id: media_player.master_room_tv
        data:
          is_volume_muted: false
      - delay: "00:01:30"
      - service: media_player.volume_set
        target:
          entity_id: media_player.master_room_echo
        data:
          volume_level: 1.00

  master_room_tv_slideshow_watchdog:
    alias: Master Room TV Slideshow Watchdog
    sequence:
      - delay: "00:01:00"
      - service: script.turn_off
        entity_id: script.master_room_tv_slideshow

  master_room_tv_sleep_timer_start:
    alias: Master Room TV Sleep Timer Start
    mode: restart
    sequence:
      # TV is on
      - condition: state
        entity_id: media_player.master_room_tv
        state: "on"
      # Set TV Volum
      - service: media_player.volume_set
        data:
          volume_level: 0.04
        target:
          entity_id: media_player.master_room_tv
      # Set Picture Mode to a Dim One
      - service: samsungtv_smart.select_picture_mode
        data:
          entity_id: media_player.master_room_tv
          picture_mode: FILMMAKER MODE
      # Turn off all ligts/curtains
      - service: script.master_room_lights_turn_off
      - service: script.master_room_close_all_curtains
      # Turn off TV after a period of time
      - delay: "00:40:00"
      - service: script.master_room_tv_turn_off

# Automation
automation tv:
  - alias: M-MR Master Room TV Slideshow
    id: "1599907343079"
    description: "automation.master_room_tv_slideshow"
    trigger:
    action:
      - service: script.turn_on
        entity_id: script.master_room_tv_slideshow

  - alias: M-MR Master Room TV Picture Mode Based On Dropdown Menu
    id: "1589901346079"
    description: "automation.master_room_tv_picture_mode"
    use_blueprint:
      path: tv_pic_mode_on_ha_input.yaml
      input:
        input_select_tv_picture_mode: input_select.master_room_tv_picture_mode
        tv_entity: media_player.master_room_tv

  - alias: M-MR Master Room TV Picture Mode Dropdown Menu Sync With TV
    id: "1595301347071"
    use_blueprint:
      path: tv_pic_mode_sync_from_tv.yaml
      input:
        input_select_tv_picture_mode: input_select.master_room_tv_picture_mode
        tv_entity: media_player.master_room_tv
        automation_tv_pic_on_ha: automation.master_room_tv_picture_mode
#################################################################
# Sonos Speakers Grouping/Ungrouping Based On Motion Sensor
#################################################################
# automation sonos:
#   - alias: S-MR-M Master Room Group Its Speaker If People Present
#     trigger:
#       - platform: state
#         to: "on"
#         entity_id: group.master_room_motion
#     condition:
#       - condition: state
#         entity_id: input_boolean.follow_music
#         state: "on"
#       # The controller player must be playing music (not paused)
#       - condition: template
#         value_template: >
#           {% if states('media_player.' + states('input_select.music_controller')) == 'playing' %}
#             true
#           {% else %}
#             false
#           {% endif %}
#     action:
#       # Add this room speaker into the group
#       - service: script.add_sonos_into_speaker_group
#         data:
#           target_player: media_player.master_room_sonos

#   - alias: S-MR-M Master Room Ungroup/Pause Its Speaker If No People
#     trigger:
#       - platform: state
#         from: "on"
#         to: "off"
#         for: 00:10:00
#         entity_id: group.master_room_motion
#       - minutes: /5
#         platform: time_pattern
#     condition:
#       - condition: state
#         entity_id: group.master_room_motion
#         for: 00:10:00
#         state: "off"
#     action:
#       - choose:
#           # IF - music follower is on
#           - conditions:
#               - condition: state
#                 entity_id: input_boolean.follow_music
#                 state: "on"
#             sequence:
#               # Remove this room speaker from the group
#               - service: script.remove_sonos_from_speaker_group
#                 data:
#                   target_player: media_player.master_room_sonos
#       # Pause this room speaker in case it is the last item in the group
#       # or music follower is off
#       - service: script.pause_sonos_if_sole_speaker_group
#         data:
#           target_player: media_player.master_room_sonos
