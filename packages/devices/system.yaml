# Lovelace
#browser_mod:

# Pyscript message severity level
logger:
  default: error
  logs:
    custom_components.pyscript: info
    #custom_components.pyscript.file.my_scripts.z_alexa_set_tv_brightness: debug

# System Sensors
sensor:
  # This sensor capture DNS public IP
  #- platform: dnsip
  #  name: Public IP

  # System resource
  - platform: systemmonitor
    resources:
      - type: disk_use
        arg: /
      - type: memory_use
      - type: memory_free
      - type: swap_use
      - type: swap_free
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: processor_use
      - type: processor_temperature

  # Time
  - platform: time_date
    display_options:
      - "time"
      - "date"

  # Note taking app
  - platform: google_keep
    username: !secret google_keep_username
    password: !secret google_keep_password

# Custom Variables
input_boolean:
  log_enable:
    name: "Log Enable"

  always_off_constant:
    name: "Always Off Constant"
    initial: "off"

  always_on_constant:
    name: "Always On Constant"
    initial: "on"

  placeholder:
    name: "Placeholder"
    initial: "off"

input_select:
  indoor_brightness:
    name: Indoor Brightness
    options:
      - dark
      - dimmed
      - bright

#shell_command:
#  # PVE CPU Temperature
#  - platform: command_line
#    name: "CPU Temperature"
#    command: "sensors | grep CPUTIN | awk '{print $2}'"
#    unit_of_measurement: 'C'

#  reboot_u6_lite: bash /config/shell_scripts/reboot_u6_lite.sh
#  reboot_udm:     bash /config/shell_scripts/reboot_udm.sh

#  # CPU Clock Frequency
#  - platform: command_line
#    name: "CPU Clock Frequency"
#    command: 'cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq'
#    unit_of_measurement: 'MHz'
#    value_template: '{{ value | multiply(0.001) }}'
#
#  # Uptime
#  - platform: uptime
#    name: Boot Time
#  - platform: template
#    sensors:
#      uptime:
#        friendly_name: "Uptime"
#        value_template: >-
#          {% set t = now() %}
#          {{ relative_time(strptime(states('sensor.boot_time'), '%Y-%m-%dT%H:%M:%S.%f%z')) }}

# Bad Login Attempts
#  - platform: command_line
#    name: badlogin
#    command: "grep -c 'Login attempt' /home/hass/.homeassistant/home-assistant.log"

# QNAP NAS
#  - platform: qnap
#    host: 192.168.1.11
#    username: admin
#    password: admin
#    monitored_conditions:
#      - status
#      - cpu_usage
#      - memory_percent_used
#      - network_tx
#      - volume_percentage_used
#      - volume_size_free

template:
  - sensor:
      - name: "DS920 Memory Used"
        unit_of_measurement: "GB"
        state: >
          {{ (states('sensor.ds920_memory_usage_real')|int * 12 /100) | round(1)  }}

# Remote Acccess via HTTPS
http:
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  ip_ban_enabled: true
  login_attempts_threshold: 50
  use_x_frame_options: false
  
# Main DDNS - DuckDNS (if auto-renew fails, needs to renew every 3 months)
# Alt. DDNS - FreeDNS (no need to renew mannually)
freedns:
  url: !secret freedns_token_url

# No-IP discarded as it requires to manually renew every month
#no_ip:
#  domain:   !secret no_ip_url
#  username: !secret no_ip_account
#  password: !secret no_ip_password

# Database logging config
recorder:
  #purge_keep_days: 5
  auto_purge: false
  commit_interval: 5 # updates log every 5s
  # Use local database to diognise performance issue
  # Use synology docker mariadb container
  db_url: mysql://root:mariadb_pass@192.168.1.11/ha_1?charset=utf8mb4
  # Use HA supervisor mariadb container
  #db_url: mysql://mariadb_user:mariadb_pass@core-mariadb/homeassistant?charset=utf8mb4

# PVE monitor
proxmoxve:
  - host: 192.168.1.7
    username: root
    password: !secret pve_password
    verify_ssl: false
    nodes:
      - node: pve
        vms:
          - 100
        containers:
          - 101
          - 102

binary_sensor:
  - platform: ping
    host: 192.168.1.20
    name: Kes Work Laptop

  - platform: ping
    host: google.co.uk
    name: Ping Google

  - platform: ping
    host: relliky.duckdns.org
    name: Ping My DuckDNS


#  - platform: ping
#    mac: 24:5E:BE:09:3D:E0
#    name: QNAP NAS
#    host: 192.168.1.11

input_datetime:
  log_disable_time:
    name: "Log Disable Time"
    has_date: true
    has_time: true

###############################################
#
# Scripts
#
###############################################
script:
  hassio_restart:
    alias: Restart Home Assistant
    sequence:
      - service: homeassistant.restart

  do_nothing:
    alias: Do nothing
    sequence:
      - service: script.do_nothing

###############################################
#
# Automations:
# - Non-bedroom light colour design
# - Restart HA on time
# - Log Enable
#
###############################################
automation:
  - alias: Do nothing
    id: "1596919926917"
    trigger: []
    action: []

  # All living room Router/AP/Hubs (tado/hue/LR gateway 3/Xiaomi AP)
  # will be restart at 4.30am by a timer plug.
  # HA instance and other AP/hubs (AQ/MR gateway/TPlink AP) will be
  # restarted by the instance below.
  #
  # WOL sometimes stuck at sending magic packets and required to restart HA
  - alias: Restart HA at midnight
    id: "1602722452776"
    description: ""
    trigger:
      - at: 04:00:00
        platform: time
    action:
      # Generate report
      - service: watchman.report
      # Restart hubs in other rooms
      - delay: "00:01:00"
      - service: homeassistant.restart

  # - Starts Log Enable and set timeout
  - alias: Enable/Disable Logging By The State of The Log Enable and Set Timeout for 48 Hours
    id: "1607918439986"
    trigger:
      - platform: state
        entity_id: input_boolean.log_enable
        to:
          - "on"
          - "off"
    action:
      - service: >
          {% if states('input_boolean.log_enable') == 'on' %}
            recorder.enable
          {% else %}
            recorder.disable
          {% endif %}
      # Reset the Timer
      - service: input_datetime.set_datetime
        entity_id: input_datetime.log_disable_time
        data_template:
          datetime: "{{ (now().timestamp())| timestamp_custom('%Y-%m-%d %H:%M:%S', true) }}"
      # IF log_enable is ON
      - condition: state
        entity_id: input_boolean.log_enable
        state: "on"
      # Make the timeout to 1 day later
      - service: input_datetime.set_datetime
        entity_id: input_datetime.log_disable_time
        data_template:
          datetime: "{{ (now().timestamp() + 60*60*24)| timestamp_custom('%Y-%m-%d %H:%M:%S', true) }}"

  - alias: Turn Off Logging By The Timeout
    id: "1607918439987"
    trigger:
      - platform: time_pattern
        minutes: "/5"
    action:
      # Time condition does not work with input_datetime so have to use template to work aorund
      - condition: template
        value_template: "{{now().timestamp() > state_attr('input_datetime.log_disable_time', 'timestamp')}}"
      - service: input_boolean.turn_off
        entity_id: input_boolean.log_enable
      - service: recorder.disable

  ####################################################
  #
  # Restart HA if certain entities becomes unavailable
  #
  ####################################################
  - alias: T- Restart HA When Some Devices Are Offline
    id: "1599910317895"
    description: ""
    trigger:
      - minutes: /10
        platform: time_pattern
    action:
      - choose:
          # Check LR Zigbee
          - conditions:
              - condition: state
                entity_id: binary_sensor.ground_toilet_motion_sensor_motion
                state: "unavailable"
            sequence:
              - service: notify.notify
                data:
                  title: "Restarting HA in 1 Min"
                  message: "LR Ground Toilet Sensor Is Offline. Restarting HA"
              - delay: "00:01:00"
              - service: homeassistant.restart
          # Check MR Zigbee
          - conditions:
              - condition: state
                entity_id: binary_sensor.master_toilet_basin_motion_sensor_motion
                state: "unavailable"
            sequence:
              - service: notify.notify
                data:
                  title: "Restarting HA in 1 Min"
                  message: "MR Master Toilet Sensor Is Offline. Restarting HA"
              - delay: "00:01:00"
              - service: homeassistant.restart
          # Check BLE devices
          - conditions:
              - condition: state
                entity_id: light.master_room_entrance_led_light
                state: "unavailable"
            sequence:
              - service: notify.notify
                data:
                  title: "Restarting HA in 1 Min"
                  message: "BLE Master Room Entrance Light Is Offline. Restarting HA"
              - delay: "00:01:00"
              - service: homeassistant.restart

automation brightness:
  - alias: L- Set up Indoor Brightness Based On Sun
    id: "1679065359421"
    trigger:
      - entity_id: sun.sun
        platform: state
    action:
      - service: input_select.select_option
        target:
          entity_id: input_select.indoor_brightness
        data:
          option: >
            {% if states('sun.sun') == 'below_horizon' %}
              dark
            {% else %}
              bright
            {% endif %}
