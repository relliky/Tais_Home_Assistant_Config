#############################################################################
# DO NOT MODIFY. This is an automatically generated file.                   # 
# Please modify the python source code under python_templates directory.    #
#############################################################################
automation:
- alias: ZLB-MR Flex Wall Switch On Postion 2- Automatically Turn on the Wall Switch Back When Turned Off -Master Room
  trigger:
  - platform: state
    entity_id: switch.0x04cf8cdf3c7ad638_channel_2
    to: 'off'
  action:
  - alias: Turn switch.0x04cf8cdf3c7ad638_channel_2 state=on
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_on
      entity_id: switch.0x04cf8cdf3c7ad638_channel_2
  id: automation.zlb_mr_flex_wall_switch_on_postion_2_automatically_turn_on_the_wall_switch_back_when_turned_off_master_room
- alias: ZLB-MR Flex Wall Switch On Postion 3- Automatically Turn on the Wall Switch Back When Turned Off -Master Room
  trigger:
  - platform: state
    entity_id: switch.0x04cf8cdf3c7ad638_channel_3
    to: 'off'
  action:
  - alias: Turn switch.0x04cf8cdf3c7ad638_channel_3 state=on
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_on
      entity_id: switch.0x04cf8cdf3c7ad638_channel_3
  id: automation.zlb_mr_flex_wall_switch_on_postion_3_automatically_turn_on_the_wall_switch_back_when_turned_off_master_room
- alias: ZL-MR Ceiling Lights On Or Open Curtains If Entering to Room-Master Room
  id: automation.zl_mr_ceiling_lights_on_or_open_curtains_if_entering_to_room_master_room
  trigger:
    entity_id:
    - binary_sensor.master_room_entrance_motion_sensor_motion
    platform: state
    to: 'on'
  action:
  - service: automation.turn_off
    entity_id: automation.zl_mr_ceiling_lights_on_or_open_curtains_if_entering_to_room_master_room
    data:
      stop_actions: false
  - service: script.call_room_scene
    data:
      room_scene_select: input_select.master_room_scene
      scene: Idle
  - if:
    - condition: numeric_state
      entity_id: sensor.met_office_cambridge_city_airport_temperature_3_hourly
      above: '15'
    - condition: time
      after: '13:00:00'
      before: '22:00:00'
    - condition: template
      value_template: '{{ now().month > 4 and now().month < 9 }}'
    - condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      alias: Lights on in hot sunshine
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - parallel:
          - if:
              condition: state
              entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_master_room
              state: 'on'
            then:
              alias: Turn light.master_room_ceiling_light state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: any ceiling lights is unavailable, using wall switches to control instead
                  condition: state
                  entity_id:
                  - light.master_room_ceiling_light
                  state: unavailable
                  match: any
                then:
                  alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                    - service: homeassistant.turn_off
                      entity_id:
                      - switch.0x04cf8cdf3c7ad638_channel_1
                      - switch.0x04cf8cdf3c7ad638_channel_2
                      - switch.0x04cf8cdf3c7ad638_channel_3
                    - delay:
                        milliseconds: 200
                    - service: homeassistant.turn_on
                      entity_id:
                      - switch.0x04cf8cdf3c7ad638_channel_1
                      - switch.0x04cf8cdf3c7ad638_channel_2
                      - switch.0x04cf8cdf3c7ad638_channel_3
                else:
                  alias: Turn light.master_room_ceiling_light state=on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    service: homeassistant.turn_on
                    entity_id:
                    - light.master_room_ceiling_light
            else:
              alias: Turn light.master_room_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: any ceiling lights is unavailable, using wall switches to control instead
                  condition: state
                  entity_id:
                  - light.master_room_ceiling_light
                  state: unavailable
                  match: any
                then:
                  alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    service: homeassistant.turn_off
                    entity_id:
                    - switch.0x04cf8cdf3c7ad638_channel_1
                    - switch.0x04cf8cdf3c7ad638_channel_2
                    - switch.0x04cf8cdf3c7ad638_channel_3
                else:
                  alias: Turn light.master_room_ceiling_light state=off
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    service: homeassistant.turn_off
                    entity_id:
                    - light.master_room_ceiling_light
          - if:
              condition: state
              entity_id: input_boolean.lamp_control_in_hot_sunshine_master_room
              state: 'on'
            then:
              alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                - service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
                - delay: 00:00:02
                - if:
                    condition: state
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
                    state: color_temp
                    attribute: color_mode
                  then:
                    service: script.do_nothing
                  else:
                  - service: light.turn_on
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
                    data:
                      kelvin: '3000'
                  - delay: 00:00:02
                  - service: light.turn_off
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
                  - delay: 00:00:02
                  - service: light.turn_on
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
            else:
              alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_off
                entity_id:
                - light.master_room_lamp_1
                - light.master_room_lamp_2
          - if:
              condition: state
              entity_id: input_boolean.led_control_in_hot_sunshine_master_room
              state: 'on'
            then:
              alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_on
                entity_id:
                - light.master_room_drawer_led
                - light.master_room_tv_led
                - light.master_room_bed_led
            else:
              alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_off
                entity_id:
                - light.master_room_drawer_led
                - light.master_room_tv_led
                - light.master_room_bed_led
          - if:
              condition: state
              entity_id: input_boolean.curtain_control_in_hot_sunshine_master_room
              state: 'on'
            then:
              alias: Turn cover.master_room_blind cover.master_room_curtain state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: cover.open_cover
                entity_id:
                - cover.master_room_blind
                - cover.master_room_curtain
            else:
              alias: Turn cover.master_room_blind cover.master_room_curtain state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: cover.close_cover
                entity_id:
                - cover.master_room_blind
                - cover.master_room_curtain
    else:
      if:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      then:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - light.master_room_ceiling_light
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x04cf8cdf3c7ad638_channel_1
                      - switch.0x04cf8cdf3c7ad638_channel_2
                      - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - light.master_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
              else:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
              else:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_master_room
                state: 'on'
              then:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
              else:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.close_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
      else:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - light.master_room_ceiling_light
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x04cf8cdf3c7ad638_channel_1
                      - switch.0x04cf8cdf3c7ad638_channel_2
                      - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - light.master_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
              else:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
              else:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_master_room
                state: 'on'
              then:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
              else:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.close_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
- alias: ZL-MR Lights Off If No Person-Master Room
  id: automation.zl_mr_lights_off_if_no_person_master_room
  trigger:
  - platform: state
    entity_id: input_select.master_room_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  condition:
  - condition: state
    entity_id: input_select.master_room_occupancy
    state: Outside
  - condition: state
    entity_id: group.master_room_motion
    state: 'off'
    for: 00:01:00
  action:
    parallel:
    - alias: Turn automation.zl_mr_ceiling_lights_on_or_open_curtains_if_entering_to_room_master_room state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: homeassistant.turn_on
        entity_id: automation.zl_mr_ceiling_lights_on_or_open_curtains_if_entering_to_room_master_room
    - if:
        condition: state
        entity_id: input_boolean.curtain_control_when_left_master_room
        state: 'on'
      then:
        alias: Turn cover.master_room_blind cover.master_room_curtain state=on
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: cover.open_cover
          entity_id:
          - cover.master_room_blind
          - cover.master_room_curtain
      else:
        alias: Turn cover.master_room_blind cover.master_room_curtain state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: cover.close_cover
          entity_id:
          - cover.master_room_blind
          - cover.master_room_curtain
    - alias: Turn media_player.master_room_tv state=off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: homeassistant.turn_off
        entity_id:
        - media_player.master_room_tv
    - alias: All Off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - alias: Turn light.master_room_ceiling_light state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            if:
            - alias: any ceiling lights is unavailable, using wall switches to control instead
              condition: state
              entity_id:
              - light.master_room_ceiling_light
              state: unavailable
              match: any
            then:
              alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_off
                entity_id:
                - switch.0x04cf8cdf3c7ad638_channel_1
                - switch.0x04cf8cdf3c7ad638_channel_2
                - switch.0x04cf8cdf3c7ad638_channel_3
            else:
              alias: Turn light.master_room_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_off
                entity_id:
                - light.master_room_ceiling_light
        - alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_off
            entity_id:
            - light.master_room_lamp_1
            - light.master_room_lamp_2
        - alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_off
            entity_id:
            - light.master_room_drawer_led
            - light.master_room_tv_led
            - light.master_room_bed_led
- alias: ZL-MR Disable Entering Lights-on Automation If any People are in the Room-Master Room
  trigger:
  - platform: state
    entity_id: input_select.master_room_occupancy
    to:
    - Just Entered
    - In Sleep
    - Stayed Inside
  action:
  - delay: 00:00:10
  - service: automation.turn_off
    entity_id: automation.zl_mr_ceiling_lights_on_or_open_curtains_if_entering_to_room_master_room
    data:
      stop_actions: 'false'
  id: automation.zl_mr_disable_entering_lights_on_automation_if_any_people_are_in_the_room_master_room
- alias: ZL-MR LED On for 3 Min if Walking In the Dark-Master Room
  mode: restart
  trigger:
  - entity_id:
    - binary_sensor.master_room_entrance_motion_sensor_motion
    - binary_sensor.master_room_stair_motion_sensor_motion
    - binary_sensor.master_room_dressing_table_motion_sensor_motion
    - binary_sensor.master_room_tv_motion_sensor_motion
    - binary_sensor.master_room_drawer_motion_sensor_motion
    - binary_sensor.master_toilet_dressing_room_motion_sensor_motion
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.indoor_brightness
    state: dark
  - entity_id:
    - light.master_room_drawer_led
    - light.master_room_tv_led
    - light.master_room_bed_led
    - light.master_room_ceiling_light
    - light.master_room_lamp_1
    - light.master_room_lamp_2
    condition: state
    state: 'off'
  action:
  - alias: Dark Night Mode
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
    - parallel:
      - service: homeassistant.turn_on
        entity_id: scene.master_room_dark_night_mode
      - alias: Turn media_player.master_room_tv
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: samsungtv_smart.select_picture_mode
          data:
            entity_id:
            - media_player.master_room_tv
            picture_mode: Movie
  - alias: Wait for floor sensors to go off for 1 min to turn off LED. Stop waiting if it has wait for 1 hour.
    wait_for_trigger:
      platform: state
      entity_id:
      - binary_sensor.master_room_entrance_motion_sensor_motion
      - binary_sensor.master_room_stair_motion_sensor_motion
      - binary_sensor.master_room_dressing_table_motion_sensor_motion
      - binary_sensor.master_room_tv_motion_sensor_motion
      - binary_sensor.master_room_drawer_motion_sensor_motion
      - binary_sensor.master_toilet_dressing_room_motion_sensor_motion
      to: 'off'
      for: 00:01:00
    timeout: 01:00:00
  - alias: ' Testing if other lights are manually turned on after the LED was on'
    entity_id:
    - light.master_room_ceiling_light
    - light.master_room_lamp_1
    - light.master_room_lamp_2
    condition: state
    state: 'off'
  - alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_off
      entity_id:
      - light.master_room_drawer_led
      - light.master_room_tv_led
      - light.master_room_bed_led
  id: automation.zl_mr_led_on_for_3_min_if_walking_in_the_dark_master_room
- alias: ZH-MR Heating Schedule On If Staying In the Room-Master Room
  id: automation.zh_mr_heating_schedule_on_if_staying_in_the_room_master_room
  trigger:
  - platform: state
    entity_id: input_select.master_room_occupancy
    from:
    - Just Entered
    - Outside
    to: Stayed Inside
  action:
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.master_room
        state: heat
    then:
      alias: Turn heating state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        alias: ''
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - alias: Turn climate.master_room state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: climate.set_hvac_mode
            data:
              hvac_mode: heat
            entity_id: climate.master_room
        - alias: Turn switch.schedule_master_room_temperature state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_on
            entity_id: switch.schedule_master_room_temperature
- alias: ZH-MR Heating Schedule Off If People Left the Room-Master Room
  id: automation.zh_mr_heating_schedule_off_if_people_left_the_room_master_room
  trigger:
  - platform: state
    entity_id: input_select.master_room_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  action:
  - condition: state
    entity_id: input_select.master_room_occupancy
    state: Outside
  - condition: state
    entity_id: input_boolean.master_room_heating_override
    state: 'off'
  - alias: Turn heating state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      alias: ''
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - alias: Turn climate.master_room state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_hvac_mode
          data:
            hvac_mode: 'off'
          entity_id: climate.master_room
      - alias: Turn switch.schedule_master_room_temperature state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: homeassistant.turn_off
          entity_id: switch.schedule_master_room_temperature
- alias: ZH-MR Heating Manual Override-Master Room
  mode: restart
  trigger:
  - platform: state
    entity_id: input_boolean.master_room_heating_override
  action:
  - if:
    - condition: state
      entity_id: input_boolean.master_room_heating_override
      state: 'on'
    then:
    - service: automation.trigger
      entity_id:
      - automation.zh_mr_heating_schedule_on_if_staying_in_the_room_master_room
    else:
    - service: automation.trigger
      entity_id:
      - automation.zh_mr_heating_schedule_off_if_people_left_the_room_master_room
  id: automation.zh_mr_heating_manual_override_master_room
- alias: ZH-MR Heating Manual Override Timeout in Few Hours-Master Room
  trigger:
  - platform: state
    entity_id: input_boolean.master_room_heating_override
    from: 'off'
    to: 'on'
  action:
  - delay:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: homeassistant.turn_off
    entity_id: input_boolean.master_room_heating_override
  id: automation.zh_mr_heating_manual_override_timeout_in_few_hours_master_room
- alias: ZH-MR Valve Calibrate Temperature Using External Sensor-Master Room
  use_blueprint:
    path: calibrate_valve_temperature.yaml
    input:
      tado_valve_entity: climate.master_room
      external_temperature_sensor_entity: sensor.master_room_temperature_sensor
  id: automation.zh_mr_valve_calibrate_temperature_using_external_sensor_master_room
- alias: ZLB-MR Remote Button - Single - Applies Different Scenes (State Machine)-Master Room
  trigger:
  - platform: state
    entity_id:
    - sensor.master_room_button_1
    - sensor.master_room_button_2
    to:
    - single
    - '1'
  mode: queued
  action:
  - choose:
    - conditions:
        condition: state
        entity_id: input_select.master_room_scene
        state: All Off
      sequence:
        service: script.call_room_scene
        data:
          room_scene_select: input_select.master_room_scene
          scene: All White
    - conditions:
        condition: state
        entity_id: input_select.master_room_scene
        state: All White
      sequence:
        service: script.call_room_scene
        data:
          room_scene_select: input_select.master_room_scene
          scene: Lamp LED White
    - conditions:
        condition: state
        entity_id: input_select.master_room_scene
        state: Lamp LED White
      sequence:
        service: script.call_room_scene
        data:
          room_scene_select: input_select.master_room_scene
          scene: Hue
    - conditions:
        condition: state
        entity_id: input_select.master_room_scene
        state: Hue
      sequence:
        service: script.call_room_scene
        data:
          room_scene_select: input_select.master_room_scene
          scene: Dark Night Mode
    - conditions:
        condition: state
        entity_id: input_select.master_room_scene
        state: Dark Night Mode
      sequence:
        service: script.call_room_scene
        data:
          room_scene_select: input_select.master_room_scene
          scene: All Off
    default:
      service: script.call_room_scene
      data:
        room_scene_select: input_select.master_room_scene
        scene: All White
  id: automation.zlb_mr_remote_button_single_applies_different_scenes_state_machine_master_room
- alias: ZL-MR Applies Different Scenes Based on Scene Selections (State Execution)-Master Room
  trigger:
  - platform: state
    entity_id: input_select.master_room_scene
  mode: restart
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: All White
      sequence:
        alias: All White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - service: homeassistant.turn_on
                entity_id:
                - light.master_room_lamp_1
                - light.master_room_lamp_2
              - delay: 00:00:02
              - if:
                  condition: state
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
                  state: color_temp
                  attribute: color_mode
                then:
                  service: script.do_nothing
                else:
                - service: light.turn_on
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
                  data:
                    kelvin: '3000'
                - delay: 00:00:02
                - service: light.turn_off
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
                - delay: 00:00:02
                - service: light.turn_on
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
          - alias: Turn light.master_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.master_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_off
                    entity_id:
                    - switch.0x04cf8cdf3c7ad638_channel_1
                    - switch.0x04cf8cdf3c7ad638_channel_2
                    - switch.0x04cf8cdf3c7ad638_channel_3
                  - delay:
                      milliseconds: 200
                  - service: homeassistant.turn_on
                    entity_id:
                    - switch.0x04cf8cdf3c7ad638_channel_1
                    - switch.0x04cf8cdf3c7ad638_channel_2
                    - switch.0x04cf8cdf3c7ad638_channel_3
              else:
                alias: Turn light.master_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_ceiling_light
          - alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - light.master_room_drawer_led
              - light.master_room_tv_led
              - light.master_room_bed_led
          - alias: Turn media_player.master_room_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id:
                - media_player.master_room_tv
                picture_mode: Standard
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: Ceiling Light White
      sequence:
        alias: Ceiling Light White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led light.master_room_lamp_1 light.master_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - light.master_room_drawer_led
              - light.master_room_tv_led
              - light.master_room_bed_led
              - light.master_room_lamp_1
              - light.master_room_lamp_2
          - alias: Turn light.master_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.master_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_off
                    entity_id:
                    - switch.0x04cf8cdf3c7ad638_channel_1
                    - switch.0x04cf8cdf3c7ad638_channel_2
                    - switch.0x04cf8cdf3c7ad638_channel_3
                  - delay:
                      milliseconds: 200
                  - service: homeassistant.turn_on
                    entity_id:
                    - switch.0x04cf8cdf3c7ad638_channel_1
                    - switch.0x04cf8cdf3c7ad638_channel_2
                    - switch.0x04cf8cdf3c7ad638_channel_3
              else:
                alias: Turn light.master_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_ceiling_light
          - alias: Turn media_player.master_room_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id:
                - media_player.master_room_tv
                picture_mode: Standard
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: Lamp LED White
      sequence:
        alias: Lamp LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.master_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.master_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.0x04cf8cdf3c7ad638_channel_1
                  - switch.0x04cf8cdf3c7ad638_channel_2
                  - switch.0x04cf8cdf3c7ad638_channel_3
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_ceiling_light
          - alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - service: homeassistant.turn_on
                entity_id:
                - light.master_room_lamp_1
                - light.master_room_lamp_2
              - delay: 00:00:02
              - if:
                  condition: state
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
                  state: color_temp
                  attribute: color_mode
                then:
                  service: script.do_nothing
                else:
                - service: light.turn_on
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
                  data:
                    kelvin: '3000'
                - delay: 00:00:02
                - service: light.turn_off
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
                - delay: 00:00:02
                - service: light.turn_on
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
          - alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - light.master_room_drawer_led
              - light.master_room_tv_led
              - light.master_room_bed_led
          - alias: Turn media_player.master_room_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id:
                - media_player.master_room_tv
                picture_mode: Standard
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: LED White
      sequence:
        alias: LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.master_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.master_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.0x04cf8cdf3c7ad638_channel_1
                  - switch.0x04cf8cdf3c7ad638_channel_2
                  - switch.0x04cf8cdf3c7ad638_channel_3
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_ceiling_light
          - alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - light.master_room_lamp_1
              - light.master_room_lamp_2
          - alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - light.master_room_drawer_led
              - light.master_room_tv_led
              - light.master_room_bed_led
          - alias: Turn media_player.master_room_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id:
                - media_player.master_room_tv
                picture_mode: Natural
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: Hue
      sequence:
        alias: Hue
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.master_room_lamp_1
            - light.master_room_lamp_2
            - light.master_room_ceiling_light
            - light.master_room_drawer_led
            - light.master_room_tv_led
            - light.master_room_bed_led
            state: 'off'
            rgb: non_rgb_only
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.master_room_lamp_1
            - light.master_room_lamp_2
            - light.master_room_ceiling_light
            - light.master_room_drawer_led
            - light.master_room_tv_led
            - light.master_room_bed_led
        - alias: Turn media_player.master_room_tv
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: samsungtv_smart.select_picture_mode
            data:
              entity_id:
              - media_player.master_room_tv
              picture_mode: Natural
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: Night Mode
      sequence:
        alias: Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.master_room_night_mode
          - alias: Turn media_player.master_room_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id:
                - media_player.master_room_tv
                picture_mode: Natural
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: Dark Night Mode
      sequence:
        alias: Dark Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.master_room_dark_night_mode
          - alias: Turn media_player.master_room_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id:
                - media_player.master_room_tv
                picture_mode: Movie
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: All Off
      sequence:
        alias: All Off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.master_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.master_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.0x04cf8cdf3c7ad638_channel_1
                  - switch.0x04cf8cdf3c7ad638_channel_2
                  - switch.0x04cf8cdf3c7ad638_channel_3
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_ceiling_light
          - alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - light.master_room_lamp_1
              - light.master_room_lamp_2
          - alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - light.master_room_drawer_led
              - light.master_room_tv_led
              - light.master_room_bed_led
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: Lights on in hot sunshine
      sequence:
        alias: Lights on in hot sunshine
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - light.master_room_ceiling_light
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x04cf8cdf3c7ad638_channel_1
                      - switch.0x04cf8cdf3c7ad638_channel_2
                      - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - light.master_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_in_hot_sunshine_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
              else:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_in_hot_sunshine_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
              else:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_in_hot_sunshine_master_room
                state: 'on'
              then:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
              else:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.close_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: Lights on when bright outdoor
      sequence:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - light.master_room_ceiling_light
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x04cf8cdf3c7ad638_channel_1
                      - switch.0x04cf8cdf3c7ad638_channel_2
                      - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - light.master_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
              else:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
              else:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_master_room
                state: 'on'
              then:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
              else:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.close_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
    - conditions:
      - condition: state
        entity_id: input_select.master_room_scene
        state: Lights on when dark outdoor
      sequence:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x04cf8cdf3c7ad638_channel_1
                        - switch.0x04cf8cdf3c7ad638_channel_2
                        - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - light.master_room_ceiling_light
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.master_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x04cf8cdf3c7ad638_channel_1
                      - switch.0x04cf8cdf3c7ad638_channel_2
                      - switch.0x04cf8cdf3c7ad638_channel_3
                  else:
                    alias: Turn light.master_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - light.master_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.master_room_lamp_1
                    - light.master_room_lamp_2
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.master_room_lamp_1
                      - light.master_room_lamp_2
              else:
                alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_lamp_1
                  - light.master_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_master_room
                state: 'on'
              then:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
              else:
                alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_drawer_led
                  - light.master_room_tv_led
                  - light.master_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_master_room
                state: 'on'
              then:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
              else:
                alias: Turn cover.master_room_blind cover.master_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.close_cover
                  entity_id:
                  - cover.master_room_blind
                  - cover.master_room_curtain
  id: automation.zl_mr_applies_different_scenes_based_on_scene_selections_state_execution_master_room
- alias: ZLB-MR Remote Button - Double - Toggle Lamps-Master Room
  trigger:
  - platform: state
    entity_id:
    - sensor.master_room_button_1
    - sensor.master_room_button_2
    to:
    - double
    - '2'
  action:
  - alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=toggle
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      if:
      - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
        condition: state
        entity_id:
        - light.master_room_lamp_1
        - light.master_room_lamp_2
        state: 'on'
        match: any
      then:
        alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: homeassistant.turn_off
          entity_id:
          - light.master_room_lamp_1
          - light.master_room_lamp_2
      else:
        alias: Turn light.master_room_lamp_1 light.master_room_lamp_2 state=on
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: homeassistant.turn_on
            entity_id:
            - light.master_room_lamp_1
            - light.master_room_lamp_2
          - delay: 00:00:02
          - if:
              condition: state
              entity_id:
              - light.master_room_lamp_1
              - light.master_room_lamp_2
              state: color_temp
              attribute: color_mode
            then:
              service: script.do_nothing
            else:
            - service: light.turn_on
              entity_id:
              - light.master_room_lamp_1
              - light.master_room_lamp_2
              data:
                kelvin: '3000'
            - delay: 00:00:02
            - service: light.turn_off
              entity_id:
              - light.master_room_lamp_1
              - light.master_room_lamp_2
            - delay: 00:00:02
            - service: light.turn_on
              entity_id:
              - light.master_room_lamp_1
              - light.master_room_lamp_2
  id: automation.zlb_mr_remote_button_double_toggle_lamps_master_room
- alias: ZLB-MR Remote Button - Triple - Toggle Ceiling Lights-Master Room
  trigger:
  - platform: state
    entity_id:
    - sensor.master_room_button_1
    - sensor.master_room_button_2
    to:
    - triple
    - '3'
  action:
  - alias: Turn light.master_room_ceiling_light state=toggle
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      if:
      - alias: any ceiling lights is unavailable, using wall switches to control instead
        condition: state
        entity_id:
        - light.master_room_ceiling_light
        state: unavailable
        match: any
      then:
        alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id:
            - switch.0x04cf8cdf3c7ad638_channel_1
            - switch.0x04cf8cdf3c7ad638_channel_2
            - switch.0x04cf8cdf3c7ad638_channel_3
            state: 'on'
            match: any
          then:
            alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - switch.0x04cf8cdf3c7ad638_channel_1
              - switch.0x04cf8cdf3c7ad638_channel_2
              - switch.0x04cf8cdf3c7ad638_channel_3
          else:
            alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - service: homeassistant.turn_off
                entity_id:
                - switch.0x04cf8cdf3c7ad638_channel_1
                - switch.0x04cf8cdf3c7ad638_channel_2
                - switch.0x04cf8cdf3c7ad638_channel_3
              - delay:
                  milliseconds: 200
              - service: homeassistant.turn_on
                entity_id:
                - switch.0x04cf8cdf3c7ad638_channel_1
                - switch.0x04cf8cdf3c7ad638_channel_2
                - switch.0x04cf8cdf3c7ad638_channel_3
      else:
        alias: Turn light.master_room_ceiling_light state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id:
            - light.master_room_ceiling_light
            state: 'on'
            match: any
          then:
            alias: Turn light.master_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.master_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.0x04cf8cdf3c7ad638_channel_1
                  - switch.0x04cf8cdf3c7ad638_channel_2
                  - switch.0x04cf8cdf3c7ad638_channel_3
              else:
                alias: Turn light.master_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - light.master_room_ceiling_light
          else:
            alias: Turn light.master_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.master_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x04cf8cdf3c7ad638_channel_1 switch.0x04cf8cdf3c7ad638_channel_2 switch.0x04cf8cdf3c7ad638_channel_3 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_off
                    entity_id:
                    - switch.0x04cf8cdf3c7ad638_channel_1
                    - switch.0x04cf8cdf3c7ad638_channel_2
                    - switch.0x04cf8cdf3c7ad638_channel_3
                  - delay:
                      milliseconds: 200
                  - service: homeassistant.turn_on
                    entity_id:
                    - switch.0x04cf8cdf3c7ad638_channel_1
                    - switch.0x04cf8cdf3c7ad638_channel_2
                    - switch.0x04cf8cdf3c7ad638_channel_3
              else:
                alias: Turn light.master_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - light.master_room_ceiling_light
  id: automation.zlb_mr_remote_button_triple_toggle_ceiling_lights_master_room
- alias: ZLB-MR Remote Button - Long - Toggle LEDs-Master Room
  trigger:
  - platform: state
    entity_id:
    - sensor.master_room_button_1
    - sensor.master_room_button_2
    to: hold
  action:
  - alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=toggle
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      if:
      - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
        condition: state
        entity_id:
        - light.master_room_drawer_led
        - light.master_room_tv_led
        - light.master_room_bed_led
        state: 'on'
        match: any
      then:
        alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: homeassistant.turn_off
          entity_id:
          - light.master_room_drawer_led
          - light.master_room_tv_led
          - light.master_room_bed_led
      else:
        alias: Turn light.master_room_drawer_led light.master_room_tv_led light.master_room_bed_led state=on
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: homeassistant.turn_on
          entity_id:
          - light.master_room_drawer_led
          - light.master_room_tv_led
          - light.master_room_bed_led
  id: automation.zlb_mr_remote_button_long_toggle_leds_master_room
- alias: ZLB-MR Wall Switch - Double Press - Leave Room and Turn Off Everything-Master Room
  trigger:
  - platform: state
    entity_id:
    - sensor.master_room_entrance_wall_button
    to:
    - '2'
    - double
    - double_left
    - double_right
    - double_center
    - button_1_double
    - button_2_double
    - button_3_double
  action:
  - service: automation.trigger
    entity_id:
    - automation.zl_mr_lights_off_if_no_person_master_room
    - automation.zh_mr_heating_schedule_off_if_people_left_the_room_master_room
  - service: input_select.select_option
    target:
      entity_id: input_select.master_room_occupancy
    data:
      option: Outside
  id: automation.zlb_mr_wall_switch_double_press_leave_room_and_turn_off_everything_master_room
- alias: ZOc-MR Occupancy Update-Master Room
  trigger:
  - entity_id: group.master_room_motion
    platform: state
    to: 'on'
  - entity_id: group.master_room_motion
    platform: state
    to: 'off'
    for: 05:00:00
  - minutes: /5
    platform: time_pattern
  action:
  - service: pyscript.room_occupancy_state_machine
    data:
      occupancy_entity_str: input_select.master_room_occupancy
      motion_str: group.master_room_motion
      motion_on_ratio_for_x_min_str: sensor.master_room_motion_on_ratio_for_last_4_minutes
      motion_on_ratio_for_2x_min_str: sensor.master_room_motion_on_ratio_for_last_8_minutes
      room_type: bedroom
  id: automation.zoc_mr_occupancy_update_master_room
- alias: ZTV-MR Reset Picture Mode When Turning on TV-Master Room
  trigger:
  - platform: state
    entity_id:
    - media_player.master_room_tv
    from: 'off'
    to: 'on'
  action:
  - alias: Turn media_player.master_room_tv
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: samsungtv_smart.select_picture_mode
      data:
        entity_id:
        - media_player.master_room_tv
        picture_mode: Standard
  id: automation.ztv_mr_reset_picture_mode_when_turning_on_tv_master_room
- alias: ZN-MR Notify Zigbee Offline Devices -Master Room
  trigger:
  - platform: state
    entity_id: switch.master_toilet_wall_switch
    to: unavailable
    for: 00:03:00
  action:
  - service: script.notify_alexa_speakers_and_phones
    data:
      tts_message: 'MR gateway zigbee devices are offline - Restarting gateway - Offline device: switch.master_toilet_wall_switch'
      notify_tai: 'yes'
  - alias: Turn switch.master_room_gateway_power state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_off
      entity_id: switch.master_room_gateway_power
  - delay: 00:00:02
  - alias: Turn switch.master_room_gateway_power state=on
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_on
      entity_id: switch.master_room_gateway_power
  id: automation.zn_mr_notify_zigbee_offline_devices_master_room
- alias: ZN-MR Notify Wifi Offline Devices -Master Room
  trigger:
  - platform: state
    entity_id: cover.master_room_blind_1
    to: unavailable
    for: 00:03:00
  action: []
  id: automation.zn_mr_notify_wifi_offline_devices_master_room
input_select:
  master_room_scene:
    name: Master Room Scene
    options:
    - Idle
    - Hue
    - Night Mode
    - Dark Night Mode
    - Lamp LED White
    - LED White
    - All White
    - Ceiling Light White
    - All Off
  master_room_occupancy:
    name: Master Room Occupancy
    options:
    - Outside
    - Just Entered
    - Stayed Inside
    - In Sleep
sensor:
- platform: history_stats
  name: Master Room Motion On Ratio For Last 4 Minutes
  entity_id: group.master_room_motion
  state: 'on'
  type: ratio
  duration:
    minutes: '4'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
- platform: history_stats
  name: Master Room Motion On Ratio For Last 8 Minutes
  entity_id: group.master_room_motion
  state: 'on'
  type: ratio
  duration:
    minutes: '8'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
input_boolean:
  master_room_heating_override:
    name: Master Room Heating Override
    initial: 'off'
  curtain_control_when_left_master_room:
    name: Curtain Control When Left Master Room
  ceiling_light_control_in_hot_sunshine_master_room:
    name: Ceiling Light Control In Hot Sunshine Master Room
  lamp_control_in_hot_sunshine_master_room:
    name: Lamp Control In Hot Sunshine Master Room
  led_control_in_hot_sunshine_master_room:
    name: Led Control In Hot Sunshine Master Room
  curtain_control_in_hot_sunshine_master_room:
    name: Curtain Control In Hot Sunshine Master Room
  ceiling_light_control_when_bright_outdoor_master_room:
    name: Ceiling Light Control When Bright Outdoor Master Room
  lamp_control_when_bright_outdoor_master_room:
    name: Lamp Control When Bright Outdoor Master Room
  led_control_when_bright_outdoor_master_room:
    name: Led Control When Bright Outdoor Master Room
  curtain_control_when_bright_outdoor_master_room:
    name: Curtain Control When Bright Outdoor Master Room
  ceiling_light_control_when_dark_outdoor_master_room:
    name: Ceiling Light Control When Dark Outdoor Master Room
  lamp_control_when_dark_outdoor_master_room:
    name: Lamp Control When Dark Outdoor Master Room
  led_control_when_dark_outdoor_master_room:
    name: Led Control When Dark Outdoor Master Room
  curtain_control_when_dark_outdoor_master_room:
    name: Curtain Control When Dark Outdoor Master Room
switch:
- platform: group
  name: Master Room Wall Switch 1
  entities: switch.0x04cf8cdf3c7ad638_channel_1
- platform: group
  name: Master Room Wall Switch 2
  entities: switch.0x04cf8cdf3c7ad638_channel_2
- platform: group
  name: Master Room Wall Switch 3
  entities: switch.0x04cf8cdf3c7ad638_channel_3
- platform: group
  name: Master Room Dressing Table Light
  entities: switch.1001e49ec4_1
- platform: group
  name: Master Room Gateway Power
  entities: switch.1001e4a0a0_1
cover:
- platform: group
  name: Master Room Curtain
  entities: cover.0x04cf8cdf3c73a19b_motor
template:
- binary_sensor:
  - name: Master Room Heating Required
    state: '{% set climate = "climate.master_room" %}{% if states(climate) == "unavailable" %}off{% else %} {{ ((state_attr(climate, "temperature")  > state_attr(climate, "current_temperature"))  and  (not states(climate, "off")) )  }}{% endif %}'
- binary_sensor:
  - name: Master Room Bed Pressure Sensor
    state: '{% set state = states.binary_sensor["0x54ef441000792d09_contact"].state %} {% if state == "on"%} off {% elif state == "off"%} on {% else%} {{state}} {% endif %}'
- sensor:
  - name: Master Room Wall Button
    state: '{{states.sensor["0x04cf8cdf3c7ad638_action"].state}}'
- sensor:
  - name: Master Room Temperature Sensor new_1
    unit_of_measurement: "\xB0C"
    state: '{{states.sensor["582d343b6a27_temperature"].state | float | round(1)}}'
- sensor:
  - name: Master Room Temperature Sensor new_2
    unit_of_measurement: "\xB0C"
    state: '{{states.sensor["a4c138ecdbba_temperature"].state | float | round(1)}}'
- sensor:
  - name: Master Room Occupancy Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["dced830908fb_illuminance"].state}}'
- sensor:
  - name: Master Room Drawer Occupancy Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["dced8309090d_illuminance"].state}}'
- sensor:
  - name: Master Room TV Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["0x00158d0005228ba8_illuminance"].state}}'
- sensor:
  - name: Master Room TV Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["0x00158d0005228ba8_battery"].state}}'
- sensor:
  - name: Master Room Curtain Curtain Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["0x04cf8cdf3c73a19b_battery"].state}}'
- sensor:
  - name: Master Room Button 1
    state: '{{states.sensor["18c23c24681a_action"].state}}'
- sensor:
  - name: Master Room Button 2
    state: '{{states.sensor["18c23c25960b_action"].state}}'
- binary_sensor:
  - name: Master Room Bed Pressure Sensor 1
    state: '{% set state = states.binary_sensor["e4aaec755efa_contact"].state %} {% if state == "on"%} off {% elif state == "off"%} on {% else%} {{state}} {% endif %}'
- binary_sensor:
  - name: Master Room Bed Pressure Sensor 2
    state: '{% set state = states.binary_sensor["e4aaec755f4b_contact"].state %} {% if state == "on"%} off {% elif state == "off"%} on {% else%} {{state}} {% endif %}'
- sensor:
  - name: Master Room Temperature Sensor
    unit_of_measurement: "\xB0C"
    state: '{% if   states(''sensor.master_room_temperature_sensor_new_1'') != ''unavailable'' and states(''sensor.master_room_temperature_sensor_new_2'') == ''unavailable'' %}{{states(''sensor.master_room_temperature_sensor_new_1'')}}{% elif states(''sensor.master_room_temperature_sensor_new_1'') == ''unavailable'' and states(''sensor.master_room_temperature_sensor_new_2'') != ''unavailable'' %}{{states(''sensor.master_room_temperature_sensor_new_2'')}}{% else %}{% set sensor_1 = states(''sensor.master_room_temperature_sensor_new_1'') | float | round(1) %}{% set sensor_2 = states(''sensor.master_room_temperature_sensor_new_2'') | float | round(1) %}{% if sensor_1 < 1.0 or sensor_2 < 1.0 or (sensor_1 + sensor_2) < 1.0 %}22.0{% else %}{{ ((sensor_1 + sensor_2) / 2) | round(1) }}{% endif %}{% endif %}'
binary_sensor:
- platform: group
  name: Master Room Occupancy Sensor Occupancy
  entities: binary_sensor.dced830908fb_occupancy
- platform: group
  name: Master Room Drawer Occupancy Sensor Occupancy
  entities: binary_sensor.dced8309090d_occupancy
- platform: group
  name: Master Room TV Motion Sensor Motion
  entities: binary_sensor.0x00158d0005228ba8_motion
light:
- platform: group
  name: Master Room Ceiling Light Bulb 1
  entities: light.50ec50df3056_light
group:
  master_room_occupancy_group:
    name: Master Room Occuapancy Group
    entities:
    - input_select.master_room_occupancy
    - group.master_room_motion
    - binary_sensor.master_room_entrance_motion_sensor_motion
    - binary_sensor.master_room_stair_motion_sensor_motion
    - binary_sensor.master_room_dressing_table_motion_sensor_motion
    - binary_sensor.master_room_tv_motion_sensor_motion
    - binary_sensor.master_room_drawer_motion_sensor_motion
    - binary_sensor.master_toilet_dressing_room_motion_sensor_motion
    - binary_sensor.master_room_bed_pressure_sensor
    - binary_sensor.master_room_occupancy_sensor_occupancy
    - binary_sensor.master_room_drawer_occupancy_sensor_occupancy
    - binary_sensor.master_room_bed_pressure_sensor_1
    - binary_sensor.master_room_bed_pressure_sensor_2
  master_room_motion:
    name: Master Room Motion
    entities:
    - binary_sensor.master_room_entrance_motion_sensor_motion
    - binary_sensor.master_room_stair_motion_sensor_motion
    - binary_sensor.master_room_dressing_table_motion_sensor_motion
    - binary_sensor.master_room_tv_motion_sensor_motion
    - binary_sensor.master_room_drawer_motion_sensor_motion
    - binary_sensor.master_toilet_dressing_room_motion_sensor_motion
    - binary_sensor.master_room_bed_pressure_sensor
    - binary_sensor.master_room_occupancy_sensor_occupancy
    - binary_sensor.master_room_drawer_occupancy_sensor_occupancy
    - binary_sensor.master_room_bed_pressure_sensor_1
    - binary_sensor.master_room_bed_pressure_sensor_2
  master_room_lights:
    name: Master Room Lights
    entities:
    - light.master_room_drawer_led
    - light.master_room_tv_led
    - light.master_room_bed_led
    - light.master_room_lamp_1
    - light.master_room_lamp_2
    - light.master_room_ceiling_light
    - switch.master_room_entrance_wall_switch
    - switch.master_room_dressing_table_light
  master_room_windows:
    name: Master Room Windows
    entities:
    - binary_sensor.master_room_balcony_door
  master_room_curtains:
    name: Master Room Curtains
    entities:
    - cover.master_room_blind
    - cover.master_room_curtain
  master_room_auto_gen_automations:
    name: Master Room Auto-gen Automations
    entities:
    - input_boolean.curtain_control_when_left_master_room
    - input_boolean.ceiling_light_control_in_hot_sunshine_master_room
    - input_boolean.lamp_control_in_hot_sunshine_master_room
    - input_boolean.led_control_in_hot_sunshine_master_room
    - input_boolean.curtain_control_in_hot_sunshine_master_room
    - input_boolean.ceiling_light_control_when_bright_outdoor_master_room
    - input_boolean.lamp_control_when_bright_outdoor_master_room
    - input_boolean.led_control_when_bright_outdoor_master_room
    - input_boolean.curtain_control_when_bright_outdoor_master_room
    - input_boolean.ceiling_light_control_when_dark_outdoor_master_room
    - input_boolean.lamp_control_when_dark_outdoor_master_room
    - input_boolean.led_control_when_dark_outdoor_master_room
    - input_boolean.curtain_control_when_dark_outdoor_master_room
    - automation.zlb_mr_flex_wall_switch_on_postion_2_automatically_turn_on_the_wall_switch_back_when_turned_off_master_room
    - automation.zlb_mr_flex_wall_switch_on_postion_3_automatically_turn_on_the_wall_switch_back_when_turned_off_master_room
    - automation.zl_mr_ceiling_lights_on_or_open_curtains_if_entering_to_room_master_room
    - automation.zl_mr_lights_off_if_no_person_master_room
    - automation.zl_mr_disable_entering_lights_on_automation_if_any_people_are_in_the_room_master_room
    - automation.zl_mr_led_on_for_3_min_if_walking_in_the_dark_master_room
    - automation.zh_mr_heating_schedule_on_if_staying_in_the_room_master_room
    - automation.zh_mr_heating_schedule_off_if_people_left_the_room_master_room
    - automation.zh_mr_heating_manual_override_master_room
    - automation.zh_mr_heating_manual_override_timeout_in_few_hours_master_room
    - automation.zh_mr_valve_calibrate_temperature_using_external_sensor_master_room
    - automation.zlb_mr_remote_button_single_applies_different_scenes_state_machine_master_room
    - automation.zl_mr_applies_different_scenes_based_on_scene_selections_state_execution_master_room
    - automation.zlb_mr_remote_button_double_toggle_lamps_master_room
    - automation.zlb_mr_remote_button_triple_toggle_ceiling_lights_master_room
    - automation.zlb_mr_remote_button_long_toggle_leds_master_room
    - automation.zlb_mr_wall_switch_double_press_leave_room_and_turn_off_everything_master_room
    - automation.zoc_mr_occupancy_update_master_room
    - automation.ztv_mr_reset_picture_mode_when_turning_on_tv_master_room
    - automation.zn_mr_notify_zigbee_offline_devices_master_room
    - automation.zn_mr_notify_wifi_offline_devices_master_room
    - switch.0x04cf8cdf3c7ad638_channel_1
    - switch.0x04cf8cdf3c7ad638_channel_2
    - switch.0x04cf8cdf3c7ad638_channel_3
