#############################################################################
# DO NOT MODIFY. This is an automatically generated file.                   # 
# Please modify the python source code under python_templates directory.    #
#############################################################################
automation:
- alias: ZL-ER Ceiling Lights On Or Open Curtains If Entering to Room-En-suite Room
  id: automation.zl_er_ceiling_lights_on_or_open_curtains_if_entering_to_room_en_suite_room
  trigger:
    entity_id:
    - binary_sensor.en_suite_room_entrance_motion_sensor_motion
    platform: state
    to: 'on'
  action:
  - service: automation.turn_off
    entity_id: automation.zl_er_ceiling_lights_on_or_open_curtains_if_entering_to_room_en_suite_room
    data:
      stop_actions: false
  - service: script.call_room_scene
    data:
      room_scene_select: input_select.en_suite_room_scene
      scene: Idle
  - if:
    - condition: numeric_state
      entity_id: sensor.met_office_cambridge_city_airport_temperature_3_hourly
      above: '15'
    - condition: time
      after: '13:00:00'
      before: '21:00:00'
    - condition: template
      value_template: '{{ now().month > 4 and now().month < 9 }}'
    - condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      alias: Lights on in hot sunshine
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - parallel:
          - if:
              condition: state
              entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_en_suite_room
              state: 'on'
            then:
              alias: Turn light.en_suite_room_ceiling_light state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_on
                entity_id:
                - light.en_suite_room_ceiling_light
            else:
              alias: Turn light.en_suite_room_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_off
                entity_id:
                - light.en_suite_room_ceiling_light
          - if:
              condition: state
              entity_id: input_boolean.lamp_control_in_hot_sunshine_en_suite_room
              state: 'on'
            then:
              alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_on
                entity_id:
                - light.en_suite_room_lamp_1
                - light.en_suite_room_lamp_2
            else:
              alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_off
                entity_id:
                - light.en_suite_room_lamp_1
                - light.en_suite_room_lamp_2
          - if:
              condition: state
              entity_id: input_boolean.led_control_in_hot_sunshine_en_suite_room
              state: 'on'
            then:
              alias: Turn light.en_suite_room_bed_led state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_on
                entity_id:
                - light.en_suite_room_bed_led
            else:
              alias: Turn light.en_suite_room_bed_led state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_off
                entity_id:
                - light.en_suite_room_bed_led
          - if:
              condition: state
              entity_id: input_boolean.curtain_control_in_hot_sunshine_en_suite_room
              state: 'on'
            then:
              alias: Turn cover.en_suite_room_curtain state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                alias: ''
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                - service: cover.stop_cover
                  entity_id:
                  - cover.en_suite_room_curtain
                - service: cover.open_cover
                  entity_id:
                  - cover.en_suite_room_curtain
            else:
              alias: Turn cover.en_suite_room_curtain state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                alias: ''
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                - service: cover.stop_cover
                  entity_id:
                  - cover.en_suite_room_curtain
                - service: cover.close_cover
                  entity_id:
                  - cover.en_suite_room_curtain
    else:
      if:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      then:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_ceiling_light
              else:
                alias: Turn light.en_suite_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
              else:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_bed_led
              else:
                alias: Turn light.en_suite_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn cover.en_suite_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.en_suite_room_curtain
              else:
                alias: Turn cover.en_suite_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.en_suite_room_curtain
      else:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_ceiling_light
              else:
                alias: Turn light.en_suite_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
              else:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_bed_led
              else:
                alias: Turn light.en_suite_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn cover.en_suite_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.en_suite_room_curtain
              else:
                alias: Turn cover.en_suite_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.en_suite_room_curtain
- alias: ZL-ER Lights Off If No Person-En-suite Room
  id: automation.zl_er_lights_off_if_no_person_en_suite_room
  trigger:
  - platform: state
    entity_id: input_select.en_suite_room_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  condition:
  - condition: state
    entity_id: input_select.en_suite_room_occupancy
    state: Outside
  - condition: state
    entity_id: group.en_suite_room_motion_group
    state: 'off'
    for: 00:01:00
  action:
    parallel:
    - alias: Turn automation.zl_er_ceiling_lights_on_or_open_curtains_if_entering_to_room_en_suite_room state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: homeassistant.turn_on
        entity_id: automation.zl_er_ceiling_lights_on_or_open_curtains_if_entering_to_room_en_suite_room
    - if:
        condition: state
        entity_id: input_boolean.curtain_control_when_left_en_suite_room
        state: 'on'
      then:
        alias: Turn cover.en_suite_room_curtain state=on
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.en_suite_room_curtain
          - service: cover.open_cover
            entity_id:
            - cover.en_suite_room_curtain
      else:
        alias: Turn cover.en_suite_room_curtain state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.en_suite_room_curtain
          - service: cover.close_cover
            entity_id:
            - cover.en_suite_room_curtain
    - alias: Turn media_player.portable_tv state=off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: homeassistant.turn_off
        entity_id:
        - media_player.portable_tv
    - alias: All Off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - alias: Turn light.en_suite_room_ceiling_light state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: light.turn_off
            entity_id:
            - light.en_suite_room_ceiling_light
        - alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: light.turn_off
            entity_id:
            - light.en_suite_room_lamp_1
            - light.en_suite_room_lamp_2
        - alias: Turn light.en_suite_room_bed_led state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: light.turn_off
            entity_id:
            - light.en_suite_room_bed_led
        - alias: Turn media_player.portable_tv
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            if:
            - alias: Set TV brightness when it is on
              condition: state
              entity_id:
              - media_player.portable_tv
              state: 'on'
            then:
              service: input_select.select_option
              data:
                entity_id:
                - input_select.portable_tv_picture_mode
                option: Standard
- alias: ZL-ER Disable Entering Lights-on Automation If any People are in the Room-En-suite Room
  trigger:
  - platform: state
    entity_id: input_select.en_suite_room_occupancy
    to:
    - Just Entered
    - In Sleep
    - Stayed Inside
  action:
  - delay: 00:00:10
  - service: automation.turn_off
    entity_id: automation.zl_er_ceiling_lights_on_or_open_curtains_if_entering_to_room_en_suite_room
    data:
      stop_actions: 'false'
  id: automation.zl_er_disable_entering_lights_on_automation_if_any_people_are_in_the_room_en_suite_room
- alias: ZL-ER LED On for 3 Min if Walking In the Dark-En-suite Room
  mode: restart
  trigger:
  - entity_id:
    - binary_sensor.en_suite_room_floor_1_motion_sensor_motion
    - binary_sensor.en_suite_room_floor_2_motion_sensor_motion
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.indoor_brightness
    state: dark
  - condition: not
    conditions:
    - condition: state
      entity_id:
      - light.en_suite_room_bed_led
      - light.en_suite_room_ceiling_light
      - light.en_suite_room_lamp_1
      - light.en_suite_room_lamp_2
      state: 'on'
      match: any
  action:
  - alias: Turn light.en_suite_room_bed_led state=on light_brightness=40
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: light.turn_on
      entity_id:
      - light.en_suite_room_bed_led
      data:
        brightness_pct: 40
  - alias: Wait for floor sensors to go off for 1 min to turn off LED. Stop waiting if it has wait for 1 hour.
    wait_for_trigger:
      platform: state
      entity_id:
      - binary_sensor.en_suite_room_floor_1_motion_sensor_motion
      - binary_sensor.en_suite_room_floor_2_motion_sensor_motion
      to: 'off'
      for: 00:01:00
    timeout: 01:00:00
  - alias: ' Testing if other lights are manually turned on after the LED was on'
    condition: not
    conditions:
    - condition: state
      entity_id:
      - light.en_suite_room_bed_led
      - light.en_suite_room_ceiling_light
      - light.en_suite_room_lamp_1
      - light.en_suite_room_lamp_2
      state: 'on'
      match: any
  - alias: Turn light.en_suite_room_bed_led state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: light.turn_off
      entity_id:
      - light.en_suite_room_bed_led
  id: automation.zl_er_led_on_for_3_min_if_walking_in_the_dark_en_suite_room
- alias: ZH-ER Heating Schedule On If Staying In the Room-En-suite Room
  id: automation.zh_er_heating_schedule_on_if_staying_in_the_room_en_suite_room
  trigger:
  - platform: state
    entity_id: input_select.en_suite_room_occupancy
    from:
    - Just Entered
    - Outside
    to: Stayed Inside
  action:
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.en_suite_room
        state: heat
    then:
      alias: Turn heating state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        alias: ''
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - alias: Turn climate.en_suite_room state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: climate.set_hvac_mode
            data:
              hvac_mode: heat
            entity_id: climate.en_suite_room
        - alias: Turn switch.schedule_en_suite_room_temperature state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_on
            entity_id: switch.schedule_en_suite_room_temperature
- alias: ZH-ER Heating Schedule Off If People Left the Room-En-suite Room
  id: automation.zh_er_heating_schedule_off_if_people_left_the_room_en_suite_room
  trigger:
  - platform: state
    entity_id: input_select.en_suite_room_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  action:
  - condition: state
    entity_id: input_select.en_suite_room_occupancy
    state: Outside
  - condition: state
    entity_id: input_boolean.en_suite_room_heating_override
    state: 'off'
  - alias: Turn heating state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      alias: ''
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - alias: Turn climate.en_suite_room state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_hvac_mode
          data:
            hvac_mode: 'off'
          entity_id: climate.en_suite_room
      - alias: Turn switch.schedule_en_suite_room_temperature state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: homeassistant.turn_off
          entity_id: switch.schedule_en_suite_room_temperature
- alias: ZH-ER Heating Manual Override-En-suite Room
  mode: restart
  trigger:
  - platform: state
    entity_id: input_boolean.en_suite_room_heating_override
  action:
  - if:
    - condition: state
      entity_id: input_boolean.en_suite_room_heating_override
      state: 'off'
    then:
    - service: automation.trigger
      entity_id:
      - automation.zh_er_heating_schedule_off_if_people_left_the_room_en_suite_room
    else:
    - service: automation.trigger
      entity_id:
      - automation.zh_er_heating_schedule_on_if_staying_in_the_room_en_suite_room
    - delay:
        hours: 2
    - service: homeassistant.turn_off
      entity_id: input_boolean.en_suite_room_heating_override
    - service: automation.trigger
      entity_id:
      - automation.zh_er_heating_schedule_on_if_staying_in_the_room_en_suite_room
  id: automation.zh_er_heating_manual_override_en_suite_room
- alias: ZH-ER Valve Calibrate Temperature Using External Sensor-En-suite Room
  use_blueprint:
    path: calibrate_valve_temperature.yaml
    input:
      tado_valve_entity: climate.en_suite_room
      external_temperature_sensor_entity: sensor.en_suite_room_temperature_sensor
  id: automation.zh_er_valve_calibrate_temperature_using_external_sensor_en_suite_room
- alias: ZLB-ER Single Button Button Control-En-suite Room
  trigger:
  - platform: state
    entity_id:
    - sensor.en_suite_room_button
    to:
    - single
    - '1'
    id: CYCLE_SCENES
  - platform: state
    entity_id:
    - sensor.en_suite_room_button
    to:
    - double
    - '2'
    id: TOGGLE_CURTAINS
  - platform: state
    entity_id: sensor.en_suite_room_button
    to:
    - hold
    id: TOGGLE_LAMP_0
  - platform: state
    entity_id:
    - sensor.en_suite_room_button
    to:
    - triple
    - '3'
    id: DO_NOTHING
  - platform: state
    entity_id:
    - sensor.en_suite_room_button
    to:
    - quadruple
    id: DO_NOTHING
  - platform: state
    entity_id:
    - sensor.en_suite_room_button
    to:
    - many
    id: DO_NOTHING
  - platform: state
    entity_id:
    - sensor.en_suite_room_button
    to:
    - release
    id: DO_NOTHING
  mode: queued
  action:
    choose:
    - conditions:
      - condition: trigger
        id: CYCLE_SCENES
      sequence:
        choose:
        - conditions:
            condition: state
            entity_id: input_select.en_suite_room_scene
            state: All Off
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.en_suite_room_scene
              scene: All White
        - conditions:
            condition: state
            entity_id: input_select.en_suite_room_scene
            state: All White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.en_suite_room_scene
              scene: Lamp LED White
        - conditions:
            condition: state
            entity_id: input_select.en_suite_room_scene
            state: Lamp LED White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.en_suite_room_scene
              scene: LED White
        - conditions:
            condition: state
            entity_id: input_select.en_suite_room_scene
            state: LED White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.en_suite_room_scene
              scene: All Off
        default:
          service: script.call_room_scene
          data:
            room_scene_select: input_select.en_suite_room_scene
            scene: All White
    - conditions:
      - condition: trigger
        id: DO_NOTHING
      sequence:
      - service: script.do_nothing
    - conditions:
      - condition: trigger
        id: TOGGLE_AL_SLEEP_MODE
      sequence:
      - alias: Turn switch.adaptive_lighting_sleep_mode_en_suite_room state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: switch.adaptive_lighting_sleep_mode_en_suite_room
            state: 'on'
            match: any
          then:
            alias: Turn switch.adaptive_lighting_sleep_mode_en_suite_room state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id: switch.adaptive_lighting_sleep_mode_en_suite_room
          else:
            alias: Turn switch.adaptive_lighting_sleep_mode_en_suite_room state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id: switch.adaptive_lighting_sleep_mode_en_suite_room
    - conditions:
      - condition: trigger
        id: TOGGLE_CURTAINS
      sequence:
      - alias: Turn cover.en_suite_room_curtain state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.en_suite_room_curtain
          - service: cover.toggle
            entity_id:
            - cover.en_suite_room_curtain
    - conditions:
      - condition: trigger
        id: INCREMENT_CURTAINS
      sequence:
      - alias: Turn cover.en_suite_room_curtain state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.en_suite_room_curtain
          - service: cover.set_cover_position
            target:
              entity_id:
              - cover.en_suite_room_curtain
            data:
              position: '{{ [[ (state_attr(''cover.en_suite_room_curtain'', ''current_position'')) + 34 ,0]|max,100]|min}}'
    - conditions:
      - condition: trigger
        id: DECREMENT_CURTAINS
      sequence:
      - alias: Turn cover.en_suite_room_curtain state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.en_suite_room_curtain
          - service: cover.set_cover_position
            target:
              entity_id:
              - cover.en_suite_room_curtain
            data:
              position: '{{ [[ (state_attr(''cover.en_suite_room_curtain'', ''current_position'')) + -34 ,0]|max,100]|min}}'
    - conditions:
      - condition: trigger
        id: TOGGLE_LAMP_0
      sequence:
      - alias: Turn light.en_suite_room_lamp_1 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: light.en_suite_room_lamp_1
            state: 'on'
            match: any
          then:
            alias: Turn light.en_suite_room_lamp_1 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id: light.en_suite_room_lamp_1
          else:
            alias: Turn light.en_suite_room_lamp_1 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id: light.en_suite_room_lamp_1
    - conditions:
      - condition: trigger
        id: INCREMENT_LAMP_0
      sequence:
      - alias: Turn light.en_suite_room_lamp_1 state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.en_suite_room_lamp_1
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LAMP_0
      sequence:
      - alias: Turn light.en_suite_room_lamp_1 state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.en_suite_room_lamp_1
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_LAMP_1
      sequence:
      - alias: Turn light.en_suite_room_lamp_2 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: light.en_suite_room_lamp_2
            state: 'on'
            match: any
          then:
            alias: Turn light.en_suite_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id: light.en_suite_room_lamp_2
          else:
            alias: Turn light.en_suite_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id: light.en_suite_room_lamp_2
    - conditions:
      - condition: trigger
        id: INCREMENT_LAMP_1
      sequence:
      - alias: Turn light.en_suite_room_lamp_2 state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.en_suite_room_lamp_2
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LAMP_1
      sequence:
      - alias: Turn light.en_suite_room_lamp_2 state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.en_suite_room_lamp_2
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_CEILING_LIGHTS
      sequence:
      - alias: Turn light.en_suite_room_ceiling_light state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id:
            - light.en_suite_room_ceiling_light
            state: 'on'
            match: any
          then:
            alias: Turn light.en_suite_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_ceiling_light
          else:
            alias: Turn light.en_suite_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_ceiling_light
    - conditions:
      - condition: trigger
        id: INCREMENT_CEILING_LIGHTS
      sequence:
      - alias: Turn light.en_suite_room_ceiling_light state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.en_suite_room_ceiling_light
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_CEILING_LIGHTS
      sequence:
      - alias: Turn light.en_suite_room_ceiling_light state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.en_suite_room_ceiling_light
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_LEDS
      sequence:
      - alias: Turn light.en_suite_room_bed_led state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id:
            - light.en_suite_room_bed_led
            state: 'on'
            match: any
          then:
            alias: Turn light.en_suite_room_bed_led state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_bed_led
          else:
            alias: Turn light.en_suite_room_bed_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_bed_led
    - conditions:
      - condition: trigger
        id: INCREMENT_LEDS
      sequence:
      - alias: Turn light.en_suite_room_bed_led state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.en_suite_room_bed_led
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LEDS
      sequence:
      - alias: Turn light.en_suite_room_bed_led state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.en_suite_room_bed_led
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_TV_POWER
      sequence:
      - alias: Turn media_player.portable_tv state=power_toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
            condition: state
            entity_id:
            - media_player.portable_tv
            state: 'off'
          then:
            alias: Turn media_player.portable_tv state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - media_player.portable_tv
          else:
            alias: Turn media_player.portable_tv state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - media_player.portable_tv
    - conditions:
      - condition: trigger
        id: CYCLE_TV_BRIGHTNESS
      sequence:
      - alias: Turn media_player.portable_tv
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          choose:
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Movie
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Dynamic
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Natural
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Movie
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Standard
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Natural
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Dynamic
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Standard
    - conditions:
      - condition: trigger
        id: INCREMENT_TV_BRIGHTNESS
      sequence:
      - alias: Turn media_player.portable_tv
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          choose:
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Movie
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Natural
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Natural
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Standard
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Standard
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Dynamic
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Dynamic
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Dynamic
    - conditions:
      - condition: trigger
        id: DECREMENT_TV_BRIGHTNESS
      sequence:
      - alias: Turn media_player.portable_tv
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          choose:
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Movie
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Movie
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Natural
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Movie
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Standard
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Natural
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Dynamic
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Standard
    - conditions:
      - condition: trigger
        id: INCREMENT_TV_VOLUME
      sequence:
      - alias: Turn tv_volumne state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: Turn media_player.portable_tv state=single_device_volume_inc
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: media_player.volume_set
            entity_id:
            - media_player.portable_tv
            data_template:
              volume_level: '{{ (state_attr(''media_player.portable_tv'', ''volume_level'')) + 0.34 }}'
    - conditions:
      - condition: trigger
        id: DECREMENT_TV_VOLUME
      sequence:
      - alias: Turn tv_volumne state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: Turn media_player.portable_tv state=single_device_volume_dec
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: media_player.volume_set
            entity_id:
            - media_player.portable_tv
            data_template:
              volume_level: '{{ (state_attr(''media_player.portable_tv'', ''volume_level'')) + 0.34 }}'
    - conditions:
      - condition: trigger
        id: TOGGLE_HEATING
      sequence:
      - alias: Turn heating state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
            condition: state
            entity_id: climate.en_suite_room
            state: 'off'
          then:
            alias: Turn heating state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: ''
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - alias: Turn climate.en_suite_room state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: climate.set_hvac_mode
                  data:
                    hvac_mode: heat
                  entity_id: climate.en_suite_room
              - alias: Turn switch.schedule_en_suite_room_temperature state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id: switch.schedule_en_suite_room_temperature
          else:
            alias: Turn heating state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: ''
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - alias: Turn climate.en_suite_room state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: climate.set_hvac_mode
                  data:
                    hvac_mode: 'off'
                  entity_id: climate.en_suite_room
              - alias: Turn switch.schedule_en_suite_room_temperature state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id: switch.schedule_en_suite_room_temperature
    - conditions:
      - condition: trigger
        id: INCREMENT_HEATING
      sequence:
      - alias: Turn heating state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_temperature
          target:
            entity_id: climate.en_suite_room
          data:
            temperature: '{{ (state_attr(''climate.en_suite_room'', ''temperature'')) + 1}}'
    - conditions:
      - condition: trigger
        id: DECREMENT_HEATING
      sequence:
      - alias: Turn heating state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_temperature
          target:
            entity_id: climate.en_suite_room
          data:
            temperature: '{{ (state_attr(''climate.en_suite_room'', ''temperature'')) + -1}}'
  id: automation.zlb_er_single_button_button_control_en_suite_room
- alias: ZLB-ER Eight Key Knob Control-En-suite Room
  trigger:
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_1_single
    id: TOGGLE_AL_SLEEP_MODE
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - button_1_double
    - button_1_hold
    - knob_clockwise_after_toggling_button_1
    - knob_clockwise_after_toggling_button_1_and_knob
    - knob_anticlockwise_after_toggling_button_1
    - knob_anticlockwise_after_toggling_button_1_and_knob
    id: CYCLE_SCENES
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_2_single
    id: TOGGLE_CEILING_LIGHTS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_clockwise_after_toggling_button_2
    - knob_clockwise_after_toggling_button_2_and_knob
    id: INCREMENT_CEILING_LIGHTS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_anticlockwise_after_toggling_button_2
    - knob_anticlockwise_after_toggling_button_2_and_knob
    id: DECREMENT_CEILING_LIGHTS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_3_single
    id: TOGGLE_HEATING
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_clockwise_after_toggling_button_3
    - knob_clockwise_after_toggling_button_3_and_knob
    id: INCREMENT_HEATING
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_anticlockwise_after_toggling_button_3
    - knob_anticlockwise_after_toggling_button_3_and_knob
    id: DECREMENT_HEATING
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_4_single
    id: CYCLE_TV_BRIGHTNESS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_4_hold
    id: TOGGLE_TV_POWER
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_clockwise_after_toggling_button_4
    - knob_clockwise_after_toggling_button_4_and_knob
    id: INCREMENT_TV_VOLUME
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_anticlockwise_after_toggling_button_4
    - knob_anticlockwise_after_toggling_button_4_and_knob
    id: DECREMENT_TV_VOLUME
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_5_single
    id: TOGGLE_LEDS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_clockwise_after_toggling_button_5
    - knob_clockwise_after_toggling_button_5_and_knob
    id: INCREMENT_LEDS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_anticlockwise_after_toggling_button_5
    - knob_anticlockwise_after_toggling_button_5_and_knob
    id: DECREMENT_LEDS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_6_single
    id: TOGGLE_CURTAINS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_clockwise_after_toggling_button_6
    - knob_clockwise_after_toggling_button_6_and_knob
    id: INCREMENT_CURTAINS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_anticlockwise_after_toggling_button_6
    - knob_anticlockwise_after_toggling_button_6_and_knob
    id: DECREMENT_CURTAINS
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_7_single
    id: TOGGLE_LAMP_0
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_clockwise_after_toggling_button_7
    - knob_clockwise_after_toggling_button_7_and_knob
    id: INCREMENT_LAMP_0
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_anticlockwise_after_toggling_button_7
    - knob_anticlockwise_after_toggling_button_7_and_knob
    id: DECREMENT_LAMP_0
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to: button_8_single
    id: TOGGLE_LAMP_1
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_clockwise_after_toggling_button_8
    - knob_clockwise_after_toggling_button_8_and_knob
    id: INCREMENT_LAMP_1
  - platform: state
    entity_id:
    - sensor.d5154864a1bb_action
    - sensor.ce327cd55cd0_action
    to:
    - knob_anticlockwise_after_toggling_button_8
    - knob_anticlockwise_after_toggling_button_8_and_knob
    id: DECREMENT_LAMP_1
  mode: parallel
  action:
    choose:
    - conditions:
      - condition: trigger
        id: CYCLE_SCENES
      sequence:
        choose:
        - conditions:
            condition: state
            entity_id: input_select.en_suite_room_scene
            state: All Off
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.en_suite_room_scene
              scene: All White
        - conditions:
            condition: state
            entity_id: input_select.en_suite_room_scene
            state: All White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.en_suite_room_scene
              scene: Lamp LED White
        - conditions:
            condition: state
            entity_id: input_select.en_suite_room_scene
            state: Lamp LED White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.en_suite_room_scene
              scene: LED White
        - conditions:
            condition: state
            entity_id: input_select.en_suite_room_scene
            state: LED White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.en_suite_room_scene
              scene: All Off
        default:
          service: script.call_room_scene
          data:
            room_scene_select: input_select.en_suite_room_scene
            scene: All White
    - conditions:
      - condition: trigger
        id: DO_NOTHING
      sequence:
      - service: script.do_nothing
    - conditions:
      - condition: trigger
        id: TOGGLE_AL_SLEEP_MODE
      sequence:
      - alias: Turn switch.adaptive_lighting_sleep_mode_en_suite_room state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: switch.adaptive_lighting_sleep_mode_en_suite_room
            state: 'on'
            match: any
          then:
            alias: Turn switch.adaptive_lighting_sleep_mode_en_suite_room state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id: switch.adaptive_lighting_sleep_mode_en_suite_room
          else:
            alias: Turn switch.adaptive_lighting_sleep_mode_en_suite_room state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id: switch.adaptive_lighting_sleep_mode_en_suite_room
    - conditions:
      - condition: trigger
        id: TOGGLE_CURTAINS
      sequence:
      - alias: Turn cover.en_suite_room_curtain state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.en_suite_room_curtain
          - service: cover.toggle
            entity_id:
            - cover.en_suite_room_curtain
    - conditions:
      - condition: trigger
        id: INCREMENT_CURTAINS
      sequence:
      - alias: Turn cover.en_suite_room_curtain state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.en_suite_room_curtain
          - service: cover.set_cover_position
            target:
              entity_id:
              - cover.en_suite_room_curtain
            data:
              position: '{{ [[ (state_attr(''cover.en_suite_room_curtain'', ''current_position'')) + 34 ,0]|max,100]|min}}'
    - conditions:
      - condition: trigger
        id: DECREMENT_CURTAINS
      sequence:
      - alias: Turn cover.en_suite_room_curtain state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.en_suite_room_curtain
          - service: cover.set_cover_position
            target:
              entity_id:
              - cover.en_suite_room_curtain
            data:
              position: '{{ [[ (state_attr(''cover.en_suite_room_curtain'', ''current_position'')) + -34 ,0]|max,100]|min}}'
    - conditions:
      - condition: trigger
        id: TOGGLE_LAMP_0
      sequence:
      - alias: Turn light.en_suite_room_lamp_1 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: light.en_suite_room_lamp_1
            state: 'on'
            match: any
          then:
            alias: Turn light.en_suite_room_lamp_1 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id: light.en_suite_room_lamp_1
          else:
            alias: Turn light.en_suite_room_lamp_1 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id: light.en_suite_room_lamp_1
    - conditions:
      - condition: trigger
        id: INCREMENT_LAMP_0
      sequence:
      - alias: Turn light.en_suite_room_lamp_1 state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.en_suite_room_lamp_1
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LAMP_0
      sequence:
      - alias: Turn light.en_suite_room_lamp_1 state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.en_suite_room_lamp_1
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_LAMP_1
      sequence:
      - alias: Turn light.en_suite_room_lamp_2 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: light.en_suite_room_lamp_2
            state: 'on'
            match: any
          then:
            alias: Turn light.en_suite_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id: light.en_suite_room_lamp_2
          else:
            alias: Turn light.en_suite_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id: light.en_suite_room_lamp_2
    - conditions:
      - condition: trigger
        id: INCREMENT_LAMP_1
      sequence:
      - alias: Turn light.en_suite_room_lamp_2 state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.en_suite_room_lamp_2
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LAMP_1
      sequence:
      - alias: Turn light.en_suite_room_lamp_2 state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.en_suite_room_lamp_2
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_CEILING_LIGHTS
      sequence:
      - alias: Turn light.en_suite_room_ceiling_light state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id:
            - light.en_suite_room_ceiling_light
            state: 'on'
            match: any
          then:
            alias: Turn light.en_suite_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_ceiling_light
          else:
            alias: Turn light.en_suite_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_ceiling_light
    - conditions:
      - condition: trigger
        id: INCREMENT_CEILING_LIGHTS
      sequence:
      - alias: Turn light.en_suite_room_ceiling_light state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.en_suite_room_ceiling_light
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_CEILING_LIGHTS
      sequence:
      - alias: Turn light.en_suite_room_ceiling_light state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.en_suite_room_ceiling_light
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_LEDS
      sequence:
      - alias: Turn light.en_suite_room_bed_led state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id:
            - light.en_suite_room_bed_led
            state: 'on'
            match: any
          then:
            alias: Turn light.en_suite_room_bed_led state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_bed_led
          else:
            alias: Turn light.en_suite_room_bed_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_bed_led
    - conditions:
      - condition: trigger
        id: INCREMENT_LEDS
      sequence:
      - alias: Turn light.en_suite_room_bed_led state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.en_suite_room_bed_led
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LEDS
      sequence:
      - alias: Turn light.en_suite_room_bed_led state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.en_suite_room_bed_led
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_TV_POWER
      sequence:
      - alias: Turn media_player.portable_tv state=power_toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
            condition: state
            entity_id:
            - media_player.portable_tv
            state: 'off'
          then:
            alias: Turn media_player.portable_tv state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - media_player.portable_tv
          else:
            alias: Turn media_player.portable_tv state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - media_player.portable_tv
    - conditions:
      - condition: trigger
        id: CYCLE_TV_BRIGHTNESS
      sequence:
      - alias: Turn media_player.portable_tv
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          choose:
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Movie
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Dynamic
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Natural
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Movie
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Standard
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Natural
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Dynamic
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Standard
    - conditions:
      - condition: trigger
        id: INCREMENT_TV_BRIGHTNESS
      sequence:
      - alias: Turn media_player.portable_tv
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          choose:
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Movie
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Natural
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Natural
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Standard
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Standard
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Dynamic
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Dynamic
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Dynamic
    - conditions:
      - condition: trigger
        id: DECREMENT_TV_BRIGHTNESS
      sequence:
      - alias: Turn media_player.portable_tv
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          choose:
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Movie
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Movie
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Natural
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Movie
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Standard
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Natural
          - conditions:
              condition: state
              entity_id:
              - input_select.portable_tv_picture_mode
              state: Dynamic
            sequence:
              alias: Turn media_player.portable_tv
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: Set TV brightness when it is on
                  condition: state
                  entity_id:
                  - media_player.portable_tv
                  state: 'on'
                then:
                  service: input_select.select_option
                  data:
                    entity_id:
                    - input_select.portable_tv_picture_mode
                    option: Standard
    - conditions:
      - condition: trigger
        id: INCREMENT_TV_VOLUME
      sequence:
      - alias: Turn tv_volumne state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: Turn media_player.portable_tv state=single_device_volume_inc
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: media_player.volume_set
            entity_id:
            - media_player.portable_tv
            data_template:
              volume_level: '{{ (state_attr(''media_player.portable_tv'', ''volume_level'')) + 0.34 }}'
    - conditions:
      - condition: trigger
        id: DECREMENT_TV_VOLUME
      sequence:
      - alias: Turn tv_volumne state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: Turn media_player.portable_tv state=single_device_volume_dec
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: media_player.volume_set
            entity_id:
            - media_player.portable_tv
            data_template:
              volume_level: '{{ (state_attr(''media_player.portable_tv'', ''volume_level'')) + 0.34 }}'
    - conditions:
      - condition: trigger
        id: TOGGLE_HEATING
      sequence:
      - alias: Turn heating state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
            condition: state
            entity_id: climate.en_suite_room
            state: 'off'
          then:
            alias: Turn heating state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: ''
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - alias: Turn climate.en_suite_room state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: climate.set_hvac_mode
                  data:
                    hvac_mode: heat
                  entity_id: climate.en_suite_room
              - alias: Turn switch.schedule_en_suite_room_temperature state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id: switch.schedule_en_suite_room_temperature
          else:
            alias: Turn heating state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: ''
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - alias: Turn climate.en_suite_room state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: climate.set_hvac_mode
                  data:
                    hvac_mode: 'off'
                  entity_id: climate.en_suite_room
              - alias: Turn switch.schedule_en_suite_room_temperature state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id: switch.schedule_en_suite_room_temperature
    - conditions:
      - condition: trigger
        id: INCREMENT_HEATING
      sequence:
      - alias: Turn heating state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_temperature
          target:
            entity_id: climate.en_suite_room
          data:
            temperature: '{{ (state_attr(''climate.en_suite_room'', ''temperature'')) + 1}}'
    - conditions:
      - condition: trigger
        id: DECREMENT_HEATING
      sequence:
      - alias: Turn heating state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_temperature
          target:
            entity_id: climate.en_suite_room
          data:
            temperature: '{{ (state_attr(''climate.en_suite_room'', ''temperature'')) + -1}}'
  id: automation.zlb_er_eight_key_knob_control_en_suite_room
- alias: ZL-ER Applies Different Scenes Based on Scene Selections (State Execution)-En-suite Room
  trigger:
  - platform: state
    entity_id: input_select.en_suite_room_scene
  mode: restart
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: All White
      sequence:
        alias: All White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_lamp_1
              - light.en_suite_room_lamp_2
          - alias: Turn light.en_suite_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_ceiling_light
          - alias: Turn light.en_suite_room_bed_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_bed_led
          - alias: Turn media_player.portable_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: Set TV brightness when it is on
                condition: state
                entity_id:
                - media_player.portable_tv
                state: 'on'
              then:
                service: input_select.select_option
                data:
                  entity_id:
                  - input_select.portable_tv_picture_mode
                  option: Standard
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Ceiling Light White
      sequence:
        alias: Ceiling Light White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_lamp_1
              - light.en_suite_room_lamp_2
          - alias: Turn light.en_suite_room_bed_led state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_bed_led
          - alias: Turn light.en_suite_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_ceiling_light
          - alias: Turn media_player.portable_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: Set TV brightness when it is on
                condition: state
                entity_id:
                - media_player.portable_tv
                state: 'on'
              then:
                service: input_select.select_option
                data:
                  entity_id:
                  - input_select.portable_tv_picture_mode
                  option: Standard
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Lamp LED White
      sequence:
        alias: Lamp LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.en_suite_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_ceiling_light
          - alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_lamp_1
              - light.en_suite_room_lamp_2
          - alias: Turn light.en_suite_room_bed_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_bed_led
          - alias: Turn media_player.portable_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: Set TV brightness when it is on
                condition: state
                entity_id:
                - media_player.portable_tv
                state: 'on'
              then:
                service: input_select.select_option
                data:
                  entity_id:
                  - input_select.portable_tv_picture_mode
                  option: Standard
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: LED White
      sequence:
        alias: LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.en_suite_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_ceiling_light
          - alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_lamp_1
              - light.en_suite_room_lamp_2
          - alias: Turn light.en_suite_room_bed_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.en_suite_room_bed_led
          - alias: Turn media_player.portable_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: Set TV brightness when it is on
                condition: state
                entity_id:
                - media_player.portable_tv
                state: 'on'
              then:
                service: input_select.select_option
                data:
                  entity_id:
                  - input_select.portable_tv_picture_mode
                  option: Natural
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Hue
      sequence:
        alias: Hue
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.en_suite_room_lamp_1
            - light.en_suite_room_lamp_2
            - light.en_suite_room_ceiling_light
            - light.en_suite_room_bed_led
            state: 'off'
            rgb: non_rgb_only
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.en_suite_room_lamp_1
            - light.en_suite_room_lamp_2
            - light.en_suite_room_ceiling_light
            - light.en_suite_room_bed_led
        - alias: Turn media_player.portable_tv
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            if:
            - alias: Set TV brightness when it is on
              condition: state
              entity_id:
              - media_player.portable_tv
              state: 'on'
            then:
              service: input_select.select_option
              data:
                entity_id:
                - input_select.portable_tv_picture_mode
                option: Natural
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Night Mode
      sequence:
        alias: Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.en_suite_room_night_mode
          - alias: Turn media_player.portable_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: Set TV brightness when it is on
                condition: state
                entity_id:
                - media_player.portable_tv
                state: 'on'
              then:
                service: input_select.select_option
                data:
                  entity_id:
                  - input_select.portable_tv_picture_mode
                  option: Natural
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Dark Night Mode
      sequence:
        alias: Dark Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.en_suite_room_dark_night_mode
          - alias: Turn media_player.portable_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: Set TV brightness when it is on
                condition: state
                entity_id:
                - media_player.portable_tv
                state: 'on'
              then:
                service: input_select.select_option
                data:
                  entity_id:
                  - input_select.portable_tv_picture_mode
                  option: Movie
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Sleep Mode
      sequence:
        alias: Sleep Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.en_suite_room_sleep_mode
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: All Off
      sequence:
        alias: All Off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.en_suite_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_ceiling_light
          - alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_lamp_1
              - light.en_suite_room_lamp_2
          - alias: Turn light.en_suite_room_bed_led state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.en_suite_room_bed_led
          - alias: Turn media_player.portable_tv
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: Set TV brightness when it is on
                condition: state
                entity_id:
                - media_player.portable_tv
                state: 'on'
              then:
                service: input_select.select_option
                data:
                  entity_id:
                  - input_select.portable_tv_picture_mode
                  option: Standard
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Lights on in hot sunshine
      sequence:
        alias: Lights on in hot sunshine
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_ceiling_light
              else:
                alias: Turn light.en_suite_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_in_hot_sunshine_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
              else:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_in_hot_sunshine_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_bed_led
              else:
                alias: Turn light.en_suite_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_in_hot_sunshine_en_suite_room
                state: 'on'
              then:
                alias: Turn cover.en_suite_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.en_suite_room_curtain
              else:
                alias: Turn cover.en_suite_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.en_suite_room_curtain
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Lights on when bright outdoor
      sequence:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_ceiling_light
              else:
                alias: Turn light.en_suite_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
              else:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_bed_led
              else:
                alias: Turn light.en_suite_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn cover.en_suite_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.en_suite_room_curtain
              else:
                alias: Turn cover.en_suite_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.en_suite_room_curtain
    - conditions:
      - condition: state
        entity_id: input_select.en_suite_room_scene
        state: Lights on when dark outdoor
      sequence:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_ceiling_light
              else:
                alias: Turn light.en_suite_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
              else:
                alias: Turn light.en_suite_room_lamp_1 light.en_suite_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_lamp_1
                  - light.en_suite_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn light.en_suite_room_bed_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.en_suite_room_bed_led
              else:
                alias: Turn light.en_suite_room_bed_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.en_suite_room_bed_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_en_suite_room
                state: 'on'
              then:
                alias: Turn cover.en_suite_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.en_suite_room_curtain
              else:
                alias: Turn cover.en_suite_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.en_suite_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.en_suite_room_curtain
  id: automation.zl_er_applies_different_scenes_based_on_scene_selections_state_execution_en_suite_room
- alias: ZLB-ER Wall Switch - Single Press - Toggle Ceiling Light-En-suite Room
  trigger:
  - platform: state
    entity_id:
    - sensor.en_suite_room_wall_button
    - sensor.en_suite_room_wall_button_2
    to:
    - '1'
    - single
    - single_left
    - single_right
    - single_center
    - button_1_single
    - button_2_single
    - button_3_single
  action:
  - alias: Turn light.en_suite_room_ceiling_light state=toggle
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      if:
      - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
        condition: state
        entity_id:
        - light.en_suite_room_ceiling_light
        state: 'on'
        match: any
      then:
        alias: Turn light.en_suite_room_ceiling_light state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_off
          entity_id:
          - light.en_suite_room_ceiling_light
      else:
        alias: Turn light.en_suite_room_ceiling_light state=on
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          entity_id:
          - light.en_suite_room_ceiling_light
  id: automation.zlb_er_wall_switch_single_press_toggle_ceiling_light_en_suite_room
- alias: ZLB-ER Wall Switch - Double Press - Leave Room and Turn Off Everything-En-suite Room
  trigger:
  - platform: state
    entity_id:
    - sensor.en_suite_room_wall_button
    - sensor.en_suite_room_wall_button_2
    to:
    - '2'
    - double
    - double_left
    - double_right
    - double_center
    - button_1_double
    - button_2_double
    - button_3_double
  action:
  - service: automation.trigger
    entity_id:
    - automation.zl_er_lights_off_if_no_person_en_suite_room
    - automation.zh_er_heating_schedule_off_if_people_left_the_room_en_suite_room
  - service: input_select.select_option
    target:
      entity_id: input_select.en_suite_room_occupancy
    data:
      option: Outside
  id: automation.zlb_er_wall_switch_double_press_leave_room_and_turn_off_everything_en_suite_room
- alias: ZOc-ER Occupancy Update-En-suite Room
  id: automation.zoc_er_occupancy_update_en_suite_room
  trigger:
  - entity_id: group.en_suite_room_motion_group
    platform: state
    to: 'on'
  - entity_id: group.en_suite_room_motion_group
    platform: state
    to: 'off'
    for: 05:00:00
  - minutes: /5
    platform: time_pattern
  action:
    service: pyscript.room_occupancy_state_machine
    data:
      occupancy_entity_str: input_select.en_suite_room_occupancy
      motion_str: group.en_suite_room_motion_group
      motion_on_ratio_for_x_min_str: sensor.en_suite_room_motion_on_ratio_for_last_4_minutes
      motion_on_ratio_for_2x_min_str: sensor.en_suite_room_motion_on_ratio_for_last_8_minutes
      room_type: bedroom
      sleep_time: input_boolean.en_suite_room_sleep_time
- alias: ZTV-ER Reset Picture Mode When Turning on TV-En-suite Room
  trigger:
  - platform: state
    entity_id:
    - media_player.portable_tv
    from: 'off'
    to: 'on'
  action:
  - alias: Turn media_player.portable_tv
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      if:
      - alias: Set TV brightness when it is on
        condition: state
        entity_id:
        - media_player.portable_tv
        state: 'on'
      then:
        service: input_select.select_option
        data:
          entity_id:
          - input_select.portable_tv_picture_mode
          option: Standard
  id: automation.ztv_er_reset_picture_mode_when_turning_on_tv_en_suite_room
input_select:
  en_suite_room_scene:
    name: En Suite Room Scene
    options:
    - Idle
    - Lamp LED White
    - LED White
    - All White
    - Ceiling Light White
    - All Off
  en_suite_room_occupancy:
    name: En Suite Room Occupancy
    options:
    - Outside
    - Just Entered
    - Stayed Inside
    - In Sleep
sensor:
- platform: history_stats
  name: En-suite Room Motion On Ratio For Last 4 Minutes
  entity_id: group.en_suite_room_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '4'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
- platform: history_stats
  name: En-suite Room Motion On Ratio For Last 8 Minutes
  entity_id: group.en_suite_room_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '8'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
input_boolean:
  en_suite_room_sleep_time:
    name: En Suite Room Sleep Time
    initial: 'off'
  en_suite_room_heating_override:
    name: En Suite Room Heating Override
    initial: 'off'
  curtain_control_when_left_en_suite_room:
    name: Curtain Control When Left En Suite Room
  ceiling_light_control_in_hot_sunshine_en_suite_room:
    name: Ceiling Light Control In Hot Sunshine En Suite Room
  lamp_control_in_hot_sunshine_en_suite_room:
    name: Lamp Control In Hot Sunshine En Suite Room
  led_control_in_hot_sunshine_en_suite_room:
    name: Led Control In Hot Sunshine En Suite Room
  curtain_control_in_hot_sunshine_en_suite_room:
    name: Curtain Control In Hot Sunshine En Suite Room
  ceiling_light_control_when_bright_outdoor_en_suite_room:
    name: Ceiling Light Control When Bright Outdoor En Suite Room
  lamp_control_when_bright_outdoor_en_suite_room:
    name: Lamp Control When Bright Outdoor En Suite Room
  led_control_when_bright_outdoor_en_suite_room:
    name: Led Control When Bright Outdoor En Suite Room
  curtain_control_when_bright_outdoor_en_suite_room:
    name: Curtain Control When Bright Outdoor En Suite Room
  ceiling_light_control_when_dark_outdoor_en_suite_room:
    name: Ceiling Light Control When Dark Outdoor En Suite Room
  lamp_control_when_dark_outdoor_en_suite_room:
    name: Lamp Control When Dark Outdoor En Suite Room
  led_control_when_dark_outdoor_en_suite_room:
    name: Led Control When Dark Outdoor En Suite Room
  curtain_control_when_dark_outdoor_en_suite_room:
    name: Curtain Control When Dark Outdoor En Suite Room
switch:
- platform: group
  name: 'En-suite Room Wall Switch '
  entities: switch.0x00158d00047d69e6_switch
cover:
- platform: group
  name: En-suite Room Curtain
  entities: cover.curtain_d29a
template:
- binary_sensor:
  - name: En-suite Room Heating Required
    state: '{% set climate = "climate.en_suite_room" %}{% if states(climate) == "unavailable" %}off{% else %} {{ ((state_attr(climate, "temperature")  > state_attr(climate, "current_temperature"))  and  (states(climate) != "off"))  }}{% endif %}'
- sensor:
  - name: En-suite Room Six Key Button 1 Button
    state: '{{states.sensor["0x04cf8cdf3c797717_0x04cf8cdf3c797717_action"].state}}'
- sensor:
  - name: En-suite Room Wall Button
    state: '{{states.sensor["0x00158d00047d69e6_action"].state}}'
- sensor:
  - name: En-suite Room Occupancy Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["dced8308f496_illuminance"].state}}'
- sensor:
  - name: En-suite Room Entrance Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["0x00158d00057b37be_illuminance"].state}}'
- sensor:
  - name: En-suite Room Entrance Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["0x00158d00057b37be_battery"].state}}'
- sensor:
  - name: En-suite Room Floor 1 Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["0x00158d000423319f_illuminance"].state}}'
- sensor:
  - name: En-suite Room Floor 1 Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["0x00158d000423319f_battery"].state}}'
- sensor:
  - name: En-suite Room Floor 2 Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["54ef44e58108_illuminance"].state}}'
- sensor:
  - name: En-suite Room Floor 2 Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["54ef44e58108_battery"].state}}'
- sensor:
  - name: En-suite Room Bed Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["54ef44e58345_illuminance"].state}}'
- sensor:
  - name: En-suite Room Bed Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["54ef44e58345_battery"].state}}'
- sensor:
  - name: En-suite Room Temperature Sensor
    unit_of_measurement: "\xB0C"
    state: '{{states.sensor["a4c138b0eb53_temperature"].state | float | round(1)}}'
binary_sensor:
- platform: group
  name: En-suite Room Occupancy Sensor Occupancy
  entities: binary_sensor.dced8308f496_occupancy
- platform: group
  name: En-suite Room Entrance Motion Sensor Motion
  entities: binary_sensor.0x00158d00057b37be_motion
- platform: group
  name: En-suite Room Floor 1 Motion Sensor Motion
  entities: binary_sensor.0x00158d000423319f_motion
- platform: group
  name: En-suite Room Floor 2 Motion Sensor Motion
  entities: binary_sensor.54ef44e58108_motion
- platform: group
  name: En-suite Room Bed Motion Sensor Motion
  entities: binary_sensor.54ef44e58345_motion
light:
- platform: group
  name: En-suite Room Lamp 1
  entities: light.e27w_1_hue
- platform: group
  name: En-suite Room Lamp 2
  entities: light.e27w_2_hue
- platform: group
  name: En-suite Room Ceiling Light
  entities: light.en_suite_room_ceiling_light_hue
adaptive_lighting:
- name: En-suite Room
  lights:
  - light.en_suite_room_lamp_1
  - light.en_suite_room_lamp_2
  - light.en_suite_room_ceiling_light
  prefer_rgb_color: false
  transition: 45
  initial_transition: 1
  interval: 90
  min_brightness: 50
  max_brightness: 100
  min_color_temp: 2700
  max_color_temp: 4000
  sleep_brightness: 20
  sleep_color_temp: 2200
  take_over_control: true
  autoreset_control_seconds: 86400
  detect_non_ha_changes: false
  only_once: false
  adapt_only_on_bare_turn_on: true
  separate_turn_on_commands: false
  send_split_delay: 500
  adapt_delay: 0.5
  intercept: true
  multi_light_intercept: true
  include_config_in_attributes: false
group:
  en_suite_room_occupancy_group:
    name: En Suite Room Occupancy Group
    entities:
    - input_select.en_suite_room_occupancy
    - group.en_suite_room_motion_group
    - binary_sensor.en_suite_room_bed_motion_sensor_motion
    - binary_sensor.en_suite_room_entrance_motion_sensor_motion
    - binary_sensor.en_suite_room_floor_1_motion_sensor_motion
    - binary_sensor.en_suite_room_floor_2_motion_sensor_motion
    - binary_sensor.en_suite_room_occupancy_sensor_occupancy
    - automation.zoc_er_occupancy_update_en_suite_room
  en_suite_room_motion_group:
    name: En Suite Room Motion Group
    entities:
    - binary_sensor.en_suite_room_bed_motion_sensor_motion
    - binary_sensor.en_suite_room_entrance_motion_sensor_motion
    - binary_sensor.en_suite_room_floor_1_motion_sensor_motion
    - binary_sensor.en_suite_room_floor_2_motion_sensor_motion
    - binary_sensor.en_suite_room_occupancy_sensor_occupancy
  en_suite_room_light_group:
    name: En Suite Room Light Group
    entities:
    - light.en_suite_room_bed_led
    - light.en_suite_room_lamp_1
    - light.en_suite_room_lamp_2
    - light.en_suite_room_ceiling_light
  en_suite_room_window_group:
    name: En Suite Room Window Group
    entities: []
  en_suite_room_curtain_group:
    name: En Suite Room Curtain Group
    entities:
    - cover.en_suite_room_curtain
  en_suite_room_auto_gen_automations:
    name: En Suite Room Auto Gen Automations
    entities:
    - input_boolean.curtain_control_when_left_en_suite_room
    - input_boolean.ceiling_light_control_in_hot_sunshine_en_suite_room
    - input_boolean.lamp_control_in_hot_sunshine_en_suite_room
    - input_boolean.led_control_in_hot_sunshine_en_suite_room
    - input_boolean.curtain_control_in_hot_sunshine_en_suite_room
    - input_boolean.ceiling_light_control_when_bright_outdoor_en_suite_room
    - input_boolean.lamp_control_when_bright_outdoor_en_suite_room
    - input_boolean.led_control_when_bright_outdoor_en_suite_room
    - input_boolean.curtain_control_when_bright_outdoor_en_suite_room
    - input_boolean.ceiling_light_control_when_dark_outdoor_en_suite_room
    - input_boolean.lamp_control_when_dark_outdoor_en_suite_room
    - input_boolean.led_control_when_dark_outdoor_en_suite_room
    - input_boolean.curtain_control_when_dark_outdoor_en_suite_room
    - automation.zl_er_ceiling_lights_on_or_open_curtains_if_entering_to_room_en_suite_room
    - automation.zl_er_lights_off_if_no_person_en_suite_room
    - automation.zl_er_disable_entering_lights_on_automation_if_any_people_are_in_the_room_en_suite_room
    - automation.zl_er_led_on_for_3_min_if_walking_in_the_dark_en_suite_room
    - automation.zh_er_heating_schedule_on_if_staying_in_the_room_en_suite_room
    - automation.zh_er_heating_schedule_off_if_people_left_the_room_en_suite_room
    - automation.zh_er_heating_manual_override_en_suite_room
    - automation.zh_er_valve_calibrate_temperature_using_external_sensor_en_suite_room
    - automation.zlb_er_single_button_button_control_en_suite_room
    - automation.zlb_er_eight_key_knob_control_en_suite_room
    - automation.zl_er_applies_different_scenes_based_on_scene_selections_state_execution_en_suite_room
    - automation.zlb_er_wall_switch_single_press_toggle_ceiling_light_en_suite_room
    - automation.zlb_er_wall_switch_double_press_leave_room_and_turn_off_everything_en_suite_room
    - automation.zoc_er_occupancy_update_en_suite_room
    - automation.ztv_er_reset_picture_mode_when_turning_on_tv_en_suite_room
    - switch.0x00158d00047d69e6_switch
    - switch.0x00158d00047d69e6_wireless
    - switch.adaptive_lighting_sleep_mode_en_suite_room
