#############################################################################
# DO NOT MODIFY. This is an automatically generated file.                   # 
# Please modify the python source code under python_templates directory.    #
#############################################################################
automation:
- alias: ZL-GD Ceiling Lights On Or Open Curtains If Entering to Room-Garden
  id: automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
  trigger:
    entity_id:
    - group.garden_motion_group
    platform: state
    to: 'on'
  action:
  - service: automation.turn_off
    entity_id: automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
    data:
      stop_actions: false
  - service: script.call_room_scene
    data:
      room_scene_select: input_select.garden_scene
      scene: Idle
  - if:
    - condition: numeric_state
      entity_id: sensor.met_office_cambridge_city_airport_temperature_3_hourly
      above: '18'
    - condition: time
      after: 06:00:00
      before: '16:00:00'
    - condition: template
      value_template: '{{ now().month > 4 and now().month < 9 }}'
    - condition: state
      entity_id: input_boolean.always_off_constant
      state: 'on'
    then:
      alias: Lights on in hot sunshine
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - parallel:
          - if:
              condition: state
              entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_garden
              state: 'on'
            then:
              alias: Turn switch.garden_ceiling_light state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_on
                entity_id:
                - switch.garden_ceiling_light
            else:
              alias: Turn switch.garden_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_off
                entity_id:
                - switch.garden_ceiling_light
          - if:
              condition: state
              entity_id: input_boolean.lamp_control_in_hot_sunshine_garden
              state: 'on'
            then:
              service: script.do_nothing
            else:
              service: script.do_nothing
          - if:
              condition: state
              entity_id: input_boolean.led_control_in_hot_sunshine_garden
              state: 'on'
            then:
              service: script.do_nothing
            else:
              service: script.do_nothing
          - if:
              condition: state
              entity_id: input_boolean.curtain_control_in_hot_sunshine_garden
              state: 'on'
            then:
              service: script.do_nothing
            else:
              service: script.do_nothing
    else:
      if:
      - condition: and
        conditions:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.living_room_light_sensor
            above: 100
          - condition: state
            entity_id: sensor.living_room_light_sensor
            state:
            - unavailable
            - unknown
        - condition: or
          conditions:
          - condition: state
            entity_id: sun.sun
            state: above_horizon
          - condition: state
            entity_id: sun.sun
            state:
            - unavailable
            - unknown
      then:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.garden_ceiling_light
              else:
                alias: Turn switch.garden_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
      else:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.garden_ceiling_light
              else:
                alias: Turn switch.garden_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
- alias: ZL-GD Lights Off If No Person-Garden
  id: automation.zl_gd_lights_off_if_no_person_garden
  trigger:
  - platform: state
    entity_id: input_select.garden_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  condition:
  - condition: state
    entity_id: input_select.garden_occupancy
    state: Outside
  - condition: state
    entity_id: group.garden_motion_group
    state: 'off'
    for: 00:01:00
  action:
    parallel:
    - alias: Turn automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: homeassistant.turn_on
        entity_id: automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
    - if:
        condition: state
        entity_id: input_boolean.curtain_control_when_left_garden
        state: 'on'
      then:
        service: script.do_nothing
      else:
        service: script.do_nothing
    - service: script.do_nothing
    - alias: All Off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - alias: Turn switch.garden_ceiling_light state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_off
            entity_id:
            - switch.garden_ceiling_light
        - service: script.do_nothing
        - service: script.do_nothing
        - service: script.do_nothing
    - service: script.do_nothing
- alias: ZL-GD Disable Entering Lights-on Automation If any People are in the Room-Garden
  trigger:
  - platform: state
    entity_id: input_select.garden_occupancy
    to:
    - Just Entered
    - In Sleep
    - Stayed Inside
  action:
  - delay: 00:00:10
  - service: automation.turn_off
    entity_id: automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
    data:
      stop_actions: 'false'
  id: automation.zl_gd_disable_entering_lights_on_automation_if_any_people_are_in_the_room_garden
- alias: ZL-GD Applies Different Scenes Based on Scene Selections (State Execution)-Garden
  trigger:
  - platform: state
    entity_id: input_select.garden_scene
  mode: restart
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: All White
      sequence:
        alias: All White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: script.do_nothing
          - alias: Turn switch.garden_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - switch.garden_ceiling_light
          - service: script.do_nothing
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Ceiling Light White
      sequence:
        alias: Ceiling Light White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: script.do_nothing
          - service: script.do_nothing
          - alias: Turn switch.garden_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - switch.garden_ceiling_light
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Lamp LED White
      sequence:
        alias: Lamp LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn switch.garden_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - switch.garden_ceiling_light
          - service: script.do_nothing
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: LED White
      sequence:
        alias: LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Hue
      sequence:
        alias: Hue
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - switch.garden_ceiling_light
            state: 'off'
            rgb: non_rgb_only
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - switch.garden_ceiling_light
        - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Night Mode
      sequence:
        alias: Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.garden_night_mode
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Dark Night Mode
      sequence:
        alias: Dark Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.garden_dark_night_mode
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Sleep Mode
      sequence:
        alias: Sleep Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.garden_sleep_mode
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: All Off
      sequence:
        alias: All Off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn switch.garden_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - switch.garden_ceiling_light
          - service: script.do_nothing
          - service: script.do_nothing
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Lights on in hot sunshine
      sequence:
        alias: Lights on in hot sunshine
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.garden_ceiling_light
              else:
                alias: Turn switch.garden_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_in_hot_sunshine_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_in_hot_sunshine_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_in_hot_sunshine_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Lights on when bright outdoor
      sequence:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.garden_ceiling_light
              else:
                alias: Turn switch.garden_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Lights on when dark outdoor
      sequence:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.garden_ceiling_light
              else:
                alias: Turn switch.garden_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_garden
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
  id: automation.zl_gd_applies_different_scenes_based_on_scene_selections_state_execution_garden
- alias: ZOc-GD Occupancy Update-Garden
  id: automation.zoc_gd_occupancy_update_garden
  trigger:
  - entity_id: group.garden_motion_group
    platform: state
    to: 'on'
  - entity_id: group.garden_motion_group
    platform: state
    to: 'off'
    for: 05:00:00
  - minutes: /5
    platform: time_pattern
  action:
    service: pyscript.room_occupancy_state_machine
    data:
      occupancy_entity_str: input_select.garden_occupancy
      motion_str: group.garden_motion_group
      motion_on_ratio_for_x_min_str: sensor.garden_motion_on_ratio_for_last_4_minutes
      motion_on_ratio_for_2x_min_str: sensor.garden_motion_on_ratio_for_last_8_minutes
      room_type: landing
      sleep_time: input_boolean.master_room_sleep_time
input_select:
  garden_scene:
    name: Garden Scene
    options:
    - Idle
    - All White
    - Ceiling Light White
    - All Off
  garden_occupancy:
    name: Garden Occupancy
    options:
    - Outside
    - Just Entered
    - Stayed Inside
    - In Sleep
sensor:
- platform: history_stats
  name: Garden Motion On Ratio For Last 4 Minutes
  entity_id: group.garden_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '4'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
- platform: history_stats
  name: Garden Motion On Ratio For Last 8 Minutes
  entity_id: group.garden_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '8'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
input_boolean:
  master_room_sleep_time:
    name: Master Room Sleep Time
  curtain_control_when_left_garden:
    name: Curtain Control When Left Garden
    initial: 'off'
  ceiling_light_control_in_hot_sunshine_garden:
    name: Ceiling Light Control In Hot Sunshine Garden
    initial: 'off'
  lamp_control_in_hot_sunshine_garden:
    name: Lamp Control In Hot Sunshine Garden
    initial: 'off'
  led_control_in_hot_sunshine_garden:
    name: Led Control In Hot Sunshine Garden
    initial: 'off'
  curtain_control_in_hot_sunshine_garden:
    name: Curtain Control In Hot Sunshine Garden
    initial: 'off'
  ceiling_light_control_when_bright_outdoor_garden:
    name: Ceiling Light Control When Bright Outdoor Garden
  lamp_control_when_bright_outdoor_garden:
    name: Lamp Control When Bright Outdoor Garden
    initial: 'off'
  led_control_when_bright_outdoor_garden:
    name: Led Control When Bright Outdoor Garden
    initial: 'off'
  curtain_control_when_bright_outdoor_garden:
    name: Curtain Control When Bright Outdoor Garden
    initial: 'off'
  ceiling_light_control_when_dark_outdoor_garden:
    name: Ceiling Light Control When Dark Outdoor Garden
  lamp_control_when_dark_outdoor_garden:
    name: Lamp Control When Dark Outdoor Garden
    initial: 'off'
  led_control_when_dark_outdoor_garden:
    name: Led Control When Dark Outdoor Garden
    initial: 'off'
  curtain_control_when_dark_outdoor_garden:
    name: Curtain Control When Dark Outdoor Garden
    initial: 'off'
switch:
- platform: group
  name: Garden Wall Switch 1
  entities: switch.0x00158d000522e00e_channel_1
- platform: group
  name: Garden Wall Switch 2
  entities: switch.0x00158d000522e00e_channel_2
- platform: group
  name: Garden Ceiling Light
  entities: switch.0x00158d000522e00e_channel_2
- platform: group
  name: Garden Spotlight 1
  entities: switch.mss425e_5df5_outlet_1
cover: []
template:
- sensor:
  - name: Garden Bike Shed Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["54ef44e34c16_illuminance"].state}}'
- sensor:
  - name: Garden Bike Shed Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["54ef44e34c16_battery"].state}}'
- sensor:
  - name: Garden Sliding Door Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["0x00158d000548b8a5_illuminance"].state}}'
- sensor:
  - name: Garden Sliding Door Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["0x00158d000548b8a5_battery"].state}}'
- sensor:
  - name: Garden Wall Button
    state: '{{states.sensor["0x00158d000522e00e_action"].state}}'
binary_sensor:
- platform: group
  name: Garden Bike Shed Motion Sensor Motion
  entities: binary_sensor.54ef44e34c16_motion
- platform: group
  name: Garden Sliding Door Motion Sensor Motion
  entities: binary_sensor.0x00158d000548b8a5_motion
- platform: group
  name: Garden Rain Sensor
  entities: binary_sensor.a4c1386b73af_water_leak
light: []
adaptive_lighting: []
group:
  garden_occupancy_group:
    name: Garden Occupancy Group
    entities:
    - input_select.garden_occupancy
    - group.garden_motion_group
    - binary_sensor.garden_sliding_door_motion_sensor_motion
    - binary_sensor.garden_bike_shed_motion_sensor_motion
    - automation.zoc_gd_occupancy_update_garden
  garden_motion_group:
    name: Garden Motion Group
    entities:
    - binary_sensor.garden_sliding_door_motion_sensor_motion
    - binary_sensor.garden_bike_shed_motion_sensor_motion
  garden_light_group:
    name: Garden Light Group
    entities:
    - light.garden_ceiling_light
  garden_window_group:
    name: Garden Window Group
    entities: []
  garden_curtain_group:
    name: Garden Curtain Group
    entities: []
  garden_auto_gen_automations:
    name: Garden Auto Gen Automations
    entities:
    - input_boolean.ceiling_light_control_when_bright_outdoor_garden
    - input_boolean.ceiling_light_control_when_dark_outdoor_garden
    - automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
    - automation.zl_gd_lights_off_if_no_person_garden
    - automation.zl_gd_disable_entering_lights_on_automation_if_any_people_are_in_the_room_garden
    - automation.zl_gd_applies_different_scenes_based_on_scene_selections_state_execution_garden
    - automation.zoc_gd_occupancy_update_garden
    - switch.0x00158d000522e00e_channel_1
    - switch.0x00158d000522e00e_channel_2
    - switch.0x00158d000522e00e_wireless_1
    - switch.0x00158d000522e00e_wireless_2
