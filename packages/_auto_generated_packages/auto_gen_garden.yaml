automation:
- alias: ZL-GD Ceiling Lights On Or Open Curtains If Entering to Room-Garden
  id: automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
  trigger:
    entity_id:
    - group.garden_motion
    platform: state
    to: 'on'
  action:
  - service: automation.turn_off
    entity_id: automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
    data:
      stop_actions: false
  - service: script.call_room_scene
    data:
      room_scene_select: input_select.garden_scene
      scene: Idle
  - if:
    - condition: numeric_state
      entity_id: sensor.met_office_cambridge_city_airport_temperature_3_hourly
      above: '20'
    - condition: time
      after: '10:00:00'
      before: '13:00:00'
    - condition: template
      value_template: '{{ now().month > 4 and now().month < 9 }}'
    - condition: state
      entity_id: input_boolean.always_off_constant
      state: 'on'
    then:
      alias: Lights on in hot sunshine
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - parallel:
          - if:
              condition: state
              entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_garden
              state: 'on'
            then:
              alias: Turn switch.garden_ceiling_light state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: any ceiling lights is unavailable, using wall switches to control instead
                  condition: state
                  entity_id:
                  - switch.garden_ceiling_light
                  state: unavailable
                  match: any
                then:
                  alias: Turn nothing state=on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    service: cover.open_cover
                    entity_id: []
                else:
                  alias: Turn switch.garden_ceiling_light state=on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    service: homeassistant.turn_on
                    entity_id:
                    - switch.garden_ceiling_light
          - if:
              condition: state
              entity_id: input_boolean.lamp_control_in_hot_sunshine_garden
              state: 'on'
            then:
              alias: Turn nothing state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: cover.open_cover
                entity_id: []
          - if:
              condition: state
              entity_id: input_boolean.led_control_in_hot_sunshine_garden
              state: 'on'
            then:
              alias: Turn nothing state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: cover.open_cover
                entity_id: []
          - if:
              condition: state
              entity_id: input_boolean.curtain_control_in_hot_sunshine_garden
              state: 'on'
            then:
              alias: Turn nothing state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: cover.open_cover
                entity_id: []
    else:
      if:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      then:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - switch.garden_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn nothing state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: cover.open_cover
                      entity_id: []
                  else:
                    alias: Turn switch.garden_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
      else:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - switch.garden_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn nothing state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: cover.open_cover
                      entity_id: []
                  else:
                    alias: Turn switch.garden_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
- alias: ZL-GD Lights Off If No Person-Garden
  id: automation.zl_gd_lights_off_if_no_person_garden
  trigger:
  - platform: state
    entity_id: input_select.garden_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  condition:
  - condition: state
    entity_id: input_select.garden_occupancy
    state: Outside
  - condition: state
    entity_id: group.garden_motion
    state: 'off'
    for: 00:01:00
  action:
    parallel:
    - service: homeassistant.turn_on
      entity_id: automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
    - alias: Turn nothing state=off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: cover.close_cover
        entity_id: []
    - alias: Turn nothing state=off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: cover.close_cover
        entity_id: []
    - alias: All Off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - alias: Turn switch.garden_ceiling_light state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            if:
            - alias: any ceiling lights is unavailable, using wall switches to control instead
              condition: state
              entity_id:
              - switch.garden_ceiling_light
              state: unavailable
              match: any
            then:
              alias: Turn nothing state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: cover.close_cover
                entity_id: []
            else:
              alias: Turn switch.garden_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_off
                entity_id:
                - switch.garden_ceiling_light
        - alias: Turn nothing state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: cover.close_cover
            entity_id: []
        - alias: Turn nothing state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: cover.close_cover
            entity_id: []
- alias: ZL-GD Applies Different Scenes Based on Scene Selections (State Execution) - Garden
  trigger:
  - platform: state
    entity_id: input_select.garden_scene
  mode: restart
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: All White
      sequence:
        alias: All White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn nothing state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.open_cover
              entity_id: []
          - alias: Turn switch.garden_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - switch.garden_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
              else:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.garden_ceiling_light
          - alias: Turn nothing state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.open_cover
              entity_id: []
          - alias: Turn nothing
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id: []
                picture_mode: Standard
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Ceiling Light White
      sequence:
        alias: Ceiling Light White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn nothing state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.close_cover
              entity_id: []
          - alias: Turn switch.garden_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - switch.garden_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
              else:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.garden_ceiling_light
          - alias: Turn nothing
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id: []
                picture_mode: Standard
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Lamp LED White
      sequence:
        alias: Lamp LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn switch.garden_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - switch.garden_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn nothing state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.close_cover
                  entity_id: []
              else:
                alias: Turn switch.garden_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.garden_ceiling_light
          - alias: Turn nothing state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.open_cover
              entity_id: []
          - alias: Turn nothing state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.open_cover
              entity_id: []
          - alias: Turn nothing
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id: []
                picture_mode: Standard
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: LED White
      sequence:
        alias: LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn switch.garden_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - switch.garden_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn nothing state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.close_cover
                  entity_id: []
              else:
                alias: Turn switch.garden_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.garden_ceiling_light
          - alias: Turn nothing state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.close_cover
              entity_id: []
          - alias: Turn nothing state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.open_cover
              entity_id: []
          - alias: Turn nothing
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id: []
                picture_mode: Natural
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Hue
      sequence:
        alias: Hue
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - alias: Turn nothing state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: cover.open_cover
            entity_id: []
        - alias: Turn nothing state=on light_brightness=100
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: light.turn_on
            entity_id: []
            data:
              brightness_pct: 100
        - service: pyscript.set_rgb_light_list
          data:
            light_list:
            - switch.garden_ceiling_light
        - alias: Turn nothing
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: samsungtv_smart.select_picture_mode
            data:
              entity_id: []
              picture_mode: Natural
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Night Mode
      sequence:
        alias: Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.garden_night_mode
          - alias: Turn nothing
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id: []
                picture_mode: Natural
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Dark Night Mode
      sequence:
        alias: Dark Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.garden_dark_night_mode
          - alias: Turn nothing
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: samsungtv_smart.select_picture_mode
              data:
                entity_id: []
                picture_mode: Movie
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: All Off
      sequence:
        alias: All Off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn switch.garden_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - switch.garden_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn nothing state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.close_cover
                  entity_id: []
              else:
                alias: Turn switch.garden_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.garden_ceiling_light
          - alias: Turn nothing state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.close_cover
              entity_id: []
          - alias: Turn nothing state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: cover.close_cover
              entity_id: []
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Lights on in hot sunshine
      sequence:
        alias: Lights on in hot sunshine
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - switch.garden_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn nothing state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: cover.open_cover
                      entity_id: []
                  else:
                    alias: Turn switch.garden_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_in_hot_sunshine_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.led_control_in_hot_sunshine_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_in_hot_sunshine_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Lights on when bright outdoor
      sequence:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - switch.garden_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn nothing state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: cover.open_cover
                      entity_id: []
                  else:
                    alias: Turn switch.garden_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
    - conditions:
      - condition: state
        entity_id: input_select.garden_scene
        state: Lights on when dark outdoor
      sequence:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn switch.garden_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - switch.garden_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn nothing state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: cover.open_cover
                      entity_id: []
                  else:
                    alias: Turn switch.garden_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_on
                      entity_id:
                      - switch.garden_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_garden
                state: 'on'
              then:
                alias: Turn nothing state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: cover.open_cover
                  entity_id: []
  id: automation.zl_gd_applies_different_scenes_based_on_scene_selections_state_execution_garden
- alias: ZOc-GD Occupancy Update - Garden
  trigger:
  - entity_id: group.garden_motion
    platform: state
    to: 'on'
  - entity_id: group.garden_motion
    platform: state
    to: 'off'
    for: 05:00:00
  - minutes: /5
    platform: time_pattern
  action:
  - service: pyscript.room_occupancy_state_machine
    data:
      occupancy_entity_str: input_select.garden_occupancy
      motion_str: group.garden_motion
      motion_on_ratio_for_x_min_str: sensor.garden_motion_on_ratio_for_last_4_minutes
      motion_on_ratio_for_2x_min_str: sensor.garden_motion_on_ratio_for_last_8_minutes
      room_type: landing
  id: automation.zoc_gd_occupancy_update_garden
input_select:
  garden_scene:
    name: Garden Scene
    options:
    - Idle
    - All White
    - Ceiling Light White
    - All Off
  garden_occupancy:
    name: Garden Occupancy
    options:
    - Outside
    - Just Entered
    - Stayed Inside
    - In Sleep
sensor:
- platform: history_stats
  name: Garden Motion On Ratio For Last 4 Minutes
  entity_id: group.garden_motion
  state: 'on'
  type: ratio
  duration:
    minutes: '4'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
- platform: history_stats
  name: Garden Motion On Ratio For Last 8 Minutes
  entity_id: group.garden_motion
  state: 'on'
  type: ratio
  duration:
    minutes: '8'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
input_boolean:
  ceiling_light_control_in_hot_sunshine_garden:
    name: Ceiling Light Control In Hot Sunshine Garden
    initial: 'off'
  lamp_control_in_hot_sunshine_garden:
    name: Lamp Control In Hot Sunshine Garden
    initial: 'off'
  led_control_in_hot_sunshine_garden:
    name: Led Control In Hot Sunshine Garden
    initial: 'off'
  curtain_control_in_hot_sunshine_garden:
    name: Curtain Control In Hot Sunshine Garden
    initial: 'off'
  ceiling_light_control_when_bright_outdoor_garden:
    name: Ceiling Light Control When Bright Outdoor Garden
  lamp_control_when_bright_outdoor_garden:
    name: Lamp Control When Bright Outdoor Garden
    initial: 'off'
  led_control_when_bright_outdoor_garden:
    name: Led Control When Bright Outdoor Garden
    initial: 'off'
  curtain_control_when_bright_outdoor_garden:
    name: Curtain Control When Bright Outdoor Garden
    initial: 'off'
  ceiling_light_control_when_dark_outdoor_garden:
    name: Ceiling Light Control When Dark Outdoor Garden
  lamp_control_when_dark_outdoor_garden:
    name: Lamp Control When Dark Outdoor Garden
    initial: 'off'
  led_control_when_dark_outdoor_garden:
    name: Led Control When Dark Outdoor Garden
    initial: 'off'
  curtain_control_when_dark_outdoor_garden:
    name: Curtain Control When Dark Outdoor Garden
    initial: 'off'
switch: []
cover: []
template:
- sensor:
  - name: Garden Bike Shed Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["54ef44e34c16_illuminance"].state}}'
- sensor:
  - name: Garden Bike Shed Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["54ef44e34c16_battery"].state}}'
binary_sensor:
- platform: group
  name: Garden Bike Shed Motion Sensor Motion
  entities: binary_sensor.54ef44e34c16_motion
light: []
group:
  garden_occupancy_group:
    name: Garden Occuapancy Group
    entities:
    - input_select.garden_occupancy
    - group.garden_motion
    - binary_sensor.garden_sliding_door_motion_sensor_motion
    - binary_sensor.garden_bike_shed_motion_sensor_motion
  garden_motion:
    name: Garden Motion
    entities:
    - binary_sensor.garden_sliding_door_motion_sensor_motion
    - binary_sensor.garden_bike_shed_motion_sensor_motion
  garden_lights_and_tvs:
    name: Garden Lights And Tvs
    entities:
    - light.garden_ceiling_light
  garden_auto_gen_automations:
    name: Garden Auto-gen Automations
    entities:
    - input_boolean.ceiling_light_control_when_bright_outdoor_garden
    - input_boolean.ceiling_light_control_when_dark_outdoor_garden
    - automation.zl_gd_ceiling_lights_on_or_open_curtains_if_entering_to_room_garden
    - automation.zl_gd_lights_off_if_no_person_garden
    - automation.zl_gd_applies_different_scenes_based_on_scene_selections_state_execution_garden
    - automation.zoc_gd_occupancy_update_garden
