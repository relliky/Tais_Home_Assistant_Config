#############################################################################
# DO NOT MODIFY. This is an automatically generated file.                   # 
# Please modify the python source code under python_templates directory.    #
#############################################################################
automation:
- alias: ZLB-GR Flex Wall Switch On Postion 1- Automatically Turn on the Wall Switch Back When Turned Off -Guest Room
  trigger:
  - platform: state
    entity_id: switch.0x00158d00047b69d2_switch
    to: 'off'
  action:
  - alias: Turn switch.0x00158d00047b69d2_switch state=on
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_on
      entity_id: switch.0x00158d00047b69d2_switch
  id: automation.zlb_gr_flex_wall_switch_on_postion_1_automatically_turn_on_the_wall_switch_back_when_turned_off_guest_room
- alias: ZL-GR Ceiling Lights On Or Open Curtains If Entering to Room-Guest Room
  id: automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
  trigger:
    entity_id:
    - binary_sensor.guest_room_entrance_motion_sensor_motion
    platform: state
    to: 'on'
  action:
  - service: automation.turn_off
    entity_id: automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
    data:
      stop_actions: false
  - service: script.call_room_scene
    data:
      room_scene_select: input_select.guest_room_scene
      scene: Idle
  - if:
    - condition: numeric_state
      entity_id: sensor.met_office_cambridge_city_airport_temperature_3_hourly
      above: '18'
    - condition: time
      after: 06:00:00
      before: '16:00:00'
    - condition: template
      value_template: '{{ now().month > 4 and now().month < 9 }}'
    - condition: state
      entity_id: input_boolean.always_off_constant
      state: 'on'
    then:
      alias: Lights on in hot sunshine
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - parallel:
          - if:
              condition: state
              entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_guest_room
              state: 'on'
            then:
              alias: Turn light.guest_room_ceiling_light state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: any ceiling lights is unavailable, using wall switches to control instead
                  condition: state
                  entity_id:
                  - light.guest_room_ceiling_light
                  state: unavailable
                  match: any
                then:
                  alias: Turn switch.0x00158d00047b69d2_switch state=on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                    - service: homeassistant.turn_off
                      entity_id:
                      - switch.0x00158d00047b69d2_switch
                    - delay:
                        milliseconds: 200
                    - service: homeassistant.turn_on
                      entity_id:
                      - switch.0x00158d00047b69d2_switch
                else:
                  alias: Turn light.guest_room_ceiling_light state=on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    service: light.turn_on
                    entity_id:
                    - light.guest_room_ceiling_light
            else:
              alias: Turn light.guest_room_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                if:
                - alias: any ceiling lights is unavailable, using wall switches to control instead
                  condition: state
                  entity_id:
                  - light.guest_room_ceiling_light
                  state: unavailable
                  match: any
                then:
                  alias: Turn switch.0x00158d00047b69d2_switch state=off
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    service: homeassistant.turn_off
                    entity_id:
                    - switch.0x00158d00047b69d2_switch
                else:
                  alias: Turn light.guest_room_ceiling_light state=off
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                    service: light.turn_off
                    entity_id:
                    - light.guest_room_ceiling_light
          - if:
              condition: state
              entity_id: input_boolean.lamp_control_in_hot_sunshine_guest_room
              state: 'on'
            then:
              alias: Turn light.guest_room_lamp state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                - service: homeassistant.turn_on
                  entity_id:
                  - light.guest_room_lamp
                - delay: 00:00:02
                - if:
                    condition: state
                    entity_id:
                    - light.guest_room_lamp
                    state: color_temp
                    attribute: color_mode
                  then:
                    service: script.do_nothing
                  else:
                  - service: light.turn_on
                    entity_id:
                    - light.guest_room_lamp
                    data:
                      kelvin: '3000'
                  - delay: 00:00:02
                  - service: light.turn_off
                    entity_id:
                    - light.guest_room_lamp
                  - delay: 00:00:02
                  - service: light.turn_on
                    entity_id:
                    - light.guest_room_lamp
            else:
              alias: Turn light.guest_room_lamp state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_off
                entity_id:
                - light.guest_room_lamp
          - if:
              condition: state
              entity_id: input_boolean.led_control_in_hot_sunshine_guest_room
              state: 'on'
            then:
              service: script.do_nothing
            else:
              service: script.do_nothing
          - if:
              condition: state
              entity_id: input_boolean.curtain_control_in_hot_sunshine_guest_room
              state: 'on'
            then:
              service: script.do_nothing
            else:
              service: script.do_nothing
    else:
      if:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      then:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_on
                      entity_id:
                      - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_off
                      entity_id:
                      - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.guest_room_lamp
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.guest_room_lamp
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.guest_room_lamp
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
              else:
                alias: Turn light.guest_room_lamp state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
      else:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_on
                      entity_id:
                      - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_off
                      entity_id:
                      - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.guest_room_lamp
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.guest_room_lamp
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.guest_room_lamp
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
              else:
                alias: Turn light.guest_room_lamp state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
- alias: ZL-GR Lights Off If No Person-Guest Room
  id: automation.zl_gr_lights_off_if_no_person_guest_room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  condition:
  - condition: state
    entity_id: input_select.guest_room_occupancy
    state: Outside
  - condition: state
    entity_id: group.guest_room_motion_group
    state: 'off'
    for: 00:01:00
  action:
    parallel:
    - alias: Turn automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: homeassistant.turn_on
        entity_id: automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
    - if:
        condition: state
        entity_id: input_boolean.curtain_control_when_left_guest_room
        state: 'on'
      then:
        service: script.do_nothing
      else:
        service: script.do_nothing
    - service: script.do_nothing
    - alias: All Off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - alias: Turn light.guest_room_ceiling_light state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            if:
            - alias: any ceiling lights is unavailable, using wall switches to control instead
              condition: state
              entity_id:
              - light.guest_room_ceiling_light
              state: unavailable
              match: any
            then:
              alias: Turn switch.0x00158d00047b69d2_switch state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_off
                entity_id:
                - switch.0x00158d00047b69d2_switch
            else:
              alias: Turn light.guest_room_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_off
                entity_id:
                - light.guest_room_ceiling_light
        - alias: Turn light.guest_room_lamp state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: light.turn_off
            entity_id:
            - light.guest_room_lamp
        - service: script.do_nothing
- alias: ZL-GR Disable Entering Lights-on Automation If any People are in the Room-Guest Room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_occupancy
    to:
    - Just Entered
    - In Sleep
    - Stayed Inside
  action:
  - delay: 00:00:10
  - service: automation.turn_off
    entity_id: automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
    data:
      stop_actions: 'false'
  id: automation.zl_gr_disable_entering_lights_on_automation_if_any_people_are_in_the_room_guest_room
- alias: ZH-GR Heating Schedule On If Staying In the Room-Guest Room
  id: automation.zh_gr_heating_schedule_on_if_staying_in_the_room_guest_room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_occupancy
    from:
    - Just Entered
    - Outside
    to: Stayed Inside
  action:
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.guest_room
        state: heat
    then:
      alias: Turn heating state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        alias: ''
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - alias: Turn climate.guest_room state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: climate.set_hvac_mode
            data:
              hvac_mode: heat
            entity_id: climate.guest_room
        - alias: Turn switch.schedule_guest_room_temperature state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_on
            entity_id: switch.schedule_guest_room_temperature
- alias: ZH-GR Heating Schedule Off If People Left the Room-Guest Room
  id: automation.zh_gr_heating_schedule_off_if_people_left_the_room_guest_room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  action:
  - condition: state
    entity_id: input_select.guest_room_occupancy
    state: Outside
  - condition: state
    entity_id: input_boolean.guest_room_heating_override
    state: 'off'
  - alias: Turn heating state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      alias: ''
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - alias: Turn climate.guest_room state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_hvac_mode
          data:
            hvac_mode: 'off'
          entity_id: climate.guest_room
      - alias: Turn switch.schedule_guest_room_temperature state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: homeassistant.turn_off
          entity_id: switch.schedule_guest_room_temperature
- alias: ZH-GR Heating Manual Override-Guest Room
  mode: restart
  trigger:
  - platform: state
    entity_id: input_boolean.guest_room_heating_override
  action:
  - if:
    - condition: state
      entity_id: input_boolean.guest_room_heating_override
      state: 'on'
    then:
    - service: automation.trigger
      entity_id:
      - automation.zh_gr_heating_schedule_on_if_staying_in_the_room_guest_room
    else:
    - service: automation.trigger
      entity_id:
      - automation.zh_gr_heating_schedule_off_if_people_left_the_room_guest_room
  id: automation.zh_gr_heating_manual_override_guest_room
- alias: ZH-GR Heating Manual Override Timeout in Few Hours-Guest Room
  trigger:
  - platform: state
    entity_id: input_boolean.guest_room_heating_override
    from: 'off'
    to: 'on'
  action:
  - delay:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: homeassistant.turn_off
    entity_id: input_boolean.guest_room_heating_override
  id: automation.zh_gr_heating_manual_override_timeout_in_few_hours_guest_room
- alias: ZH-GR Valve Calibrate Temperature Using External Sensor-Guest Room
  use_blueprint:
    path: calibrate_valve_temperature.yaml
    input:
      tado_valve_entity: climate.guest_room
      external_temperature_sensor_entity: sensor.guest_room_temperature_sensor
  id: automation.zh_gr_valve_calibrate_temperature_using_external_sensor_guest_room
- alias: ZL-GR Applies Different Scenes Based on Scene Selections (State Execution)-Guest Room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_scene
  mode: restart
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: All White
      sequence:
        alias: All White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_lamp state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - service: homeassistant.turn_on
                entity_id:
                - light.guest_room_lamp
              - delay: 00:00:02
              - if:
                  condition: state
                  entity_id:
                  - light.guest_room_lamp
                  state: color_temp
                  attribute: color_mode
                then:
                  service: script.do_nothing
                else:
                - service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp
                  data:
                    kelvin: '3000'
                - delay: 00:00:02
                - service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp
                - delay: 00:00:02
                - service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp
          - alias: Turn light.guest_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.guest_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x00158d00047b69d2_switch state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_off
                    entity_id:
                    - switch.0x00158d00047b69d2_switch
                  - delay:
                      milliseconds: 200
                  - service: homeassistant.turn_on
                    entity_id:
                    - switch.0x00158d00047b69d2_switch
              else:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_ceiling_light
          - service: script.do_nothing
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Ceiling Light White
      sequence:
        alias: Ceiling Light White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_lamp state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_lamp
          - service: script.do_nothing
          - alias: Turn light.guest_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.guest_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x00158d00047b69d2_switch state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_off
                    entity_id:
                    - switch.0x00158d00047b69d2_switch
                  - delay:
                      milliseconds: 200
                  - service: homeassistant.turn_on
                    entity_id:
                    - switch.0x00158d00047b69d2_switch
              else:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_ceiling_light
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Lamp LED White
      sequence:
        alias: Lamp LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.guest_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x00158d00047b69d2_switch state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.0x00158d00047b69d2_switch
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_ceiling_light
          - alias: Turn light.guest_room_lamp state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - service: homeassistant.turn_on
                entity_id:
                - light.guest_room_lamp
              - delay: 00:00:02
              - if:
                  condition: state
                  entity_id:
                  - light.guest_room_lamp
                  state: color_temp
                  attribute: color_mode
                then:
                  service: script.do_nothing
                else:
                - service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp
                  data:
                    kelvin: '3000'
                - delay: 00:00:02
                - service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp
                - delay: 00:00:02
                - service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp
          - service: script.do_nothing
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: LED White
      sequence:
        alias: LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.guest_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x00158d00047b69d2_switch state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.0x00158d00047b69d2_switch
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_ceiling_light
          - alias: Turn light.guest_room_lamp state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_lamp
          - service: script.do_nothing
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Hue
      sequence:
        alias: Hue
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.guest_room_lamp
            - light.guest_room_ceiling_light
            state: 'off'
            rgb: non_rgb_only
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.guest_room_lamp
            - light.guest_room_ceiling_light
        - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Night Mode
      sequence:
        alias: Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_room_night_mode
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Dark Night Mode
      sequence:
        alias: Dark Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_room_dark_night_mode
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Sleep Mode
      sequence:
        alias: Sleep Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_room_sleep_mode
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: All Off
      sequence:
        alias: All Off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              if:
              - alias: any ceiling lights is unavailable, using wall switches to control instead
                condition: state
                entity_id:
                - light.guest_room_ceiling_light
                state: unavailable
                match: any
              then:
                alias: Turn switch.0x00158d00047b69d2_switch state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.0x00158d00047b69d2_switch
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_ceiling_light
          - alias: Turn light.guest_room_lamp state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_lamp
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Lights on in hot sunshine
      sequence:
        alias: Lights on in hot sunshine
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_on
                      entity_id:
                      - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_off
                      entity_id:
                      - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_in_hot_sunshine_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.guest_room_lamp
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.guest_room_lamp
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.guest_room_lamp
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
              else:
                alias: Turn light.guest_room_lamp state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp
            - if:
                condition: state
                entity_id: input_boolean.led_control_in_hot_sunshine_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_in_hot_sunshine_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Lights on when bright outdoor
      sequence:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_on
                      entity_id:
                      - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_off
                      entity_id:
                      - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.guest_room_lamp
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.guest_room_lamp
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.guest_room_lamp
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
              else:
                alias: Turn light.guest_room_lamp state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Lights on when dark outdoor
      sequence:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      alias: Everytime to turn on a wall switch, make sure to turn off it first to make sure the smart lights will be back on
                      if:
                        condition: state
                        entity_id: input_boolean.always_on_constant
                        state: 'on'
                      then:
                      - service: homeassistant.turn_off
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                      - delay:
                          milliseconds: 200
                      - service: homeassistant.turn_on
                        entity_id:
                        - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=on
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_on
                      entity_id:
                      - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  if:
                  - alias: any ceiling lights is unavailable, using wall switches to control instead
                    condition: state
                    entity_id:
                    - light.guest_room_ceiling_light
                    state: unavailable
                    match: any
                  then:
                    alias: Turn switch.0x00158d00047b69d2_switch state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: homeassistant.turn_off
                      entity_id:
                      - switch.0x00158d00047b69d2_switch
                  else:
                    alias: Turn light.guest_room_ceiling_light state=off
                    if:
                      condition: state
                      entity_id: input_boolean.always_on_constant
                      state: 'on'
                    then:
                      service: light.turn_off
                      entity_id:
                      - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: Turn on lamps first and check if light color is white. Reset color lamps to white and apply adaptive lighting.
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: homeassistant.turn_on
                    entity_id:
                    - light.guest_room_lamp
                  - delay: 00:00:02
                  - if:
                      condition: state
                      entity_id:
                      - light.guest_room_lamp
                      state: color_temp
                      attribute: color_mode
                    then:
                      service: script.do_nothing
                    else:
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
                      data:
                        kelvin: '3000'
                    - delay: 00:00:02
                    - service: light.turn_off
                      entity_id:
                      - light.guest_room_lamp
                    - delay: 00:00:02
                    - service: light.turn_on
                      entity_id:
                      - light.guest_room_lamp
              else:
                alias: Turn light.guest_room_lamp state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
  id: automation.zl_gr_applies_different_scenes_based_on_scene_selections_state_execution_guest_room
- alias: ZLB-GR Wall Switch - Double Press - Leave Room and Turn Off Everything-Guest Room
  trigger:
  - platform: state
    entity_id:
    - sensor.guest_room_wall_button
    to:
    - '2'
    - double
    - double_left
    - double_right
    - double_center
    - button_1_double
    - button_2_double
    - button_3_double
  action:
  - service: automation.trigger
    entity_id:
    - automation.zl_gr_lights_off_if_no_person_guest_room
    - automation.zh_gr_heating_schedule_off_if_people_left_the_room_guest_room
  - service: input_select.select_option
    target:
      entity_id: input_select.guest_room_occupancy
    data:
      option: Outside
  id: automation.zlb_gr_wall_switch_double_press_leave_room_and_turn_off_everything_guest_room
- alias: ZOc-GR Occupancy Update-Guest Room
  trigger:
  - entity_id: group.guest_room_motion_group
    platform: state
    to: 'on'
  - entity_id: group.guest_room_motion_group
    platform: state
    to: 'off'
    for: 05:00:00
  - minutes: /5
    platform: time_pattern
  action:
  - service: pyscript.room_occupancy_state_machine
    data:
      occupancy_entity_str: input_select.guest_room_occupancy
      motion_str: group.guest_room_motion_group
      motion_on_ratio_for_x_min_str: sensor.guest_room_motion_on_ratio_for_last_4_minutes
      motion_on_ratio_for_2x_min_str: sensor.guest_room_motion_on_ratio_for_last_8_minutes
      room_type: bedroom
  id: automation.zoc_gr_occupancy_update_guest_room
input_select:
  guest_room_scene:
    name: Guest Room Scene
    options:
    - Idle
    - Lamp LED White
    - All White
    - Ceiling Light White
    - All Off
  guest_room_occupancy:
    name: Guest Room Occupancy
    options:
    - Outside
    - Just Entered
    - Stayed Inside
    - In Sleep
sensor:
- platform: history_stats
  name: Guest Room Motion On Ratio For Last 4 Minutes
  entity_id: group.guest_room_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '4'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
- platform: history_stats
  name: Guest Room Motion On Ratio For Last 8 Minutes
  entity_id: group.guest_room_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '8'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
input_boolean:
  guest_room_heating_override:
    name: Guest Room Heating Override
    initial: 'off'
  curtain_control_when_left_guest_room:
    name: Curtain Control When Left Guest Room
    initial: 'off'
  ceiling_light_control_in_hot_sunshine_guest_room:
    name: Ceiling Light Control In Hot Sunshine Guest Room
    initial: 'off'
  lamp_control_in_hot_sunshine_guest_room:
    name: Lamp Control In Hot Sunshine Guest Room
    initial: 'off'
  led_control_in_hot_sunshine_guest_room:
    name: Led Control In Hot Sunshine Guest Room
    initial: 'off'
  curtain_control_in_hot_sunshine_guest_room:
    name: Curtain Control In Hot Sunshine Guest Room
    initial: 'off'
  ceiling_light_control_when_bright_outdoor_guest_room:
    name: Ceiling Light Control When Bright Outdoor Guest Room
  lamp_control_when_bright_outdoor_guest_room:
    name: Lamp Control When Bright Outdoor Guest Room
  led_control_when_bright_outdoor_guest_room:
    name: Led Control When Bright Outdoor Guest Room
    initial: 'off'
  curtain_control_when_bright_outdoor_guest_room:
    name: Curtain Control When Bright Outdoor Guest Room
    initial: 'off'
  ceiling_light_control_when_dark_outdoor_guest_room:
    name: Ceiling Light Control When Dark Outdoor Guest Room
  lamp_control_when_dark_outdoor_guest_room:
    name: Lamp Control When Dark Outdoor Guest Room
  led_control_when_dark_outdoor_guest_room:
    name: Led Control When Dark Outdoor Guest Room
    initial: 'off'
  curtain_control_when_dark_outdoor_guest_room:
    name: Curtain Control When Dark Outdoor Guest Room
    initial: 'off'
switch:
- platform: group
  name: 'Guest Room Wall Switch '
  entities: switch.0x00158d00047b69d2_switch
cover:
- platform: group
  name: Guest Room Curtain
  entities: cover.curtain_1050
template:
- binary_sensor:
  - name: Guest Room Heating Required
    state: '{% set climate = "climate.guest_room" %}{% if states(climate) == "unavailable" %}off{% else %} {{ ((state_attr(climate, "temperature")  > state_attr(climate, "current_temperature"))  and  (states(climate) != "off"))  }}{% endif %}'
- sensor:
  - name: Guest Room Temperature Sensor
    unit_of_measurement: "\xB0C"
    state: '{{states.sensor["582d343483e9_temperature"].state | float | round(1)}}'
- sensor:
  - name: Guest Room Wall Button
    state: '{{states.sensor["0x00158d00047b69d2_action"].state}}'
binary_sensor: []
light:
- platform: group
  name: Guest Room Lamp
  entities: light.50ec50dd67be
- platform: group
  name: Guest Room Ceiling Light
  entities: light.28d12735ea1e
group:
  guest_room_occupancy_group:
    name: Guest Room Occupancy Group
    entities:
    - input_select.guest_room_occupancy
    - group.guest_room_motion_group
    - binary_sensor.guest_room_door_motion_sensor_motion
    - binary_sensor.guest_room_bed_motion_sensor_motion
  guest_room_motion_group:
    name: Guest Room Motion Group
    entities:
    - binary_sensor.guest_room_door_motion_sensor_motion
    - binary_sensor.guest_room_bed_motion_sensor_motion
  guest_room_light_group:
    name: Guest Room Light Group
    entities:
    - light.guest_room_lamp
    - light.guest_room_ceiling_light
  guest_room_window_group:
    name: Guest Room Window Group
    entities: []
  guest_room_curtain_group:
    name: Guest Room Curtain Group
    entities: []
  guest_room_auto_gen_automations:
    name: Guest Room Auto Gen Automations
    entities:
    - input_boolean.ceiling_light_control_when_bright_outdoor_guest_room
    - input_boolean.lamp_control_when_bright_outdoor_guest_room
    - input_boolean.ceiling_light_control_when_dark_outdoor_guest_room
    - input_boolean.lamp_control_when_dark_outdoor_guest_room
    - automation.zlb_gr_flex_wall_switch_on_postion_1_automatically_turn_on_the_wall_switch_back_when_turned_off_guest_room
    - automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
    - automation.zl_gr_lights_off_if_no_person_guest_room
    - automation.zl_gr_disable_entering_lights_on_automation_if_any_people_are_in_the_room_guest_room
    - automation.zh_gr_heating_schedule_on_if_staying_in_the_room_guest_room
    - automation.zh_gr_heating_schedule_off_if_people_left_the_room_guest_room
    - automation.zh_gr_heating_manual_override_guest_room
    - automation.zh_gr_heating_manual_override_timeout_in_few_hours_guest_room
    - automation.zh_gr_valve_calibrate_temperature_using_external_sensor_guest_room
    - automation.zl_gr_applies_different_scenes_based_on_scene_selections_state_execution_guest_room
    - automation.zlb_gr_wall_switch_double_press_leave_room_and_turn_off_everything_guest_room
    - automation.zoc_gr_occupancy_update_guest_room
    - switch.0x00158d00047b69d2_switch
