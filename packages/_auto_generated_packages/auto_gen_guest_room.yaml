#############################################################################
# DO NOT MODIFY. This is an automatically generated file.                   # 
# Please modify the python source code under python_templates directory.    #
#############################################################################
automation:
- alias: ZLB-GR Flex Wall Switch On Postion 1- Automatically Turn on the Wall Switch Back When Turned Off -Guest Room
  trigger:
  - platform: state
    entity_id: switch.0x00158d00047b69d2_switch
    to: 'off'
  action:
  - alias: Turn switch.0x00158d00047b69d2_switch state=on
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_on
      entity_id: switch.0x00158d00047b69d2_switch
  id: automation.zlb_gr_flex_wall_switch_on_postion_1_automatically_turn_on_the_wall_switch_back_when_turned_off_guest_room
- alias: ZL-GR Ceiling Lights On Or Open Curtains If Entering to Room-Guest Room
  id: automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
  trigger:
    entity_id:
    - binary_sensor.guest_room_entrance_motion_sensor_motion
    platform: state
    to: 'on'
  action:
  - service: automation.turn_off
    entity_id: automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
    data:
      stop_actions: false
  - service: script.call_room_scene
    data:
      room_scene_select: input_select.guest_room_scene
      scene: Idle
  - if:
    - condition: numeric_state
      entity_id: sensor.met_office_cambridge_city_airport_temperature_3_hourly
      above: '18'
    - condition: time
      after: 06:00:00
      before: '16:00:00'
    - condition: template
      value_template: '{{ now().month > 4 and now().month < 9 }}'
    - condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      alias: Lights on in hot sunshine
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - parallel:
          - if:
              condition: state
              entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_guest_room
              state: 'on'
            then:
              alias: Turn light.guest_room_ceiling_light state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_on
                entity_id:
                - light.guest_room_ceiling_light
            else:
              alias: Turn light.guest_room_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_off
                entity_id:
                - light.guest_room_ceiling_light
          - if:
              condition: state
              entity_id: input_boolean.lamp_control_in_hot_sunshine_guest_room
              state: 'on'
            then:
              alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_on
                entity_id:
                - light.guest_room_lamp_1
                - light.guest_room_lamp_2
            else:
              alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_off
                entity_id:
                - light.guest_room_lamp_1
                - light.guest_room_lamp_2
          - if:
              condition: state
              entity_id: input_boolean.led_control_in_hot_sunshine_guest_room
              state: 'on'
            then:
              service: script.do_nothing
            else:
              service: script.do_nothing
          - if:
              condition: state
              entity_id: input_boolean.curtain_control_in_hot_sunshine_guest_room
              state: 'on'
            then:
              alias: Turn cover.guest_room_curtain state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                alias: ''
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                - service: cover.stop_cover
                  entity_id:
                  - cover.guest_room_curtain
                - service: cover.open_cover
                  entity_id:
                  - cover.guest_room_curtain
            else:
              alias: Turn cover.guest_room_curtain state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                alias: ''
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                - service: cover.stop_cover
                  entity_id:
                  - cover.guest_room_curtain
                - service: cover.close_cover
                  entity_id:
                  - cover.guest_room_curtain
    else:
      if:
      - condition: and
        conditions:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.living_room_light_sensor
            above: 100
          - condition: state
            entity_id: sensor.living_room_light_sensor
            state:
            - unavailable
            - unknown
        - condition: or
          conditions:
          - condition: state
            entity_id: sun.sun
            state: above_horizon
          - condition: state
            entity_id: sun.sun
            state:
            - unavailable
            - unknown
      then:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
              else:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn cover.guest_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.guest_room_curtain
              else:
                alias: Turn cover.guest_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.guest_room_curtain
      else:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
              else:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn cover.guest_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.guest_room_curtain
              else:
                alias: Turn cover.guest_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.guest_room_curtain
- alias: ZL-GR Lights Off If No Person-Guest Room
  id: automation.zl_gr_lights_off_if_no_person_guest_room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  condition:
  - condition: state
    entity_id: input_select.guest_room_occupancy
    state: Outside
  - condition: state
    entity_id: group.guest_room_motion_group
    state: 'off'
    for: 00:01:00
  action:
    parallel:
    - alias: Turn automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: homeassistant.turn_on
        entity_id: automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
    - if:
        condition: state
        entity_id: input_boolean.curtain_control_when_left_guest_room
        state: 'on'
      then:
        alias: Turn cover.guest_room_curtain state=on
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.guest_room_curtain
          - service: cover.open_cover
            entity_id:
            - cover.guest_room_curtain
      else:
        alias: Turn cover.guest_room_curtain state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.guest_room_curtain
          - service: cover.close_cover
            entity_id:
            - cover.guest_room_curtain
    - service: script.do_nothing
    - alias: All Off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - alias: Turn light.guest_room_ceiling_light state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: light.turn_off
            entity_id:
            - light.guest_room_ceiling_light
        - alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: light.turn_off
            entity_id:
            - light.guest_room_lamp_1
            - light.guest_room_lamp_2
        - service: script.do_nothing
        - service: script.do_nothing
    - service: script.do_nothing
- alias: ZL-GR Disable Entering Lights-on Automation If any People are in the Room-Guest Room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_occupancy
    to:
    - Just Entered
    - In Sleep
    - Stayed Inside
  action:
  - delay: 00:00:10
  - service: automation.turn_off
    entity_id: automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
    data:
      stop_actions: 'false'
  id: automation.zl_gr_disable_entering_lights_on_automation_if_any_people_are_in_the_room_guest_room
- alias: ZH-GR Heating Schedule On If Staying In the Room-Guest Room
  id: automation.zh_gr_heating_schedule_on_if_staying_in_the_room_guest_room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_occupancy
    from:
    - Just Entered
    - Outside
    to:
    - Stayed Inside
    - In Sleep
  action:
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.guest_room
        state: heat
    then:
      alias: Turn heating state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        alias: ''
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - alias: Turn climate.guest_room state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: climate.set_hvac_mode
            data:
              hvac_mode: heat
            entity_id: climate.guest_room
        - alias: Turn switch.schedule_guest_room_temperature state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_on
            entity_id: switch.schedule_guest_room_temperature
- alias: ZH-GR Heating Schedule Off If People Left the Room-Guest Room
  id: automation.zh_gr_heating_schedule_off_if_people_left_the_room_guest_room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  action:
  - condition: state
    entity_id: input_select.guest_room_occupancy
    state: Outside
  - condition: state
    entity_id: input_boolean.guest_room_heating_override
    state: 'off'
  - alias: Turn heating state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      alias: ''
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - alias: Turn climate.guest_room state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_hvac_mode
          data:
            hvac_mode: 'off'
          entity_id: climate.guest_room
      - alias: Turn switch.schedule_guest_room_temperature state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: homeassistant.turn_off
          entity_id: switch.schedule_guest_room_temperature
- alias: ZH-GR Heating Manual Override-Guest Room
  mode: restart
  trigger:
  - platform: state
    entity_id: input_boolean.guest_room_heating_override
  action:
  - if:
    - condition: state
      entity_id: input_boolean.guest_room_heating_override
      state: 'off'
    then:
    - service: automation.trigger
      entity_id:
      - automation.zh_gr_heating_schedule_off_if_people_left_the_room_guest_room
    else:
    - service: automation.trigger
      entity_id:
      - automation.zh_gr_heating_schedule_on_if_staying_in_the_room_guest_room
    - delay:
        hours: 2
    - service: homeassistant.turn_off
      entity_id: input_boolean.guest_room_heating_override
    - service: automation.trigger
      entity_id:
      - automation.zh_gr_heating_schedule_on_if_staying_in_the_room_guest_room
  id: automation.zh_gr_heating_manual_override_guest_room
- alias: ZH-GR Valve Calibrate Temperature Using External Sensor-Guest Room
  use_blueprint:
    path: calibrate_valve_temperature.yaml
    input:
      tado_valve_entity: climate.guest_room
      external_temperature_sensor_entity: sensor.guest_room_temperature_sensor
  id: automation.zh_gr_valve_calibrate_temperature_using_external_sensor_guest_room
- alias: ZLB-GR Single Button Button Control-Guest Room
  trigger:
  - platform: state
    entity_id:
    - sensor.guest_room_button_1
    - sensor.guest_room_button_2
    to:
    - single
    - '1'
    id: CYCLE_SCENES
  - platform: state
    entity_id:
    - sensor.guest_room_button_1
    - sensor.guest_room_button_2
    to:
    - double
    - '2'
    id: TOGGLE_CURTAINS
  - platform: state
    entity_id: sensor.guest_room_button_1
    to:
    - hold
    id: TOGGLE_LAMP_0
  - platform: state
    entity_id: sensor.guest_room_button_2
    to:
    - hold
    id: TOGGLE_LAMP_1
  - platform: state
    entity_id:
    - sensor.guest_room_button_1
    - sensor.guest_room_button_2
    to:
    - triple
    - '3'
    id: DO_NOTHING
  - platform: state
    entity_id:
    - sensor.guest_room_button_1
    - sensor.guest_room_button_2
    to:
    - quadruple
    id: DO_NOTHING
  - platform: state
    entity_id:
    - sensor.guest_room_button_1
    - sensor.guest_room_button_2
    to:
    - many
    id: DO_NOTHING
  - platform: state
    entity_id:
    - sensor.guest_room_button_1
    - sensor.guest_room_button_2
    to:
    - release
    id: DO_NOTHING
  mode: queued
  action:
    choose:
    - conditions:
      - condition: trigger
        id: CYCLE_SCENES
      sequence:
        choose:
        - conditions:
            condition: state
            entity_id: input_select.guest_room_scene
            state: All Off
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.guest_room_scene
              scene: All White
        - conditions:
            condition: state
            entity_id: input_select.guest_room_scene
            state: All White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.guest_room_scene
              scene: Lamp LED White
        - conditions:
            condition: state
            entity_id: input_select.guest_room_scene
            state: Lamp LED White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.guest_room_scene
              scene: All Off
        default:
          service: script.call_room_scene
          data:
            room_scene_select: input_select.guest_room_scene
            scene: All White
    - conditions:
      - condition: trigger
        id: DO_NOTHING
      sequence:
      - service: script.do_nothing
    - conditions:
      - condition: trigger
        id: TOGGLE_AL_SLEEP_MODE
      sequence:
      - alias: Turn switch.adaptive_lighting_sleep_mode_guest_room state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: switch.adaptive_lighting_sleep_mode_guest_room
            state: 'on'
            match: any
          then:
            alias: Turn switch.adaptive_lighting_sleep_mode_guest_room state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id: switch.adaptive_lighting_sleep_mode_guest_room
          else:
            alias: Turn switch.adaptive_lighting_sleep_mode_guest_room state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id: switch.adaptive_lighting_sleep_mode_guest_room
    - conditions:
      - condition: trigger
        id: TOGGLE_CURTAINS
      sequence:
      - alias: Turn cover.guest_room_curtain state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.guest_room_curtain
          - service: cover.toggle
            entity_id:
            - cover.guest_room_curtain
    - conditions:
      - condition: trigger
        id: TOGGLE_CURTAIN_0
      sequence:
      - alias: Turn cover.guest_room_curtain state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: cover.guest_room_curtain
            state: 'on'
            match: any
          then:
            alias: Turn cover.guest_room_curtain state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id: cover.guest_room_curtain
          else:
            alias: Turn cover.guest_room_curtain state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id: cover.guest_room_curtain
    - conditions:
      - condition: trigger
        id: INCREMENT_CURTAINS
      sequence:
      - alias: Turn cover.guest_room_curtain state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.guest_room_curtain
          - service: cover.set_cover_position
            target:
              entity_id:
              - cover.guest_room_curtain
            data:
              position: '{{ [[ (state_attr(''cover.guest_room_curtain'', ''current_position'')) + 34 ,0]|max,100]|min}}'
    - conditions:
      - condition: trigger
        id: DECREMENT_CURTAINS
      sequence:
      - alias: Turn cover.guest_room_curtain state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.guest_room_curtain
          - service: cover.set_cover_position
            target:
              entity_id:
              - cover.guest_room_curtain
            data:
              position: '{{ [[ (state_attr(''cover.guest_room_curtain'', ''current_position'')) + -34 ,0]|max,100]|min}}'
    - conditions:
      - condition: trigger
        id: INCREMENT_CURTAIN_0
      sequence:
      - alias: Turn cover.guest_room_curtain state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: script.do_nothing
    - conditions:
      - condition: trigger
        id: DECREMENT_CURTAIN_0
      sequence:
      - alias: Turn cover.guest_room_curtain state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: script.do_nothing
    - conditions:
      - condition: trigger
        id: TOGGLE_LAMP_0
      sequence:
      - alias: Turn light.guest_room_lamp_1 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: light.guest_room_lamp_1
            state: 'on'
            match: any
          then:
            alias: Turn light.guest_room_lamp_1 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id: light.guest_room_lamp_1
          else:
            alias: Turn light.guest_room_lamp_1 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id: light.guest_room_lamp_1
    - conditions:
      - condition: trigger
        id: INCREMENT_LAMP_0
      sequence:
      - alias: Turn light.guest_room_lamp_1 state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.guest_room_lamp_1
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LAMP_0
      sequence:
      - alias: Turn light.guest_room_lamp_1 state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.guest_room_lamp_1
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_LAMP_1
      sequence:
      - alias: Turn light.guest_room_lamp_2 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: light.guest_room_lamp_2
            state: 'on'
            match: any
          then:
            alias: Turn light.guest_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id: light.guest_room_lamp_2
          else:
            alias: Turn light.guest_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id: light.guest_room_lamp_2
    - conditions:
      - condition: trigger
        id: INCREMENT_LAMP_1
      sequence:
      - alias: Turn light.guest_room_lamp_2 state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.guest_room_lamp_2
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LAMP_1
      sequence:
      - alias: Turn light.guest_room_lamp_2 state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.guest_room_lamp_2
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_CEILING_LIGHTS
      sequence:
      - alias: Turn light.guest_room_ceiling_light state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id:
            - light.guest_room_ceiling_light
            state: 'on'
            match: any
          then:
            alias: Turn light.guest_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_ceiling_light
          else:
            alias: Turn light.guest_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.guest_room_ceiling_light
    - conditions:
      - condition: trigger
        id: INCREMENT_CEILING_LIGHTS
      sequence:
      - alias: Turn light.guest_room_ceiling_light state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.guest_room_ceiling_light
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_CEILING_LIGHTS
      sequence:
      - alias: Turn light.guest_room_ceiling_light state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.guest_room_ceiling_light
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_HEATING
      sequence:
      - alias: Turn heating state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
            condition: state
            entity_id: climate.guest_room
            state: 'off'
          then:
            alias: Turn heating state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: ''
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - alias: Turn climate.guest_room state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: climate.set_hvac_mode
                  data:
                    hvac_mode: heat
                  entity_id: climate.guest_room
              - alias: Turn switch.schedule_guest_room_temperature state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id: switch.schedule_guest_room_temperature
          else:
            alias: Turn heating state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: ''
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - alias: Turn climate.guest_room state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: climate.set_hvac_mode
                  data:
                    hvac_mode: 'off'
                  entity_id: climate.guest_room
              - alias: Turn switch.schedule_guest_room_temperature state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id: switch.schedule_guest_room_temperature
    - conditions:
      - condition: trigger
        id: INCREMENT_HEATING
      sequence:
      - alias: Turn heating state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_temperature
          target:
            entity_id: climate.guest_room
          data:
            temperature: '{{ (state_attr(''climate.guest_room'', ''temperature'')) + 1}}'
    - conditions:
      - condition: trigger
        id: DECREMENT_HEATING
      sequence:
      - alias: Turn heating state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_temperature
          target:
            entity_id: climate.guest_room
          data:
            temperature: '{{ (state_attr(''climate.guest_room'', ''temperature'')) + -1}}'
  id: automation.zlb_gr_single_button_button_control_guest_room
- alias: ZLB-GR Eight Key Knob Control-Guest Room
  trigger:
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_1_single
    id: TOGGLE_AL_SLEEP_MODE
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - button_1_double
    - button_1_hold
    - knob_clockwise_after_toggling_button_1
    - knob_clockwise_after_toggling_button_1_and_knob
    - knob_anticlockwise_after_toggling_button_1
    - knob_anticlockwise_after_toggling_button_1_and_knob
    id: CYCLE_SCENES
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_2_single
    id: TOGGLE_CEILING_LIGHTS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_clockwise_after_toggling_button_2
    - knob_clockwise_after_toggling_button_2_and_knob
    id: INCREMENT_CEILING_LIGHTS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_anticlockwise_after_toggling_button_2
    - knob_anticlockwise_after_toggling_button_2_and_knob
    id: DECREMENT_CEILING_LIGHTS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_3_single
    id: TOGGLE_HEATING
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_clockwise_after_toggling_button_3
    - knob_clockwise_after_toggling_button_3_and_knob
    id: INCREMENT_HEATING
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_anticlockwise_after_toggling_button_3
    - knob_anticlockwise_after_toggling_button_3_and_knob
    id: DECREMENT_HEATING
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_4_single
    id: CYCLE_TV_BRIGHTNESS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_4_hold
    id: TOGGLE_TV_POWER
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_clockwise_after_toggling_button_4
    - knob_clockwise_after_toggling_button_4_and_knob
    id: INCREMENT_TV_VOLUME
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_anticlockwise_after_toggling_button_4
    - knob_anticlockwise_after_toggling_button_4_and_knob
    id: DECREMENT_TV_VOLUME
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_5_single
    id: TOGGLE_LEDS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_5_double
    id: TOGGLE_SCREEN_LED
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_clockwise_after_toggling_button_5
    - knob_clockwise_after_toggling_button_5_and_knob
    id: INCREMENT_LEDS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_anticlockwise_after_toggling_button_5
    - knob_anticlockwise_after_toggling_button_5_and_knob
    id: DECREMENT_LEDS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_6_single
    id: TOGGLE_CURTAINS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_clockwise_after_toggling_button_6
    - knob_clockwise_after_toggling_button_6_and_knob
    id: INCREMENT_CURTAINS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_anticlockwise_after_toggling_button_6
    - knob_anticlockwise_after_toggling_button_6_and_knob
    id: DECREMENT_CURTAINS
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_7_single
    id: TOGGLE_LAMP_0
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_clockwise_after_toggling_button_7
    - knob_clockwise_after_toggling_button_7_and_knob
    id: INCREMENT_LAMP_0
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_anticlockwise_after_toggling_button_7
    - knob_anticlockwise_after_toggling_button_7_and_knob
    id: DECREMENT_LAMP_0
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to: button_8_single
    id: TOGGLE_LAMP_1
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_clockwise_after_toggling_button_8
    - knob_clockwise_after_toggling_button_8_and_knob
    id: INCREMENT_LAMP_1
  - platform: state
    entity_id:
    - sensor.ca6e1b6a8f89_action
    to:
    - knob_anticlockwise_after_toggling_button_8
    - knob_anticlockwise_after_toggling_button_8_and_knob
    id: DECREMENT_LAMP_1
  mode: parallel
  action:
    choose:
    - conditions:
      - condition: trigger
        id: CYCLE_SCENES
      sequence:
        choose:
        - conditions:
            condition: state
            entity_id: input_select.guest_room_scene
            state: All Off
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.guest_room_scene
              scene: All White
        - conditions:
            condition: state
            entity_id: input_select.guest_room_scene
            state: All White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.guest_room_scene
              scene: Lamp LED White
        - conditions:
            condition: state
            entity_id: input_select.guest_room_scene
            state: Lamp LED White
          sequence:
            service: script.call_room_scene
            data:
              room_scene_select: input_select.guest_room_scene
              scene: All Off
        default:
          service: script.call_room_scene
          data:
            room_scene_select: input_select.guest_room_scene
            scene: All White
    - conditions:
      - condition: trigger
        id: DO_NOTHING
      sequence:
      - service: script.do_nothing
    - conditions:
      - condition: trigger
        id: TOGGLE_AL_SLEEP_MODE
      sequence:
      - alias: Turn switch.adaptive_lighting_sleep_mode_guest_room state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: switch.adaptive_lighting_sleep_mode_guest_room
            state: 'on'
            match: any
          then:
            alias: Turn switch.adaptive_lighting_sleep_mode_guest_room state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id: switch.adaptive_lighting_sleep_mode_guest_room
          else:
            alias: Turn switch.adaptive_lighting_sleep_mode_guest_room state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id: switch.adaptive_lighting_sleep_mode_guest_room
    - conditions:
      - condition: trigger
        id: TOGGLE_CURTAINS
      sequence:
      - alias: Turn cover.guest_room_curtain state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.guest_room_curtain
          - service: cover.toggle
            entity_id:
            - cover.guest_room_curtain
    - conditions:
      - condition: trigger
        id: TOGGLE_CURTAIN_0
      sequence:
      - alias: Turn cover.guest_room_curtain state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: cover.guest_room_curtain
            state: 'on'
            match: any
          then:
            alias: Turn cover.guest_room_curtain state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id: cover.guest_room_curtain
          else:
            alias: Turn cover.guest_room_curtain state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id: cover.guest_room_curtain
    - conditions:
      - condition: trigger
        id: INCREMENT_CURTAINS
      sequence:
      - alias: Turn cover.guest_room_curtain state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.guest_room_curtain
          - service: cover.set_cover_position
            target:
              entity_id:
              - cover.guest_room_curtain
            data:
              position: '{{ [[ (state_attr(''cover.guest_room_curtain'', ''current_position'')) + 34 ,0]|max,100]|min}}'
    - conditions:
      - condition: trigger
        id: DECREMENT_CURTAINS
      sequence:
      - alias: Turn cover.guest_room_curtain state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          alias: ''
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
          - service: cover.stop_cover
            entity_id:
            - cover.guest_room_curtain
          - service: cover.set_cover_position
            target:
              entity_id:
              - cover.guest_room_curtain
            data:
              position: '{{ [[ (state_attr(''cover.guest_room_curtain'', ''current_position'')) + -34 ,0]|max,100]|min}}'
    - conditions:
      - condition: trigger
        id: INCREMENT_CURTAIN_0
      sequence:
      - alias: Turn cover.guest_room_curtain state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: script.do_nothing
    - conditions:
      - condition: trigger
        id: DECREMENT_CURTAIN_0
      sequence:
      - alias: Turn cover.guest_room_curtain state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: script.do_nothing
    - conditions:
      - condition: trigger
        id: TOGGLE_LAMP_0
      sequence:
      - alias: Turn light.guest_room_lamp_1 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: light.guest_room_lamp_1
            state: 'on'
            match: any
          then:
            alias: Turn light.guest_room_lamp_1 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id: light.guest_room_lamp_1
          else:
            alias: Turn light.guest_room_lamp_1 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id: light.guest_room_lamp_1
    - conditions:
      - condition: trigger
        id: INCREMENT_LAMP_0
      sequence:
      - alias: Turn light.guest_room_lamp_1 state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.guest_room_lamp_1
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LAMP_0
      sequence:
      - alias: Turn light.guest_room_lamp_1 state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.guest_room_lamp_1
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_LAMP_1
      sequence:
      - alias: Turn light.guest_room_lamp_2 state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id: light.guest_room_lamp_2
            state: 'on'
            match: any
          then:
            alias: Turn light.guest_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id: light.guest_room_lamp_2
          else:
            alias: Turn light.guest_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id: light.guest_room_lamp_2
    - conditions:
      - condition: trigger
        id: INCREMENT_LAMP_1
      sequence:
      - alias: Turn light.guest_room_lamp_2 state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.guest_room_lamp_2
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_LAMP_1
      sequence:
      - alias: Turn light.guest_room_lamp_2 state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id: light.guest_room_lamp_2
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_CEILING_LIGHTS
      sequence:
      - alias: Turn light.guest_room_ceiling_light state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
          - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
            condition: state
            entity_id:
            - light.guest_room_ceiling_light
            state: 'on'
            match: any
          then:
            alias: Turn light.guest_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_ceiling_light
          else:
            alias: Turn light.guest_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.guest_room_ceiling_light
    - conditions:
      - condition: trigger
        id: INCREMENT_CEILING_LIGHTS
      sequence:
      - alias: Turn light.guest_room_ceiling_light state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.guest_room_ceiling_light
          data:
            brightness_step_pct: 25
    - conditions:
      - condition: trigger
        id: DECREMENT_CEILING_LIGHTS
      sequence:
      - alias: Turn light.guest_room_ceiling_light state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          target:
            entity_id:
            - light.guest_room_ceiling_light
          data:
            brightness_step_pct: -25
    - conditions:
      - condition: trigger
        id: TOGGLE_HEATING
      sequence:
      - alias: Turn heating state=toggle
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          if:
            condition: state
            entity_id: climate.guest_room
            state: 'off'
          then:
            alias: Turn heating state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: ''
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - alias: Turn climate.guest_room state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: climate.set_hvac_mode
                  data:
                    hvac_mode: heat
                  entity_id: climate.guest_room
              - alias: Turn switch.schedule_guest_room_temperature state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id: switch.schedule_guest_room_temperature
          else:
            alias: Turn heating state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              alias: ''
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
              - alias: Turn climate.guest_room state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: climate.set_hvac_mode
                  data:
                    hvac_mode: 'off'
                  entity_id: climate.guest_room
              - alias: Turn switch.schedule_guest_room_temperature state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id: switch.schedule_guest_room_temperature
    - conditions:
      - condition: trigger
        id: INCREMENT_HEATING
      sequence:
      - alias: Turn heating state=increment
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_temperature
          target:
            entity_id: climate.guest_room
          data:
            temperature: '{{ (state_attr(''climate.guest_room'', ''temperature'')) + 1}}'
    - conditions:
      - condition: trigger
        id: DECREMENT_HEATING
      sequence:
      - alias: Turn heating state=decrement
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_temperature
          target:
            entity_id: climate.guest_room
          data:
            temperature: '{{ (state_attr(''climate.guest_room'', ''temperature'')) + -1}}'
  id: automation.zlb_gr_eight_key_knob_control_guest_room
- alias: ZL-GR Applies Different Scenes Based on Scene Selections (State Execution)-Guest Room
  trigger:
  - platform: state
    entity_id: input_select.guest_room_scene
  mode: restart
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: All White
      sequence:
        alias: All White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.guest_room_lamp_1
              - light.guest_room_lamp_2
          - alias: Turn light.guest_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.guest_room_ceiling_light
          - service: script.do_nothing
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Ceiling Light White
      sequence:
        alias: Ceiling Light White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_lamp_1
              - light.guest_room_lamp_2
          - service: script.do_nothing
          - alias: Turn light.guest_room_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.guest_room_ceiling_light
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Lamp LED White
      sequence:
        alias: Lamp LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_ceiling_light
          - alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.guest_room_lamp_1
              - light.guest_room_lamp_2
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: LED White
      sequence:
        alias: LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Hue
      sequence:
        alias: Hue
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.guest_room_lamp_1
            - light.guest_room_lamp_2
            - light.guest_room_ceiling_light
            state: 'off'
            rgb: non_rgb_only
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.guest_room_lamp_1
            - light.guest_room_lamp_2
            - light.guest_room_ceiling_light
        - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Night Mode
      sequence:
        alias: Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_room_night_mode
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Dark Night Mode
      sequence:
        alias: Dark Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_room_dark_night_mode
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Sleep Mode
      sequence:
        alias: Sleep Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_room_sleep_mode
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: All Off
      sequence:
        alias: All Off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_room_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_ceiling_light
          - alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_room_lamp_1
              - light.guest_room_lamp_2
          - service: script.do_nothing
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Lights on in hot sunshine
      sequence:
        alias: Lights on in hot sunshine
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_in_hot_sunshine_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
              else:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_in_hot_sunshine_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_in_hot_sunshine_guest_room
                state: 'on'
              then:
                alias: Turn cover.guest_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.guest_room_curtain
              else:
                alias: Turn cover.guest_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.guest_room_curtain
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Lights on when bright outdoor
      sequence:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
              else:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn cover.guest_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.guest_room_curtain
              else:
                alias: Turn cover.guest_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.guest_room_curtain
    - conditions:
      - condition: state
        entity_id: input_select.guest_room_scene
        state: Lights on when dark outdoor
      sequence:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_ceiling_light
              else:
                alias: Turn light.guest_room_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
              else:
                alias: Turn light.guest_room_lamp_1 light.guest_room_lamp_2 state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_room_lamp_1
                  - light.guest_room_lamp_2
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_guest_room
                state: 'on'
              then:
                alias: Turn cover.guest_room_curtain state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.open_cover
                    entity_id:
                    - cover.guest_room_curtain
              else:
                alias: Turn cover.guest_room_curtain state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  alias: ''
                  if:
                    condition: state
                    entity_id: input_boolean.always_on_constant
                    state: 'on'
                  then:
                  - service: cover.stop_cover
                    entity_id:
                    - cover.guest_room_curtain
                  - service: cover.close_cover
                    entity_id:
                    - cover.guest_room_curtain
  id: automation.zl_gr_applies_different_scenes_based_on_scene_selections_state_execution_guest_room
- alias: ZLB-GR Wall Switch - Double Press - Leave Room and Turn Off Everything-Guest Room
  trigger:
  - platform: state
    entity_id:
    - sensor.guest_room_wall_button
    - sensor.guest_room_wall_button_2
    to:
    - '2'
    - double
    - double_left
    - double_right
    - double_center
    - button_1_double
    - button_2_double
    - button_3_double
  action:
  - service: automation.trigger
    entity_id:
    - automation.zl_gr_lights_off_if_no_person_guest_room
    - automation.zh_gr_heating_schedule_off_if_people_left_the_room_guest_room
  - service: input_select.select_option
    target:
      entity_id: input_select.guest_room_occupancy
    data:
      option: Outside
  id: automation.zlb_gr_wall_switch_double_press_leave_room_and_turn_off_everything_guest_room
- alias: ZOc-GR Occupancy Update-Guest Room
  id: automation.zoc_gr_occupancy_update_guest_room
  trigger:
  - entity_id: group.guest_room_motion_group
    platform: state
    to: 'on'
  - entity_id: group.guest_room_motion_group
    platform: state
    to: 'off'
  - minutes: /5
    platform: time_pattern
  action:
    service: pyscript.room_occupancy_state_machine
    data:
      occupancy_entity_str: input_select.guest_room_occupancy
      motion_str: group.guest_room_motion_group
      motion_on_ratio_for_x_min_str: sensor.guest_room_motion_on_ratio_for_last_4_minutes
      motion_on_ratio_for_2x_min_str: sensor.guest_room_motion_on_ratio_for_last_8_minutes
      room_type: bedroom
      sleep_time: input_boolean.guest_room_sleep_time
      turn_to_outside_when_no_motion: 'no'
input_select:
  guest_room_scene:
    name: Guest Room Scene
    options:
    - Idle
    - Lamp LED White
    - All White
    - Ceiling Light White
    - All Off
  guest_room_occupancy:
    name: Guest Room Occupancy
    options:
    - Outside
    - Just Entered
    - Stayed Inside
    - In Sleep
sensor:
- platform: history_stats
  name: Guest Room Motion On Ratio For Last 4 Minutes
  entity_id: group.guest_room_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '4'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
- platform: history_stats
  name: Guest Room Motion On Ratio For Last 8 Minutes
  entity_id: group.guest_room_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '8'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
input_boolean:
  guest_room_sleep_time:
    name: Guest Room Sleep Time
  guest_room_heating_override:
    name: Guest Room Heating Override
    initial: 'off'
  curtain_control_when_left_guest_room:
    name: Curtain Control When Left Guest Room
  ceiling_light_control_in_hot_sunshine_guest_room:
    name: Ceiling Light Control In Hot Sunshine Guest Room
  lamp_control_in_hot_sunshine_guest_room:
    name: Lamp Control In Hot Sunshine Guest Room
  led_control_in_hot_sunshine_guest_room:
    name: Led Control In Hot Sunshine Guest Room
    initial: 'off'
  curtain_control_in_hot_sunshine_guest_room:
    name: Curtain Control In Hot Sunshine Guest Room
  ceiling_light_control_when_bright_outdoor_guest_room:
    name: Ceiling Light Control When Bright Outdoor Guest Room
  lamp_control_when_bright_outdoor_guest_room:
    name: Lamp Control When Bright Outdoor Guest Room
  led_control_when_bright_outdoor_guest_room:
    name: Led Control When Bright Outdoor Guest Room
    initial: 'off'
  curtain_control_when_bright_outdoor_guest_room:
    name: Curtain Control When Bright Outdoor Guest Room
  ceiling_light_control_when_dark_outdoor_guest_room:
    name: Ceiling Light Control When Dark Outdoor Guest Room
  lamp_control_when_dark_outdoor_guest_room:
    name: Lamp Control When Dark Outdoor Guest Room
  led_control_when_dark_outdoor_guest_room:
    name: Led Control When Dark Outdoor Guest Room
    initial: 'off'
  curtain_control_when_dark_outdoor_guest_room:
    name: Curtain Control When Dark Outdoor Guest Room
switch:
- platform: group
  name: 'Guest Room Wall Switch '
  entities: switch.0x00158d00047b69d2_switch
cover:
- platform: group
  name: Guest Room Curtain
  entities: cover.curtain_1050
template:
- binary_sensor:
  - name: Guest Room Heating Required
    state: '{% set climate = "climate.guest_room" %}{% if states(climate) == "unavailable" %}off{% else %} {{ ((state_attr(climate, "temperature")  > state_attr(climate, "current_temperature"))  and  (states(climate) != "off"))  }}{% endif %}'
- sensor:
  - name: Guest Room Temperature Sensor
    unit_of_measurement: "\xB0C"
    state: '{{states.sensor["582d343483e9_temperature"].state | float | round(1)}}'
- sensor:
  - name: Guest Room Wall Button
    state: '{{states.sensor["0x00158d00047b69d2_action"].state}}'
- sensor:
  - name: Guest Room Entrance Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["18c23c27fc55_illuminance"].state}}'
- sensor:
  - name: Guest Room Entrance Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["18c23c27fc55_battery"].state}}'
- sensor:
  - name: Guest Room Occupancy Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["dced8308f596_illuminance"].state}}'
- sensor:
  - name: Guest Room Bed Motion Sensor Light
    unit_of_measurement: lx
    state: '{{states.sensor["e0798dba9ae1_illuminance"].state}}'
- sensor:
  - name: Guest Room Bed Motion Sensor Battery
    unit_of_measurement: '%'
    state: '{{states.sensor["e0798dba9ae1_battery"].state}}'
binary_sensor:
- platform: group
  name: Guest Room Entrance Motion Sensor Motion
  entities: binary_sensor.18c23c27fc55_motion
- platform: group
  name: Guest Room Occupancy Sensor Occupancy
  entities: binary_sensor.dced8308f596_occupancy
- platform: group
  name: Guest Room Bed Motion Sensor Motion
  entities: binary_sensor.e0798dba9ae1_motion
light:
- platform: group
  name: Guest Room Ceiling Light
  entities: light.28d12735ea1e_light
- platform: group
  name: Guest Room Lamp 1
  entities: light.hue_ambiance_lamp_2
- platform: group
  name: Guest Room Lamp 2
  entities: light.hue_ambiance_lamp_3
adaptive_lighting:
- name: Guest Room
  lights:
  - light.guest_room_ceiling_light
  - light.guest_room_lamp_1
  - light.guest_room_lamp_2
  prefer_rgb_color: false
  transition: 45
  initial_transition: 1
  interval: 90
  min_brightness: 50
  max_brightness: 100
  min_color_temp: 2700
  max_color_temp: 4000
  sleep_brightness: 20
  sleep_color_temp: 2200
  take_over_control: true
  autoreset_control_seconds: 86400
  detect_non_ha_changes: false
  only_once: false
  adapt_only_on_bare_turn_on: true
  separate_turn_on_commands: false
  send_split_delay: 500
  adapt_delay: 0.5
  intercept: true
  multi_light_intercept: true
  include_config_in_attributes: false
group:
  guest_room_occupancy_group:
    name: Guest Room Occupancy Group
    entities:
    - input_select.guest_room_occupancy
    - group.guest_room_motion_group
    - binary_sensor.guest_room_entrance_motion_sensor_motion
    - binary_sensor.guest_room_bed_motion_sensor_motion
    - binary_sensor.guest_room_occupancy_sensor_occupancy
    - automation.zoc_gr_occupancy_update_guest_room
  guest_room_motion_group:
    name: Guest Room Motion Group
    entities:
    - binary_sensor.guest_room_entrance_motion_sensor_motion
    - binary_sensor.guest_room_bed_motion_sensor_motion
    - binary_sensor.guest_room_occupancy_sensor_occupancy
  guest_room_light_group:
    name: Guest Room Light Group
    entities:
    - light.guest_room_lamp_1
    - light.guest_room_lamp_2
    - light.guest_room_ceiling_light
  guest_room_window_group:
    name: Guest Room Window Group
    entities: []
  guest_room_curtain_group:
    name: Guest Room Curtain Group
    entities:
    - cover.guest_room_curtain
  guest_room_auto_gen_automations:
    name: Guest Room Auto Gen Automations
    entities:
    - input_boolean.curtain_control_when_left_guest_room
    - input_boolean.ceiling_light_control_in_hot_sunshine_guest_room
    - input_boolean.lamp_control_in_hot_sunshine_guest_room
    - input_boolean.curtain_control_in_hot_sunshine_guest_room
    - input_boolean.ceiling_light_control_when_bright_outdoor_guest_room
    - input_boolean.lamp_control_when_bright_outdoor_guest_room
    - input_boolean.curtain_control_when_bright_outdoor_guest_room
    - input_boolean.ceiling_light_control_when_dark_outdoor_guest_room
    - input_boolean.lamp_control_when_dark_outdoor_guest_room
    - input_boolean.curtain_control_when_dark_outdoor_guest_room
    - automation.zlb_gr_flex_wall_switch_on_postion_1_automatically_turn_on_the_wall_switch_back_when_turned_off_guest_room
    - automation.zl_gr_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_room
    - automation.zl_gr_lights_off_if_no_person_guest_room
    - automation.zl_gr_disable_entering_lights_on_automation_if_any_people_are_in_the_room_guest_room
    - automation.zh_gr_heating_schedule_on_if_staying_in_the_room_guest_room
    - automation.zh_gr_heating_schedule_off_if_people_left_the_room_guest_room
    - automation.zh_gr_heating_manual_override_guest_room
    - automation.zh_gr_valve_calibrate_temperature_using_external_sensor_guest_room
    - automation.zlb_gr_single_button_button_control_guest_room
    - automation.zlb_gr_eight_key_knob_control_guest_room
    - automation.zl_gr_applies_different_scenes_based_on_scene_selections_state_execution_guest_room
    - automation.zlb_gr_wall_switch_double_press_leave_room_and_turn_off_everything_guest_room
    - automation.zoc_gr_occupancy_update_guest_room
    - switch.0x00158d00047b69d2_switch
    - switch.0x00158d00047b69d2_wireless
    - switch.adaptive_lighting_sleep_mode_guest_room
