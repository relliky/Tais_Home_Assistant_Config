#############################################################################
# DO NOT MODIFY. This is an automatically generated file.                   # 
# Please modify the python source code under python_templates directory.    #
#############################################################################
automation:
- alias: ZL-GT Ceiling Lights On Or Open Curtains If Entering to Room-Guest Toilet
  id: automation.zl_gt_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_toilet
  trigger:
    entity_id:
    - group.guest_toilet_motion_group
    platform: state
    to: 'on'
  action:
  - service: automation.turn_off
    entity_id: automation.zl_gt_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_toilet
    data:
      stop_actions: false
  - service: script.call_room_scene
    data:
      room_scene_select: input_select.guest_toilet_scene
      scene: Idle
  - if:
    - condition: numeric_state
      entity_id: sensor.met_office_cambridge_city_airport_temperature_3_hourly
      above: '18'
    - condition: time
      after: 06:00:00
      before: '16:00:00'
    - condition: template
      value_template: '{{ now().month > 4 and now().month < 9 }}'
    - condition: state
      entity_id: input_boolean.always_off_constant
      state: 'on'
    then:
      alias: Lights on in hot sunshine
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - parallel:
          - if:
              condition: state
              entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_guest_toilet
              state: 'on'
            then:
              alias: Turn light.guest_toilet_ceiling_light state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_on
                entity_id:
                - light.guest_toilet_ceiling_light
            else:
              alias: Turn light.guest_toilet_ceiling_light state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: light.turn_off
                entity_id:
                - light.guest_toilet_ceiling_light
          - if:
              condition: state
              entity_id: input_boolean.lamp_control_in_hot_sunshine_guest_toilet
              state: 'on'
            then:
              service: script.do_nothing
            else:
              service: script.do_nothing
          - if:
              condition: state
              entity_id: input_boolean.led_control_in_hot_sunshine_guest_toilet
              state: 'on'
            then:
              alias: Turn switch.guest_toilet_floor_led state=on
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_on
                entity_id:
                - switch.guest_toilet_floor_led
            else:
              alias: Turn switch.guest_toilet_floor_led state=off
              if:
                condition: state
                entity_id: input_boolean.always_on_constant
                state: 'on'
              then:
                service: homeassistant.turn_off
                entity_id:
                - switch.guest_toilet_floor_led
          - if:
              condition: state
              entity_id: input_boolean.curtain_control_in_hot_sunshine_guest_toilet
              state: 'on'
            then:
              service: script.do_nothing
            else:
              service: script.do_nothing
    else:
      if:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      then:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_guest_toilet
                state: 'on'
              then:
                alias: Turn light.guest_toilet_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_toilet_ceiling_light
              else:
                alias: Turn light.guest_toilet_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_toilet_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_guest_toilet
                state: 'on'
              then:
                alias: Turn switch.guest_toilet_floor_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.guest_toilet_floor_led
              else:
                alias: Turn switch.guest_toilet_floor_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.guest_toilet_floor_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
      else:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_guest_toilet
                state: 'on'
              then:
                alias: Turn light.guest_toilet_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_toilet_ceiling_light
              else:
                alias: Turn light.guest_toilet_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_toilet_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_guest_toilet
                state: 'on'
              then:
                alias: Turn switch.guest_toilet_floor_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.guest_toilet_floor_led
              else:
                alias: Turn switch.guest_toilet_floor_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.guest_toilet_floor_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
- alias: ZL-GT Lights Off If No Person-Guest Toilet
  id: automation.zl_gt_lights_off_if_no_person_guest_toilet
  trigger:
  - platform: state
    entity_id: input_select.guest_toilet_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  condition:
  - condition: state
    entity_id: input_select.guest_toilet_occupancy
    state: Outside
  - condition: state
    entity_id: group.guest_toilet_motion_group
    state: 'off'
    for: 00:01:00
  action:
    parallel:
    - alias: Turn automation.zl_gt_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_toilet state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        service: homeassistant.turn_on
        entity_id: automation.zl_gt_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_toilet
    - if:
        condition: state
        entity_id: input_boolean.curtain_control_when_left_guest_toilet
        state: 'on'
      then:
        service: script.do_nothing
      else:
        service: script.do_nothing
    - service: script.do_nothing
    - alias: All Off
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - parallel:
        - alias: Turn light.guest_toilet_ceiling_light state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: light.turn_off
            entity_id:
            - light.guest_toilet_ceiling_light
        - service: script.do_nothing
        - alias: Turn switch.guest_toilet_floor_led state=off
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_off
            entity_id:
            - switch.guest_toilet_floor_led
- alias: ZL-GT Disable Entering Lights-on Automation If any People are in the Room-Guest Toilet
  trigger:
  - platform: state
    entity_id: input_select.guest_toilet_occupancy
    to:
    - Just Entered
    - In Sleep
    - Stayed Inside
  action:
  - delay: 00:00:10
  - service: automation.turn_off
    entity_id: automation.zl_gt_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_toilet
    data:
      stop_actions: 'false'
  id: automation.zl_gt_disable_entering_lights_on_automation_if_any_people_are_in_the_room_guest_toilet
- alias: ZH-GT Heating Schedule On If Staying In the Room-Guest Toilet
  id: automation.zh_gt_heating_schedule_on_if_staying_in_the_room_guest_toilet
  trigger:
  - platform: state
    entity_id: input_select.guest_toilet_occupancy
    from:
    - Just Entered
    - Outside
    to: Stayed Inside
  action:
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.guest_toilet
        state: heat
    then:
      alias: Turn heating state=on
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
        alias: ''
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - alias: Turn climate.guest_toilet state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: climate.set_hvac_mode
            data:
              hvac_mode: heat
            entity_id: climate.guest_toilet
        - alias: Turn switch.schedule_guest_toilet_temperature state=on
          if:
            condition: state
            entity_id: input_boolean.always_on_constant
            state: 'on'
          then:
            service: homeassistant.turn_on
            entity_id: switch.schedule_guest_toilet_temperature
- alias: ZH-GT Heating Schedule Off If People Left the Room-Guest Toilet
  id: automation.zh_gt_heating_schedule_off_if_people_left_the_room_guest_toilet
  trigger:
  - platform: state
    entity_id: input_select.guest_toilet_occupancy
    to: Outside
  - minutes: /5
    platform: time_pattern
  action:
  - condition: state
    entity_id: input_select.guest_toilet_occupancy
    state: Outside
  - condition: state
    entity_id: input_boolean.guest_toilet_heating_override
    state: 'off'
  - alias: Turn heating state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      alias: ''
      if:
        condition: state
        entity_id: input_boolean.always_on_constant
        state: 'on'
      then:
      - alias: Turn climate.guest_toilet state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: climate.set_hvac_mode
          data:
            hvac_mode: 'off'
          entity_id: climate.guest_toilet
      - alias: Turn switch.schedule_guest_toilet_temperature state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: homeassistant.turn_off
          entity_id: switch.schedule_guest_toilet_temperature
- alias: ZH-GT Heating Manual Override-Guest Toilet
  mode: restart
  trigger:
  - platform: state
    entity_id: input_boolean.guest_toilet_heating_override
  action:
  - if:
    - condition: state
      entity_id: input_boolean.guest_toilet_heating_override
      state: 'on'
    then:
    - service: automation.trigger
      entity_id:
      - automation.zh_gt_heating_schedule_on_if_staying_in_the_room_guest_toilet
    else:
    - service: automation.trigger
      entity_id:
      - automation.zh_gt_heating_schedule_off_if_people_left_the_room_guest_toilet
  id: automation.zh_gt_heating_manual_override_guest_toilet
- alias: ZH-GT Heating Manual Override Timeout in Few Hours-Guest Toilet
  trigger:
  - platform: state
    entity_id: input_boolean.guest_toilet_heating_override
    from: 'off'
    to: 'on'
  action:
  - delay:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: homeassistant.turn_off
    entity_id: input_boolean.guest_toilet_heating_override
  id: automation.zh_gt_heating_manual_override_timeout_in_few_hours_guest_toilet
- alias: ZH-GT Valve Calibrate Temperature Using External Sensor-Guest Toilet
  use_blueprint:
    path: calibrate_valve_temperature.yaml
    input:
      tado_valve_entity: climate.guest_toilet
      external_temperature_sensor_entity: sensor.guest_toilet_temperature_sensor
  id: automation.zh_gt_valve_calibrate_temperature_using_external_sensor_guest_toilet
- alias: ZL-GT Applies Different Scenes Based on Scene Selections (State Execution)-Guest Toilet
  trigger:
  - platform: state
    entity_id: input_select.guest_toilet_scene
  mode: restart
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: All White
      sequence:
        alias: All White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: script.do_nothing
          - alias: Turn light.guest_toilet_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.guest_toilet_ceiling_light
          - alias: Turn switch.guest_toilet_floor_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - switch.guest_toilet_floor_led
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Ceiling Light White
      sequence:
        alias: Ceiling Light White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: script.do_nothing
          - alias: Turn switch.guest_toilet_floor_led state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - switch.guest_toilet_floor_led
          - alias: Turn light.guest_toilet_ceiling_light state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_on
              entity_id:
              - light.guest_toilet_ceiling_light
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Lamp LED White
      sequence:
        alias: Lamp LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_toilet_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_toilet_ceiling_light
          - service: script.do_nothing
          - alias: Turn switch.guest_toilet_floor_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - switch.guest_toilet_floor_led
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: LED White
      sequence:
        alias: LED White
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_toilet_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_toilet_ceiling_light
          - service: script.do_nothing
          - alias: Turn switch.guest_toilet_floor_led state=on
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_on
              entity_id:
              - switch.guest_toilet_floor_led
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Hue
      sequence:
        alias: Hue
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.guest_toilet_ceiling_light
            - switch.guest_toilet_floor_led
            state: 'off'
            rgb: non_rgb_only
        - service: pyscript.turn_rgb_light
          data:
            light_list:
            - light.guest_toilet_ceiling_light
            - switch.guest_toilet_floor_led
        - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Night Mode
      sequence:
        alias: Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_toilet_night_mode
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Dark Night Mode
      sequence:
        alias: Dark Night Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_toilet_dark_night_mode
          - service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Sleep Mode
      sequence:
        alias: Sleep Mode
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - service: homeassistant.turn_on
            entity_id: scene.guest_toilet_sleep_mode
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: All Off
      sequence:
        alias: All Off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - alias: Turn light.guest_toilet_ceiling_light state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: light.turn_off
              entity_id:
              - light.guest_toilet_ceiling_light
          - service: script.do_nothing
          - alias: Turn switch.guest_toilet_floor_led state=off
            if:
              condition: state
              entity_id: input_boolean.always_on_constant
              state: 'on'
            then:
              service: homeassistant.turn_off
              entity_id:
              - switch.guest_toilet_floor_led
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Lights on in hot sunshine
      sequence:
        alias: Lights on in hot sunshine
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_in_hot_sunshine_guest_toilet
                state: 'on'
              then:
                alias: Turn light.guest_toilet_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_toilet_ceiling_light
              else:
                alias: Turn light.guest_toilet_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_toilet_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_in_hot_sunshine_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_in_hot_sunshine_guest_toilet
                state: 'on'
              then:
                alias: Turn switch.guest_toilet_floor_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.guest_toilet_floor_led
              else:
                alias: Turn switch.guest_toilet_floor_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.guest_toilet_floor_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_in_hot_sunshine_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Lights on when bright outdoor
      sequence:
        alias: Lights on when bright outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_bright_outdoor_guest_toilet
                state: 'on'
              then:
                alias: Turn light.guest_toilet_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_toilet_ceiling_light
              else:
                alias: Turn light.guest_toilet_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_toilet_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_bright_outdoor_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_bright_outdoor_guest_toilet
                state: 'on'
              then:
                alias: Turn switch.guest_toilet_floor_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.guest_toilet_floor_led
              else:
                alias: Turn switch.guest_toilet_floor_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.guest_toilet_floor_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_bright_outdoor_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
    - conditions:
      - condition: state
        entity_id: input_select.guest_toilet_scene
        state: Lights on when dark outdoor
      sequence:
        alias: Lights on when dark outdoor
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
        - parallel:
          - parallel:
            - if:
                condition: state
                entity_id: input_boolean.ceiling_light_control_when_dark_outdoor_guest_toilet
                state: 'on'
              then:
                alias: Turn light.guest_toilet_ceiling_light state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_on
                  entity_id:
                  - light.guest_toilet_ceiling_light
              else:
                alias: Turn light.guest_toilet_ceiling_light state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: light.turn_off
                  entity_id:
                  - light.guest_toilet_ceiling_light
            - if:
                condition: state
                entity_id: input_boolean.lamp_control_when_dark_outdoor_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
            - if:
                condition: state
                entity_id: input_boolean.led_control_when_dark_outdoor_guest_toilet
                state: 'on'
              then:
                alias: Turn switch.guest_toilet_floor_led state=on
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_on
                  entity_id:
                  - switch.guest_toilet_floor_led
              else:
                alias: Turn switch.guest_toilet_floor_led state=off
                if:
                  condition: state
                  entity_id: input_boolean.always_on_constant
                  state: 'on'
                then:
                  service: homeassistant.turn_off
                  entity_id:
                  - switch.guest_toilet_floor_led
            - if:
                condition: state
                entity_id: input_boolean.curtain_control_when_dark_outdoor_guest_toilet
                state: 'on'
              then:
                service: script.do_nothing
              else:
                service: script.do_nothing
  id: automation.zl_gt_applies_different_scenes_based_on_scene_selections_state_execution_guest_toilet
- alias: ZLB-GT Wall Switch - Single Left Press - Toggle Ceiling Light-Guest Toilet
  trigger:
  - platform: state
    entity_id:
    - sensor.guest_toilet_wall_button
    - sensor.guest_toilet_wall_button_2
    to:
    - single_left
  action:
  - alias: Turn light.guest_toilet_ceiling_light state=toggle
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      if:
      - alias: 'toggle everything all together: if any entity is on, turn off all entities, otherwise turn on all entities'
        condition: state
        entity_id:
        - light.guest_toilet_ceiling_light
        state: 'on'
        match: any
      then:
        alias: Turn light.guest_toilet_ceiling_light state=off
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_off
          entity_id:
          - light.guest_toilet_ceiling_light
      else:
        alias: Turn light.guest_toilet_ceiling_light state=on
        if:
          condition: state
          entity_id: input_boolean.always_on_constant
          state: 'on'
        then:
          service: light.turn_on
          entity_id:
          - light.guest_toilet_ceiling_light
  id: automation.zlb_gt_wall_switch_single_left_press_toggle_ceiling_light_guest_toilet
- alias: ZLB-GT Wall Switch - Double Press - Leave Room and Turn Off Everything-Guest Toilet
  trigger:
  - platform: state
    entity_id:
    - sensor.guest_toilet_wall_button
    - sensor.guest_toilet_wall_button_2
    to:
    - '2'
    - double
    - double_left
    - double_right
    - double_center
    - button_1_double
    - button_2_double
    - button_3_double
  action:
  - service: automation.trigger
    entity_id:
    - automation.zl_gt_lights_off_if_no_person_guest_toilet
    - automation.zh_gt_heating_schedule_off_if_people_left_the_room_guest_toilet
  - service: input_select.select_option
    target:
      entity_id: input_select.guest_toilet_occupancy
    data:
      option: Outside
  id: automation.zlb_gt_wall_switch_double_press_leave_room_and_turn_off_everything_guest_toilet
- alias: ZL-GT Turns On Sleep Mode In The Night-Guest Toilet
  trigger:
  - platform: time
    at: '23:00:00'
  action:
  - alias: Turn switch.adaptive_lighting_sleep_mode_guest_toilet state=on
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_on
      entity_id: switch.adaptive_lighting_sleep_mode_guest_toilet
  id: automation.zl_gt_turns_on_sleep_mode_in_the_night_guest_toilet
- alias: ZL-GT Turns Off Sleep Mode In The Morning-Guest Toilet
  trigger:
  - platform: time
    at: 06:30:00
  action:
  - alias: Turn switch.adaptive_lighting_sleep_mode_guest_toilet state=off
    if:
      condition: state
      entity_id: input_boolean.always_on_constant
      state: 'on'
    then:
      service: homeassistant.turn_off
      entity_id: switch.adaptive_lighting_sleep_mode_guest_toilet
  id: automation.zl_gt_turns_off_sleep_mode_in_the_morning_guest_toilet
- alias: ZOc-GT Occupancy Update-Guest Toilet
  trigger:
  - entity_id: group.guest_toilet_motion_group
    platform: state
    to: 'on'
  - entity_id: group.guest_toilet_motion_group
    platform: state
    to: 'off'
    for: 05:00:00
  - minutes: /5
    platform: time_pattern
  action:
  - service: pyscript.room_occupancy_state_machine
    data:
      occupancy_entity_str: input_select.guest_toilet_occupancy
      motion_str: group.guest_toilet_motion_group
      motion_on_ratio_for_x_min_str: sensor.guest_toilet_motion_on_ratio_for_last_4_minutes
      motion_on_ratio_for_2x_min_str: sensor.guest_toilet_motion_on_ratio_for_last_8_minutes
      room_type: toilet
  id: automation.zoc_gt_occupancy_update_guest_toilet
input_select:
  guest_toilet_scene:
    name: Guest Toilet Scene
    options:
    - Idle
    - LED White
    - All White
    - Ceiling Light White
    - All Off
  guest_toilet_occupancy:
    name: Guest Toilet Occupancy
    options:
    - Outside
    - Just Entered
    - Stayed Inside
    - In Sleep
sensor:
- platform: history_stats
  name: Guest Toilet Motion On Ratio For Last 4 Minutes
  entity_id: group.guest_toilet_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '4'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
- platform: history_stats
  name: Guest Toilet Motion On Ratio For Last 8 Minutes
  entity_id: group.guest_toilet_motion_group
  state: 'on'
  type: ratio
  duration:
    minutes: '8'
  end: '{{ (now() | as_timestamp) | as_datetime | as_local }}'
input_boolean:
  guest_toilet_heating_override:
    name: Guest Toilet Heating Override
    initial: 'off'
  curtain_control_when_left_guest_toilet:
    name: Curtain Control When Left Guest Toilet
    initial: 'off'
  ceiling_light_control_in_hot_sunshine_guest_toilet:
    name: Ceiling Light Control In Hot Sunshine Guest Toilet
    initial: 'off'
  lamp_control_in_hot_sunshine_guest_toilet:
    name: Lamp Control In Hot Sunshine Guest Toilet
    initial: 'off'
  led_control_in_hot_sunshine_guest_toilet:
    name: Led Control In Hot Sunshine Guest Toilet
    initial: 'off'
  curtain_control_in_hot_sunshine_guest_toilet:
    name: Curtain Control In Hot Sunshine Guest Toilet
    initial: 'off'
  ceiling_light_control_when_bright_outdoor_guest_toilet:
    name: Ceiling Light Control When Bright Outdoor Guest Toilet
  lamp_control_when_bright_outdoor_guest_toilet:
    name: Lamp Control When Bright Outdoor Guest Toilet
    initial: 'off'
  led_control_when_bright_outdoor_guest_toilet:
    name: Led Control When Bright Outdoor Guest Toilet
  curtain_control_when_bright_outdoor_guest_toilet:
    name: Curtain Control When Bright Outdoor Guest Toilet
    initial: 'off'
  ceiling_light_control_when_dark_outdoor_guest_toilet:
    name: Ceiling Light Control When Dark Outdoor Guest Toilet
  lamp_control_when_dark_outdoor_guest_toilet:
    name: Lamp Control When Dark Outdoor Guest Toilet
    initial: 'off'
  led_control_when_dark_outdoor_guest_toilet:
    name: Led Control When Dark Outdoor Guest Toilet
  curtain_control_when_dark_outdoor_guest_toilet:
    name: Curtain Control When Dark Outdoor Guest Toilet
    initial: 'off'
switch:
- platform: group
  name: Guest Toilet Wall Switch 1
  entities: switch.guest_toilet_wall_switch_left
- platform: group
  name: Guest Toilet Wall Switch 2
  entities: switch.guest_toilet_wall_switch_right
cover: []
template:
- binary_sensor:
  - name: Guest Toilet Heating Required
    state: '{% set climate = "climate.guest_toilet" %}{% if states(climate) == "unavailable" %}off{% else %} {{ ((state_attr(climate, "temperature")  > state_attr(climate, "current_temperature"))  and  (states(climate) != "off"))  }}{% endif %}'
- sensor:
  - name: Guest Toilet Temperature Sensor
    unit_of_measurement: "\xB0C"
    state: '{{states.sensor["a4c1387a7b78_temperature"].state | float | round(1)}}'
binary_sensor: []
light:
- platform: group
  name: Guest Toilet Ceiling Light
  entities: light.guest_toilet_ceiling_light_hue
adaptive_lighting:
- name: Guest Toilet
  lights:
  - light.guest_toilet_ceiling_light
  prefer_rgb_color: false
  transition: 45
  initial_transition: 1
  interval: 90
  min_brightness: 50
  max_brightness: 100
  min_color_temp: 2700
  max_color_temp: 4000
  sleep_brightness: 20
  sleep_color_temp: 2200
  take_over_control: true
  detect_non_ha_changes: false
  only_once: false
  adapt_only_on_bare_turn_on: true
  separate_turn_on_commands: true
  send_split_delay: 500
  adapt_delay: 0.5
  intercept: true
  multi_light_intercept: true
  include_config_in_attributes: false
group:
  guest_toilet_occupancy_group:
    name: Guest Toilet Occupancy Group
    entities:
    - input_select.guest_toilet_occupancy
    - group.guest_toilet_motion_group
    - binary_sensor.guest_toilet_motion_sensor_motion
  guest_toilet_motion_group:
    name: Guest Toilet Motion Group
    entities:
    - binary_sensor.guest_toilet_motion_sensor_motion
  guest_toilet_light_group:
    name: Guest Toilet Light Group
    entities:
    - switch.guest_toilet_floor_led
    - light.guest_toilet_ceiling_light
  guest_toilet_window_group:
    name: Guest Toilet Window Group
    entities: []
  guest_toilet_curtain_group:
    name: Guest Toilet Curtain Group
    entities: []
  guest_toilet_auto_gen_automations:
    name: Guest Toilet Auto Gen Automations
    entities:
    - input_boolean.ceiling_light_control_when_bright_outdoor_guest_toilet
    - input_boolean.led_control_when_bright_outdoor_guest_toilet
    - input_boolean.ceiling_light_control_when_dark_outdoor_guest_toilet
    - input_boolean.led_control_when_dark_outdoor_guest_toilet
    - automation.zl_gt_ceiling_lights_on_or_open_curtains_if_entering_to_room_guest_toilet
    - automation.zl_gt_lights_off_if_no_person_guest_toilet
    - automation.zl_gt_disable_entering_lights_on_automation_if_any_people_are_in_the_room_guest_toilet
    - automation.zh_gt_heating_schedule_on_if_staying_in_the_room_guest_toilet
    - automation.zh_gt_heating_schedule_off_if_people_left_the_room_guest_toilet
    - automation.zh_gt_heating_manual_override_guest_toilet
    - automation.zh_gt_heating_manual_override_timeout_in_few_hours_guest_toilet
    - automation.zh_gt_valve_calibrate_temperature_using_external_sensor_guest_toilet
    - automation.zl_gt_applies_different_scenes_based_on_scene_selections_state_execution_guest_toilet
    - automation.zlb_gt_wall_switch_single_left_press_toggle_ceiling_light_guest_toilet
    - automation.zlb_gt_wall_switch_double_press_leave_room_and_turn_off_everything_guest_toilet
    - automation.zl_gt_turns_on_sleep_mode_in_the_night_guest_toilet
    - automation.zl_gt_turns_off_sleep_mode_in_the_morning_guest_toilet
    - automation.zoc_gt_occupancy_update_guest_toilet
    - switch.guest_toilet_wall_switch_left
    - switch.guest_toilet_wall_switch_right
